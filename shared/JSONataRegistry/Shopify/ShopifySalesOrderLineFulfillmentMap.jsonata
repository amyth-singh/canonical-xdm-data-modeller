(
  /*
    Desc: Shopify Sales Order Mapper
    Author: Kurt Maile
    Status: In Dev
    Exclude Filter: test = true (.e dont map) - we need to ignore 'test' events
    Other Comments:

    Links:
      Order Events: https://shopify.dev/docs/api/admin-rest/2023-01/resources/event#order-events
      Order Entity: https://shopify.dev/docs/api/admin-rest/2023-01/resources/order
      Draft Order Entity: https://shopify.dev/docs/api/admin-rest/2023-01/resources/draftorder

    Todo:
     Look at the actual event resource itself not just the Order resource.

  */

  $upperTrim := $string ~> $trim ~> $uppercase;
  $cleanStr := $string ~> $trim;
  $stringBoolMap := {"Y":"Y","1":"Y","TRUE":"Y","N":"N","0":"N","FALSE":"Y"};
  $stringBool := function($value){$lookup($stringBoolMap, $upperTrim($value))};
  $buildEntityID := function($entityCode,$system,$rawEntityId){$replace($entityCode,".","_") & "_" & $system & "_" & $rawEntityId};
  $buildAttributeID := function($entityID,$AttributeCode,$AttributeId){$entityID & "_" & $replace($AttributeCode,".","_") & ($AttributeId = "" ? "" : "_" & $AttributeId)};

 
  /* ------------ START OF RAW INPUT DATA ------------ (Injected inn e.g Go / Dataform supplied) */
  
  /* Raw input data (injected config) enabling xdm derived values and actiing as templates */
  $rawSourceSystem := "Shopify";
  $rawSourceTimeZone := "Europe/London";
  $rawEventId := null; /*  TODO: 'id' for an event is the id, but sample is resource only so far*/
  $rawEventName := null;
  $rawEventNameList := [ /* Full lookup list and mappings can expect for 'Order' events from shopify with XF mappings*/
    {"systemEventName": "placed",                "xfuzeEventName": "SalesOrderPlaced"},
    {"systemEventName": "updated",               "xfuzeEventName": "SalesOrderUpdated"},
    {"systemEventName": "authorization_failure", "xfuzeEventName": "SalesOrderPaymentAuthFailed"},
    {"systemEventName": "authorization_pending", "xfuzeEventName": "SalesOrderPaymentAuthPending"},
    {"systemEventName": "authorization_success", "xfuzeEventName": "SalesOrderPaymentAuthSucceded"},
    {"systemEventName": "cancelled",             "xfuzeEventName": "SalesOrderCancelled"},
    {"systemEventName": "capture_failure",       "xfuzeEventName": "SalesOrderPaymentFailed"},
    {"systemEventName": "capture_pending",       "xfuzeEventName": "SalesOrderPaymentPending"},
    {"systemEventName": "capture_success",       "xfuzeEventName": "SalesOrderPaid"},
    {"systemEventName": "closed",                "xfuzeEventName": "SalesOrderClosed"},
    {"systemEventName": "re_opened",             "xfuzeEventName": "SalesOrderReopened"},
    {"systemEventName": "confirmed",             "xfuzeEventName": "SalesOrderAccepted"},
    {"systemEventName": "fulfillment_cancelled", "xfuzeEventName": "SalesOrderItemsFulfilmentCancelled"},
    {"systemEventName": "fulfillment_pending",   "xfuzeEventName": "SalesOrderItemsFulfilmentPending"},
    {"systemEventName": "fulfillment_success",   "xfuzeEventName": "SalesOrderItemsFulfilled"},
    {"systemEventName": "refund_failure",        "xfuzeEventName": "SalesOrderRefundFailed"},
    {"systemEventName": "refund_pending",        "xfuzeEventName": "SalesOrderRefundPending"},
    {"systemEventName": "refund_success",        "xfuzeEventName": "SalesOrderRefunded"},
    {"systemEventName": "restock_line_items",    "xfuzeEventName": "SalesOrderItemsRefunded"},
    {"systemEventName": "sale_failure",          "xfuzeEventName": "SalesOrderPaymentFailed"}, /*  TODO: whats diff to capture*/
    {"systemEventName": "sale_pending",          "xfuzeEventName": "SalesOrderPaymentPending"},
    {"systemEventName": "sale_success",          "xfuzeEventName": "SalesOrderPaid"},
    {"systemEventName": "void_failure",          "xfuzeEventName": "SalesOrderVoidFailed"},
    {"systemEventName": "void_pending",          "xfuzeEventName": "SalesOrderVoidPending"},
    {"systemEventName": "void_success",          "xfuzeEventName": "SalesOrderVoided"}    
  ];
  /* Lookup func for above */
  $rawEventXrefFn := function($rawName) {
    $rawEventNameList[systemEventName = $trim($rawName)].xfuzeEventName
  };

  $rawEntityId := $cleanStr(id); /* TODO: also 'subject_id' on the event*/
  $rawEntityType := NULL;  /* TODO: 'subject_type' on the event */
  $rawParentEntityId := (customer.id != null ? $cleanStr(customer.id) : NULL);
  $rawEntityPartyId := (customer.id != null ? $cleanStr(customer.id) : NULL);
  $rawEntityCustomerId := (customer.id != null ? $cleanStr(customer.id) : NULL);
  $rawEntitySalesStaffId := (customer.id != null ? $cleanStr(user_id) : NULL);
  $rawLocationId := (loction_id != null ? $cleanStr(loction_id) : NULL);
  $rawEntityLastUpdatedOn := updated_at;
  $rawEntityCreatedOn := created_at;
  /* Raw but mapped for derived event metadata usage */
  $rawEventOccurredTimestamp := updated_at;  /* clean update timestamp best for true world ordering. Not UTC yet */
  $rawEventProcessedTimestamp := null;     /* EPT is only set when centrally processed by event processors */
  $rawEventReceivedTimestamp := null;      /* noth*/
  $clientCode := "RND";
  /* ------------ END OF RAW INPUT DATA ------------ */

  
  /* ------------ START OF XFUZE COMMON DERIVED CONSTS & BASE FIELDS ------------ */

  /* Xfuze common event and entity constants used in derived mappings*/
  $event_eventCategory := "Shipment";
  $event_entityType := "SalesOrder";
  $event_defaultEventVerb := "Published"; 
  $event_eventValueStream := "Order2Cash";
  $event_eventType:= "TriggerEvent";
  $event_eventPriority:= "5";

  $entity_entityTypeHeader := "SalesOrder_Header" ;
  $entity_entityIdType := "System"; /* system mappings at this stage by connectors not merged xfuze*/


  /* Xfuze event and entity derived values */
  $event_eventName := ($rawEventName = null ? $event_entityType &  $event_defaultEventVerb : $rawEventName); /* convert to Xfuze eventName?*/
  $event_entityId := ($event_entityType & "_" & $rawSourceSystem & "_" & $rawEntityId);
  $event_parentEntityId := $entity_entityTypeCustomer  & "_" & $rawSourceSystem & "_" & $rawEntityCustomerId; /* Customer is parent of order*/
  $event_eventOccurredType = "TrueTime";
  $event_eventOccurredLocalTimeZone = $rawSourceTimeZone;
  $event_eventOccurredTimestamp := ($rawEventOccurredTimestamp = null ? $rawEventReceivedTimestamp : $rawEventOccurredTimestamp);
  $event_eventProcessedTimestamp := ($rawEventOccurredTimestamp = null ? $rawEventReceivedTimestamp : $rawEventOccurredTimestamp);
  $event_eventReceivedTimestamp := ($rawEventOccurredTimestamp = null ? $rawEventReceivedTimestamp : $rawEventOccurredTimestamp);
  $event_eventId := $event_eventName & "_" & $event_entityId & "_" & $event_eventOccurredTimestamp;  
 
  /* ------------ END OF XFUZE COMMON DERIVED CONSTS & BASE FIELDS ------------ */
  
  /* ------------ START OF XFUZE ENTITY SPECIFIC DERIVED CONSTS & BASE FIELDS ------------ */
  
  $orderIds_orderId := $event_entityId;
  $orderIds_headerId := $entity_entityTypeHeader & "_" & $rawSourceSystem & "_" & $rawEntityId;
  $partyIds_customerId := $entity_entityTypeCustomer  & "_" & $rawSourceSystem & "_" & $rawEntityCustomerId;
  $attMetadata_asOf := $event_eventOccurredTimestamp;

  /* Xfuze SalesOrder derived 'functions */


  /* $qtys_qtyCancelledFn - Cancelled is an update in place so needs to compare adjacent events to derive*/

  /* common Xfuze funcs*/
  $getDateDimFn := function($dt,$isUTC,$tz) { /* TODO: make this really precise depending on local or UTC */
    { 
          "DateId": $fromMillis($toMillis($dt),"[Y0001][M01][D01]"),
          "TimestampUTC": (isUTC ? $dt : NULL), /* TODO convert to utc*/
          "DateUTC": (isUTC ? $dt : NULL), /* TODO convert to date */
          "TimeZone": ($tz != null ? $tz : $rawSourceTimeZone),
          "DateTimeLocal": $fromMillis($toMillis($dt)),
          "DateLocal": $fromMillis($toMillis($dt),"[Y0001]-[M01]-[D01]"),
          "HourId": $fromMillis($toMillis($dt),"[H01]"),
          "Millis": $toMillis($dt)
    }
  };

$entity_entityIdType := "System"; /* system mappings at this stage by connectors not merged xfuze*/
$entity_salesOrder_entityCode := "SalesOrder";
$entity_salesOrder_entityId := $buildEntityID($entity_salesOrder_entityCode, $rawSourceSystem, $rawEntityId);
$entity_salesOrder_header_entityCode := "SalesOrder.Header";
$entity_salesOrder_header_entityId := $buildEntityID($entity_salesOrder_header_entityCode, $rawSourceSystem, $rawEntityId);
$entity_salesOrder_line_entityCode := "SalesOrder.Lines";
$entity_party_customer_entityCode := "PartyRole.Customer";
$entity_party_customer_entityId := $buildEntityID($entity_party_customer_entityCode, $rawSourceSystem, $rawEntityCustomerId);
$entity_product_base_entityCode := "Product.Base";
$entity_product_variant_entityCode := "Product.Variant";


/* ------------ END OF XFUZE ENTITY SPECIFIC DERIVED CONSTS & BASE FIELDS ------------ */

/* ------------ START OF XFUZE ENTITY SPECIFIC DERIVED CONSTS & BASE FIELDS ------------ */

{
  "SalesOrderEvent": {
    "TriggerEntity": {
      "OrderId": $orderIds_orderId,
      "EntityCode" : $entity_salesOrder_line_entityCode & ".FulfillmentLine", 
      "Lines": fulfillments.line_items#$i[].(
        {
          "LineId": $buildAttributeID($buildEntityID($entity_salesOrder_line_entityCode, $rawSourceSystem, $string(%.order_id)), "Fulfillment_" & $string(id),"Variant_" & $string(sku)), 
          "LineSeq" : $i+1,
          "HeaderId": $entity_salesOrder_header_entityId,
          "OrderId:": $entity_salesOrder_entityId,
          "CustomerId": $entity_party_customer_entityId,
          "ProductId": "Product_Base_Shopify_" & product_id,
          "ProductVariantId": "Product_Variant_Shopify_" & sku, /* new added as top level*/
          "Type" : { /* moved */
            "ClassCode": "Sales",
            "TypeCode": "Lines.Type.FulfillmentLine",
            "TypeDesc": "Fulfillment Line - capturing details of an individual fulfillment (one or more qty of one or more sales lines products) by a shipper", 
            "SubTypeCode": "Shipment", /* TBD, could be different types of fulfilment?  e.g CollectFromStore etc*/
            "SubTypeDesc": "Shipment",
            "AttMetadata": {
                "RawChangeTrackingHash": NULL, /* TODO */
                "IsEncrypted": NULL, /* Assumed N*/
                "SecuringKeyId": NULL,
                "AsOf": $attMetadata_asOf, 
                "EventId": $event_eventId,
                "RawSourceAtts": NULL /* No source atts*/
              }
          },
          "LineIds": [
            {
              "AttHeader": {
                "Id": $buildAttributeID($buildEntityID($entity_salesOrder_line_entityCode, $rawSourceSystem, $string(%.order_id)), "FulfillmentLine_" & $string(%.id) & "_" & $string(id),""),
                "RawId": $string(%.id) & "_" & $string(id),
                "Class": $entity_entityIdType,
                "Code": "Lines.FulfillmentLine.LineIds", 
                "Name": "LineId",
                "Desc": "Global, Unique LineId in the canonical format"
              },
              "AttMetadata": {
                "RawChangeTrackingHash": NULL,
                "IsEncrypted": NULL,
                "SecuringKeyId": NULL,
                "AsOf": $attMetadata_asOf,
                "EventId": $event_eventId,
                "RawSourceAtts": NULL
              }
            },
            {
              "AttHeader": {
                "Id": $buildAttributeID($buildEntityID($entity_salesOrder_line_entityCode, $rawSourceSystem, $string(%.order_id)), "FulfillmentLine_" & $string(%.id) & "_" & $string(id),""),
                "RawId": $string(%.id) & "_" & $string(sku), /* not unique if split deliveries for same product */
                "Class": $entity_entityIdType,
                "Code": "Lines.FulfillmentLine.LineIds",
                "Name": "LineId",
                "Desc": "Global, Unique LineId in the canonical format, linked to derived key - 'orderNUmber' + 'seq'"
              },
              "AttMetadata": {
                "RawChangeTrackingHash": NULL,
                "IsEncrypted": NULL,
                "SecuringKeyId": NULL,
                "AsOf": $attMetadata_asOf,
                "EventId": $event_eventId,
                "RawSourceAtts": NULL
              }
            }
          ],
          "PartyIds": [ 
            {
              "AttHeader": {
                "Id": "PartyRole_TrackingCompany_" & $string(%.tracking_company),
                "RawId": $string(%.tracking_company),
                "Class": $entity_entityIdType,
                "Code": "Lines.FulfillmentLine.PartyIds.TrackingCompany",
                "Name": "PartyIds.TrackingCompany",
                "Desc": "Global, Unique Party Id in the canonical format for the tracking company id e.g FedEx"
              },
              "AttMetadata": {
                "RawChangeTrackingHash": NULL,
                "IsEncrypted": NULL,
                "SecuringKeyId": NULL,
                "AsOf": $attMetadata_asOf,
                "EventId": $event_eventId,
                "RawSourceAtts": NULL
              }
            }
          ],
          "ProductIds":  NULL,
          "Status": [
            { 
              "AttHeader": {
                "Id": $buildAttributeID($buildEntityID($entity_salesOrder_line_entityCode, $rawSourceSystem, $string(%.order_id)), "FulfillmentLine_" & $string(%.id) & "_" & $string(id),"Status_FulfillmentStatus"),
                "RawId": $string(%.order_id) & "_" & $string(%.id) & "_" & $string(id),
                "Class": $entity_entityIdType,
                "Code": "Lines.FulfillmentLine.Status.FulfillmentStatus",
                "Name": "Status.FulfillmentStatus", 
                "Desc": "Fulfilment overall status (i.e parcel level) - possible values are ...."
              },
              "StatusValue" : $cleanStr(%.status),
              "SeqNo": NULL,
              "ReasonCode": NULL,
              "ReasonDesc": NULL,
              "StatusURL": NULL,
              "AttMetadata": {
                "RawChangeTrackingHash": NULL,
                "IsEncrypted": NULL, /* Assumed N*/
                "SecuringKeyId": NULL,
                "AsOf": $attMetadata_asOf, 
                "EventId": $event_eventId,
                "RawSourceAtts": [
                  {
                    "RawSourceSystem": $rawSourceSystem,
                    "RawSourceId": "fulfillments.status",
                    "RawSourceVal": $string(%.status)
                  }
                ]
              }
            },
            {
              "AttHeader": {
                "Id": $buildAttributeID($buildEntityID($entity_salesOrder_line_entityCode, $rawSourceSystem, $string(%.order_id)), "FulfillmentLine_" & $string(%.id) & "_" & $string(id),"Status_ShipmentStatus"),
                "RawId": $string(%.order_id) & "_" & $string(%.id) & "_" & $string(id),
                "Class": $entity_entityIdType,
                "Code": "Lines.FulfillmentLine.Status.ShipmentStatus",
                "Name": "Status.ShipmentStatus", 
                "Desc": "Fulfilment overall 'shipment' status, if applicable - possible values are ...."
              },
              "StatusValue" : $cleanStr(%.shipment_status),
              "SeqNo": NULL,
              "ReasonCode": NULL,
              "ReasonDesc": NULL,
              "StatusURL": NULL,
              "AttMetadata": {
                "RawChangeTrackingHash": NULL,
                "IsEncrypted": NULL, /* Assumed N*/
                "SecuringKeyId": NULL,
                "AsOf": $attMetadata_asOf, 
                "EventId": $event_eventId,
                "RawSourceAtts": [
                  {
                    "RawSourceSystem": $rawSourceSystem,
                    "RawSourceId": "fulfillments.shipment_status",
                    "RawSourceVal": $string(%.shipment_status)
                  }
                ]
              }
            },
            {
              "AttHeader": {
                "Id": $buildAttributeID($buildEntityID($entity_salesOrder_line_entityCode, $rawSourceSystem, $string(%.order_id)), "FulfillmentLine_" & $string(%.id) & "_" & $string(id),"Status_SalesLineFulfilmentStatus"),
                "RawId": $string(%.order_id) & "_" & $string(%.id) & "_" & $string(id),
                "Class": $entity_entityIdType,
                "Code": "Lines.FulfillmentLine.Status.SalesLineFulfilmentStatus",
                "Name": "Status.SalesLineFulfilmentStatus", 
                "StatusDesc": "Line specific fulfilment status of embedded sales line - possible values are ...."
              },
              "StatusValue" : $cleanStr(fulfillment_status), /* within each line_items */
              "SeqNo": NULL,
              "ReasonCode": NULL,
              "ReasonDesc": NULL,
              "StatusURL": NULL,
              "AttMetadata": {
                "RawChangeTrackingHash": NULL,
                "IsEncrypted": NULL, 
                "SecuringKeyId": NULL,
                "AsOf": $attMetadata_asOf, 
                "EventId": $event_eventId,
                "RawSourceAtts": [
                  {
                    "RawSourceSystem": $rawSourceSystem,
                    "RawSourceId": "fulfillments.line_items.fulfillment_status",
                    "RawSourceVal": $string(fulfillment_status)
                  }
                ]
              }
            }                         
          ],
          "Times": [
            {
              "AttHeader": {
                "Id": $buildAttributeID($buildEntityID($entity_salesOrder_line_entityCode, $rawSourceSystem, $string(%.order_id)), "FulfillmentLine_" & $string(%.id), "Times_CreatedOn"), /* taken out the filfillmentLine part to discuss*/
                "RawId": NULL, /* shiuyold be null? $string(%.order_id) & "_" & $string(%.id) */
                "Class": $entity_entityIdType,
                "Code": "Lines.FulfillmentLine.Times.CreatedOn",
                "Name": "Times.CreatedOn",
                "Desc": "Native source timestamp when the fulfillment order was created in source system - Local Timezone"
              },
              "TimeValue": $string(%.created_at), /* new */
              "DateDim": $getDateDimFn(%.created_at,true),
              "AttMetadata": {
                "RawChangeTrackingHash": NULL,
                "IsEncrypted": NULL, 
                "SecuringKeyId": NULL,
                "AsOf": $attMetadata_asOf, 
                "EventId": $event_eventId,
                "RawSourceAtts": [
                  {
                    "RawSourceSystem": $rawSourceSystem,
                    "RawSourceId": "fulfillments.created_at",
                    "RawSourceVal": $string(%.created_at)
                  }
                ]
              }
            },
            {
              "AttHeader": {
                "Id": $buildAttributeID($buildEntityID($entity_salesOrder_line_entityCode, $rawSourceSystem, $string(%.order_id)), "Fulfillment_" & $string(%.id), "Times_LastUpdatedOn"), /* taken out the filfillmentLine part to discuss*/
                "RawId": NULL, /* or updated_at? */
                "Class": $entity_entityIdType,
                "Code": "Lines.FulfillmentLine.Times.LastUpdatedOn",
                "Name": "Times.LastUpdatedOn",
                "Desc": "Native source timestamp when the order shipping fulfillment was last updated in source system - Local Timezone"
              },
              "TimeValue": $string(%.updated_at), /* new */
              "DateDim": $getDateDimFn(%.updated_at,true),
              "AttMetadata": {
                "RawChangeTrackingHash": NULL,
                "IsEncrypted": NULL, /* Assumed N*/
                "SecuringKeyId": NULL,
                "AsOf": $attMetadata_asOf, 
                "EventId": $event_eventId,
                "RawSourceAtts": [
                  {
                    "RawSourceSystem": $rawSourceSystem,
                    "RawSourceId": "fulfillments.updated_at",
                    "RawSourceVal": $string(%.updated_at)
                  }
                ]
              }
            }           
          ],
          "ProductAtts": [ /* denormalise from the header so repeasted per line*/
            {
              "AttHeader": {
                "Id": $buildAttributeID($buildEntityID($entity_salesOrder_line_entityCode, $rawSourceSystem, $string(%.order_id)), "Fulfillment_" & $string(%.id),"FulfillmentLine_" & $string(id) & "_ProductAtts"),
                "RawId": NULL, /* or updated_at? */
                "Class": $entity_entityIdType,
                "Code": "Lines.Fullfilment.ProductAtts",
                "Name": "ProductAtts",
                "Desc": "Fulfillment Line Product Atts"
              },
              
              "IsArray": "Y",
              "AttType": NULL,
              "AttValue": NULL,
              "AttValues": [
                {
                  "Type": "STRING",
                  "ValKey": "ProductNumber",
                  "Value": $string(product_id),
                  "IsEncrypted": "N",
                  "IsSensitive": "N"
                },
                {
                  "Type": "STRING",
                  "ValKey": "ProductVariantNumber",
                  "Value": $string(variant_id),
                  "IsEncrypted": "N",
                  "IsSensitive": "N"
                },
                {
                  "Type": "STRING",
                  "ValKey": "ProductName",
                  "Value": $string(title),
                  "IsEncrypted": "N",
                  "IsSensitive": "N"
                },
                {
                  "Type": "STRING",
                  "ValKey": "ProductVariantName",
                  "Value": $string(variant_title),
                  "IsEncrypted": "N",
                  "IsSensitive": "N"
                },
                {
                  "Type": "STRING",
                  "ValKey": "SKU",
                  "Value": $string(sku),
                  "IsEncrypted": "N",
                  "IsSensitive": "N"
                },
                {
                  "Type": "STRING",
                  "ValKey": "ProductVendor",
                  "Value": $string(vendor),
                  "IsEncrypted": "N",
                  "IsSensitive": "N"
                },
                {
                  "Type": "STRING",
                  "ValKey": "WeightGrams",
                  "Value": $string(grams),
                  "IsEncrypted": "N",
                  "IsSensitive": "N"
                }
              ],
              "AttMetadata": {
                "RawChangeTrackingHash": NULL, 
                "IsEncrypted": "N", 
                "SecuringKeyId": NULL,
                "AsOf": $attMetadata_asOf, 
                "EventId": $event_eventId,
                "RawSourceAtts": NULL /* TOOO */
              }
            }
          ],
          "Qtys": [ 
            {
              "AttHeader": {
                "Id": $buildAttributeID($buildEntityID($entity_salesOrder_line_entityCode, $rawSourceSystem, $string(%.order_id)), "Fulfillment_" & $string(%.id),"FulfillmentLine_" & $string(id) & "_Qtys_QtyFulfillmentPending"),
                "RawId": NULL, /* or updated_at? */
                "Class": $entity_entityIdType,
                "Code" : "Lines.FulfillmentLine.Qtys.QtyFulfillmentPending",
                "Name": "QtyFulfilled",
                "Desc": "Line quantity fulfilled for this line only"
              },
              "Amount": (fulfillment_status != 'fulfilled' ? quantity : 0),
              "AmountFloat": NULL,
              "AccountingMethodType": NULL,
              "UnitMeasure": NULL,
              "UnitType": NULL,
              "UnitScheme": NULL,
              "AttMetadata": {
                "RawChangeTrackingHash": NULL, 
                "IsAnonymised": "N", 
                "SecuringKeyId": NULL,
                "AsOf": $attMetadata_asOf, 
                "EventId": $event_eventId,
                "RawSourceAtts": [
                  {
                    "RawSourceSystem": $rawSourceSystem,
                    "RawSourceId": "line_items.quantity",
                    "RawSourceVal": $string(quantity)
                  }
                ]
              }
            },
            {
              "AttHeader": {
                "Id": $buildAttributeID($buildEntityID($entity_salesOrder_line_entityCode, $rawSourceSystem, $string(%.order_id)), "Fulfillment_" & $string(%.id),"FulfillmentLine_" & $string(id) & "_Qtys_QtyFulfilled"),
                "RawId": NULL, /* or updated_at? */
                "Class": $entity_entityIdType,
                "Code" : "Lines.FulfillmentLine.Qtys.QtyFulfilled",
                "Name": "QtyFulfilled",
                "Desc": "Line quantity fulfilled for this line only, when status is fulfilled"
              },
              "Amount": (fulfillment_status = 'fulfilled' ? quantity : 0),
              "AmountFloat": NULL,
              "AccountingMethodType": NULL,
              "UnitMeasure": NULL,
              "UnitType": NULL,
              "UnitScheme": NULL,
              "AttMetadata": {
                "RawChangeTrackingHash": NULL, 
                "IsAnonymised": "N", 
                "SecuringKeyId": NULL,
                "AsOf": $attMetadata_asOf, 
                "EventId": $event_eventId,
                "RawSourceAtts": [
                  {
                    "RawSourceSystem": $rawSourceSystem,
                    "RawSourceId": "line_items.quantity",
                    "RawSourceVal": $string(quantity)
                  }
                ]
              }
            }
          ],
          "Prices": NULL,
          "Totals": NULL,
          "Locations": [
            {
              "Id": $buildAttributeID($buildEntityID($entity_salesOrder_line_entityCode, $rawSourceSystem, $string(%.order_id)), "Fulfillment_" & $string(%.id),"Locations.FulfillmentProcessedAt"),
              "Code": "Lines.FulfillmentLine.Locations.FulfillmentProcessedAt",
              "Desc": "The Location that the fulfillment was processed at",
              "IsArray": "Y", /* "JW: IsSensitive at this level too for easy know whether to look into array*/
              "AttType": NULL,
              "AttValue": NULL,
              "AttValues": [
                {
                  "Type": "STRING",
                  "ValKey": "LocationId",
                  "Value": "Location_Shopify_" & $string(%.location_id),
                  "IsEncrypted": "N",
                  "IsSensitive": "N"
                },
                {
                  "Type": "STRING",
                  "ValKey": "RawLocationId",
                  "Value": $cleanStr(%.location_id),
                  "IsEncrypted": "N",
                  "IsSensitive": "N"
                },
                {
                  "Type": "STRING",
                  "ValKey": "AddressLine1",
                  "Value": $cleanStr(%.origin_address.address1),
                  "IsEncrypted": "N",
                  "IsSensitive": "N" /* no as not customer */
                }, 
                {
                  "Type": "STRING",
                  "ValKey": "AddressLine2",
                  "Value": $cleanStr(%.origin_address.address2),
                  "IsEncrypted": "N",
                  "IsSensitive": "N"
                },
                {
                  "Type": "STRING",
                  "ValKey": "City",
                  "Value": $cleanStr(%.origin_address.city),
                  "IsEncrypted": "N", 
                  "IsSensitive": "N"  
                },
                {
                  "Type": "STRING",
                  "ValKey": "County",
                  "Value": $cleanStr(%.origin_address.province_code),
                  "IsEncrypted": "N",                     
                  "IsSensitive": "N" 
                }, 
                {
                  "Type": "STRING",
                  "ValKey": "CountryCode2", /* JW: need a code for ISO 2*/
                  "Value": $cleanStr(%.origin_address.country_code),
                  "IsEncrypted": "N",                     
                  "IsSensitive": "N" 
                },
                {
                  "Type": "STRING",
                  "ValKey": "Postcode",
                  "Value": $cleanStr(%.origin_address.zip),
                  "IsEncrypted": "N",                     
                  "IsSensitive": "Y"
                }
              ],
              "AttMetadata": {
                "RawChangeTrackingHash": NULL, /*  TODO: hash of all raw values*/
                "IsAnonymised": "N", 
                "SecuringKeyId": NULL,
                "AsOf": $attMetadata_asOf, 
                "EventId": $event_eventId,
                "RawSourceAtts": [
                {
                  "RawSourceSystem": $rawSourceSystem,
                  "RawSourceId": "customer.default_address",
                  "RawSourceVal": $string(customer.default_address)
                }
                ]
              }
            }
          ],
          "FulfilmentAtts": [
            {
              "Id": $buildAttributeID($buildEntityID($entity_salesOrder_line_entityCode, $rawSourceSystem, $string(%.order_id)), "Fulfillment_" & $string(%.id),"FulfillmentLine_" & $string(id) & "_FulfilmentAtts"),
              "Code": "Lines.FulfillmentAtts.TrackingAtts",
              "Desc": "Line Fulfilment Attributes",
              "IsArray": "Y",
              "AttType": NULL,
              "AttValue": NULL,
              "AttValues": [
                {
                  "Type": "STRING",
                  "ValKey": "FulfillmentService",
                  "Value": $cleanStr(tracking_company),
                  "IsEncrypted": "N",
                  "IsSensitive": "N"
                },
                {
                  "Type": "STRING",
                  "ValKey": "TrackingNumber",
                  "Value": $stringBool(tracking_number),
                  "IsEncrypted": "N",
                  "IsSensitive": "N"
                },
                {
                  "Type": "STRING",
                  "ValKey": "TrackingNumbers",
                  "Value": $cleanStr(tracking_numbers),
                  "IsEncrypted": "N",
                  "IsSensitive": "N"
                },
                {
                  "Type": "STRING",
                  "ValKey": "TrackingURL",
                  "Value": $stringBool(tracking_url),
                  "IsEncrypted": "N",
                  "IsSensitive": "N"
                },
                {
                  "Type": "STRING",
                  "ValKey": "TrackingURLs",
                  "Value": $cleanStr(tracking_urls),
                  "IsEncrypted": "N",
                  "IsSensitive": "N"
                }
              ],
              "AttMetadata": {
                "RawChangeTrackingHash": NULL, 
                "IsEncrypted": "N", 
                "SecuringKeyId": NULL,
                "AsOf": $attMetadata_asOf, 
                "EventId": $event_eventId,
                "RawSourceAtts": [
                  {
                    "RawSourceSystem": $rawSourceSystem,
                    "RawSourceId": "line_items.fulfillment_service",
                    "RawSourceVal": $string(fulfillment_service)
                  },
                   {
                    "RawSourceSystem": $rawSourceSystem,
                    "RawSourceId": "line_items.requires_shipping",
                    "RawSourceVal": $string(requires_shipping)
                  },
                   {
                    "RawSourceSystem": $rawSourceSystem,
                    "RawSourceId": "line_items.variant_inventory_management",
                    "RawSourceVal": $string(variant_inventory_management)
                  }
                ]
              }
            }
          ],
          "FinanceAtts": [
            {
              "AttId": $buildAttributeID($buildEntityID($entity_salesOrder_line_entityCode, $rawSourceSystem, $string(id)), "Lines.FinanceAtts",""),
              "AttCode": "Lines.FinanceAtts.IsTaxable",
              "AttDesc": "Line Financial Attributes",
              "IsArray": "N",
              "AttType": "STRING",
              "AttValue": $stringBool(taxable),
              "AttValues": NULL,

              "AttMetadata": {
                "RawChangeTrackingHash": NULL, 
                "IsEncrypted": "N", 
                "SecuringKeyId": NULL,
                "AsOf": $attMetadata_asOf, 
                "EventId": $event_eventId,
                "RawSourceAtts": [
                  {
                    "RawSourceSystem": $rawSourceSystem,
                    "RawSourceId": "line_items.taxable",
                    "RawSourceVal": $string(taxable)
                  }
                ]
              }
            }
          ],
          "Metrics": [ /* Key to support if breaking*/
            {
              "AttId": $buildAttributeID($orderIds_headerId, "Metrics.NumFulfillmentSalesLines",""),
              "AttCode": "Lines.FulfillmentLine.Metrics.NumFulfillmentSalesLines",
              "AttDesc": "Metric Field - Num sales lines with some quantity in the fulfilment (partial or all) at (relative) event time",
              "AttType": "Single",
              "AttValue": $count(line_items),
              "AttValues": NULL,

              "AttMetadata": {
                "RawChangeTrackingHash": NULL,
                "IsEncrypted": NULL, /* Assumed N*/
                "SecuringKeyId": NULL,
                "AsOf": $attMetadata_asOf, 
                "EventId": $event_eventId,
                "RawSourceAtts": NULL
              }
            },
            {
              "AttId": $buildAttributeID($orderIds_headerId, "Metrics.NumTrackingNumbers",""),
              "AttCode": "Lines.FulfillmentLine.Metrics.NumTrackingNumbers",
              "AttDesc": "Metric Field - Num tracking number lines at (relative) event time",
              "AttType": "Single",
              "AttValue": $count(tracking_numbers),
              "AttValues": NULL,

              "AttMetadata": {
                "RawChangeTrackingHash": NULL,
                "IsEncrypted": NULL, /* Assumed N*/
                "SecuringKeyId": NULL,
                "AsOf": $attMetadata_asOf, 
                "EventId": $event_eventId,
                "RawSourceAtts": NULL
              }
            }                  
          ],
          "Links": [ 
            {
              "LinkId": "dolore reprehenderit minim ut",
              "LinkType": "amet laboris eu",
              "LinkCode": "in consequat",
              "FromEntityId": "irure",
              "ToEntityId": "laboris do sunt consequat",
              "LinkStatus": "non aute id nulla quis",
              "LinkName": "laborum mollit incididunt",

              "AttMetadata": {
                "RawChangeTrackingHash": NULL,
                "IsEncrypted": NULL, /* Assumed N*/
                "SecuringKeyId": NULL,
                "AsOf": $attMetadata_asOf, 
                "EventId": $event_eventId,
                "RawSourceAtts": [
                  {
                    "RawSourceSystem": $rawSourceSystem,
                    "RawSourceId": "sed",
                    "RawSourceVal": "velit commodo ut"
                  }
                ]
              }
            }
          ],
          "CustomAtts": NULL
        }
      )
    }
  }
}

)