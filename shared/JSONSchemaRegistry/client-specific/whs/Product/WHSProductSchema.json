{
  "properties": {
    "EntityId": {
      "type": "string",
      "description": "The (required) globally unique synthetic Xfuze Id for the entity instance this event is related to and whose payload is the subject of change, unique across all entities. Typically of the format [EntityType::EntitySubType]_[SystemCode]_[RawEntityId] where RawEntityId can be composed of 1 or more source fields to create singular uniqueness e.g SalesOrderLine::Return_Hybris_8106008620_RET1"
    },
    "EntityType": {
      "type": "string",
      "description": "The (required) entity type, allowing for a typing system (top level) for entities, where the type is sourced from the master Xfuze control list e.g SalesOrderLine"
    },
    "EntitySubType": {
      "type": "string",
      "description": "An (optional) entity subtype, allowing for further, more refined typing of the core type for accuracy of interpretation e.g ReturnLine, CancelLine, VoidLine etc"
    },
    "ParentEntityId": {
      "type": "string",
      "description": "An (required) canonical Xfuze parent entity Id, where there is a natural parent a level above, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
    },
    "ParentEntityType": {
      "type": "string",
      "description": "An (required) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
    },
    "CompositeEntityId": {
      "type": "string",
      "description": "An (optional) canonical Xfuze parent entity Id, where there is a natural 'composition' and containing parent, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
    },
    "CompositeEntityType": {
      "type": "string",
      "description": "An (optional) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
    },
    "RawEntityId": {
      "type": "string",
      "description": "An (optional) raw/native key used to derived EntityId.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
    },
    "EventId": {
      "type": "string",
      "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata.EventAtts.Xfuze.EventId for business definition"
    },
    "EventName": {
      "type": "string",
      "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata.EventAtts.Xfuze.EventName for business definition"
    },
    "EventOccurredDateUTC": {
      "type": "string",
      "format": "date-time",
      "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata.TimeAtts.Xfuze.Times.* for business definition"
    },
    "EventOccurredDateLocal": {
      "type": "string",
      "format": "date-time",
      "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata.TimeAtts.Xfuze.Times.* for business definition"
    },
    "EventOccurredTimestampUTC": {
      "type": "string",
      "format": "date-time",
      "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata.TimeAtts.Xfuze.Times.* for business definition"
    },
    "EventOccurredTimestampLocal": {
      "type": "string",
      "format": "date-time",
      "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata.TimeAtts.Xfuze.Times.* for business definition"
    },
    "EventOccurredTimestampPartyLocal": {
      "type": "string",
      "format": "date-time",
      "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata.TimeAtts.Xfuze.Times.* for business definition"
    },
    "EventReceivedTimestampUTC": {
      "type": "string",
      "format": "date-time",
      "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata.TimeAtts.Xfuze.Times.* for business definition"
    },
    "DataPayloadHash": {
      "type": "string",
      "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata.PayloadAtts.Xfuze.DataPayloadHash for business definition"
    },
    "EventMetadata": {
      "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata for business definition",
      "$id": "https://xfuze.io/xdm/schema/components/event/common/EventMetadata",
      "title": "EventMetadata",
      "type": "object",
      "unevaluatedProperties": false,
      "properties": {
        "EventAtts": {
          "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/EventAtts",
          "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/EventAtts'",
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "Xfuze": {
              "type": "object",
              "description": "The (required) Xfuze derived / enriched attributes that define the context of the event itself",
              "unevaluatedProperties": false,
              "properties": {
                "EventId": {
                  "type": "string",
                  "description": "The (required) globally unique synthetic Xfuze ID for this event instance, unique across all events. Typically of the format [EventName]_[EntityId]_[EventUniqueWatermark] e.g SalesOrderItemsDelivered_SalesOrderDelivery_Hybris_8106008620_JVGL06053_2023-01-12T12:03:00+00:00"
                },
                "EventCategory": {
                  "type": "string",
                  "description": "The (required) event category of this domain event (refer controlled list of allowed values) e.g SalesOrder"
                },
                "EventName": {
                  "type": "string",
                  "description": "The (required) event name defines the 'type' of the event (in business terms) and key for routing to specific event handlers (refer to controlled list of allowed values per entity type).  Format is [EntityType][VerbPastTense] e.g SalesOrderItemsDelivered"
                },
                "EventClass": {
                  "type": "string",
                  "description": "The class of the event as defined by where this event instance was generated e.g TriggerEvent",
                  "enum": [
                    "RawDataEvent",
                    "TriggerEvent",
                    "ProcessedEvent",
                    "DerivedEvent"
                  ]
                },
                "EventChangePattern": {
                  "type": "string",
                  "description": "The type of triggering data/change pattern of the source that resulted in this event e.g BusinessEvent",
                  "enum": [
                    "CDCEvent",
                    "FullSnapshot",
                    "BusinessEvent",
                    "NotificationEvent"
                  ]
                },
                "EventValueStream": {
                  "type": "string",
                  "description": "The retail value stream this event is related to e.g Order2Cash",
                  "enum": [
                    "Order2Cash",
                    "Return2Refund",
                    "Product2Offer",
                    "Purchase2Pay",
                    "Forecast2Stock",
                    "Issue2Resolution",
                    "Concept2Customer",
                    "Hire2Retire",
                    "Market2Lead",
                    "Lead2Conversion"
                  ]
                },
                "BizCapabilityL0": {
                  "type": "string",
                  "description": "The Level 0 (top) of Xiatech's Industry Specific Business Capability Model (i.e Retail BCM Model) e.g Sell"
                },
                "BizCapabilityL1": {
                  "type": "string",
                  "description": "The Level 1 (top) of Xiatech's Industry Specific Business Capability Model (i.e Retail BCM Model) e.g Sell & Serve"
                },
                "BizCapabilityL2": {
                  "type": "string",
                  "description": "The Level 2 (top) of Xiatech's Industry Specific Business Capability Model (i.e Retail BCM Model) e.g Process Returns & Exchanges"
                },
                "ClientCode": {
                  "type": "string",
                  "description": "An (required) client code used for event ownership and billing attribution where required e.g GSR"
                },
                "EnvCode": {
                  "type": "string",
                  "description": "The Xfuze env this event was generated in e.g xfuze-crew-prd"
                },
                "ConnectorInstance": {
                  "type": "string",
                  "description": "The instance of the Xfuze smart connector that generated this event e.g pod instance id"
                },
                "ConnectorType": {
                  "type": "string",
                  "description": "The type of the connector e.g csv-writer"
                },
                "Note": {
                  "type": "string",
                  "description": "An (optional) free form test field to add some comment to the note, typically for testing purposes e.g (Test case name, or a prod smoke test)"
                },
                "IsDerivedEvent": {
                  "type": "string",
                  "description": "String bool indicator for whether this event is a derived one (i.e derived from a processedEvent such as 'CustomerLastNameChanged' derived off 'CustomerProfileUpdated' e.g 'N'",
                  "enum": [
                    "Y",
                    "N",
                    "U"
                  ]
                }
              },
              "required": [
                "EventId",
                "EventCategory",
                "EventName",
                "EventClass",
                "EventChangePattern",
                "ClientCode",
                "EnvCode"
              ]
            },
            "Origin": {
              "type": "object",
              "description": "The (required) 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
              "unevaluatedProperties": false,
              "properties": {
                "EventId": {
                  "type": "string",
                  "description": "Raw form (optional) of the input eventId from the source, used in transforming to 'Xfuze' representations e.g d1d982ef-6dc6-47bb-80fb-2eaaf572deca"
                },
                "EventName": {
                  "type": "string",
                  "description": "Raw form (optional) of the input eventName from the source, used in transforming to 'Xfuze' representations e.g ORDER_PARCEL_DELIVERED"
                },
                "SourceSystem": {
                  "type": "string",
                  "description": "The (required) Xfuze system code of the external source system that is the genesis of the raw data trigger e.g Hybris"
                },
                "SourceSubSystem": {
                  "type": "string",
                  "description": "The (optional) Xfuze subsystem system code of the external (sub) source system that is the genesis of the raw data trigger e.g OrdersAPI"
                },
                "SourceFormatType": {
                  "type": "string",
                  "description": "The (required) code of the data interchange format of the raw data e.g JSON",
                  "enum": [
                    "JSON",
                    "CSV",
                    "XML",
                    "YAML",
                    "BINARY",
                    "EXCEL",
                    "Other"
                  ]
                },
                "CorrelationId": {
                  "type": "string",
                  "description": "The (optional) external correlation Id as provided by the source (often, but not always, the same as the rawEventId) e.g 3e35cec2-050d-4334-b564-5f1ce704a5f8"
                },
                "EnvCode": {
                  "type": "string",
                  "description": "The external client env the raw data was generated from in e.g production"
                }
              },
              "required": [
                "SourceSystem",
                "SourceFormatType"
              ]
            }
          },
          "required": [
            "Xfuze",
            "Origin"
          ]
        },
        "EntityAtts": {
          "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventAtts",
          "description": "XDM Schema for the common event component 'EventHeader/EventAtts'",
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "Xfuze": {
              "type": "object",
              "description": "The (required) Xfuze derived / enriched attributes that define the context of the entity the event is changing / notifying on",
              "unevaluatedProperties": false,
              "properties": {
                "EntityId": {
                  "type": "string",
                  "description": "The (required) globally unique synthetic Xfuze Id for the entity instance this event is related to and whose payload is the subject of change, unique across all entities. Typically of the format [EntityType::EntitySubType]_[SystemCode]_[RawEntityId] where RawEntityId can be composed of 1 or more source fields to create singular uniqueness e.g SalesOrderLine::Return_Hybris_8106008620_RET1"
                },
                "EntityType": {
                  "type": "string",
                  "description": "The (required) entity type, allowing for a typing system (top level) for entities, where the type is sourced from the master Xfuze control list e.g SalesOrderLine"
                },
                "EntitySubType": {
                  "type": "string",
                  "description": "An (optional) entity subtype, allowing for further, more refined typing of the core type for accuracy of interpretation e.g ReturnLine, CancelLine, VoidLine etc"
                },
                "EntityVariation": {
                  "type": "string",
                  "description": "An (optional) instance variation of the type of entity and is contextual to the type of entity under change e.g RetailTransaction"
                },
                "EntityDomain": {
                  "type": "string",
                  "description": "The (required) core entity domain, sourced from the master Xfuze control list e.g SalesOrder",
                  "enum": [
                    "Customer",
                    "Product",
                    "Sales",
                    "SupplyChain",
                    "Inventory",
                    "Marketing",
                    "DigitalActivity",
                    "Finance",
                    "Analytics",
                    "Common",
                    "Other"
                  ]
                },
                "EntityClass": {
                  "type": "string",
                  "description": "The (required) class of the entity in this event, representing the levelling / granularity of the entity state being transferred and contained e.g Composite (multi entity composite)",
                  "enum": [
                    "Composite",
                    "Base",
                    "Raw",
                    "Analytical",
                    "Notification"
                  ]
                },
                "ParentEntityId": {
                  "type": "string",
                  "description": "An (required) canonical Xfuze parent entity Id, where there is a natural 'composition' and containing parent, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
                },
                "ParentEntityType": {
                  "type": "string",
                  "description": "An (required) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                },
                "CompositeEntityId": {
                  "type": "string",
                  "description": "An (required) canonical Xfuze composite (root) entity Id, where there is a natural 'composition' and containing parent, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
                },
                "CompositeEntityType": {
                  "type": "string",
                  "description": "An (required) canonical Xfuze composite (root) entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                },
                "EntityStatusCode": {
                  "type": "string",
                  "description": "An (optional) canonical Xfuze entity status, often key for events and the state transition happening with the entity. e.g InProgress"
                },
                "EntityStatusDesc": {
                  "type": "string",
                  "description": "An (optional) canonical Xfuze entity status, often key for events and the state transition happening with the entity. e.g Line Processing In-Progress"
                },
                "IsSensitive": {
                  "type": "string",
                  "description": "e.g Y",
                  "enum": [
                    "Y",
                    "N",
                    "U"
                  ]
                }
              },
              "required": [
                "EntityId",
                "EntityType",
                "ParentEntityId",
                "ParentEntityType",
                "CompositeEntityId",
                "CompositeEntityType",
                "EntityDomain",
                "IsSensitive"
              ]
            },
            "Origin": {
              "type": "object",
              "description": "The (required) 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
              "unevaluatedProperties": false,
              "properties": {
                "EntityId": {
                  "type": "string",
                  "description": "Raw form (required) of the input EntityId from the source, used in transforming to 'Xfuze' representations e.g 8106008620_RET1"
                },
                "ParentEntityId": {
                  "type": "string",
                  "description": "Raw form (optional) of the input EntityId from the source, used in transforming to 'Xfuze' representations e.g 8106008620"
                },
                "EntityStatusCode": {
                  "type": "string",
                  "description": "Raw form (optional) of the input EntityId from the source, used in transforming to 'Xfuze' representations e.g INPROGRESS"
                }
              },
              "required": [
                "EntityId"
              ]
            }
          },
          "required": [
            "Xfuze",
            "Origin"
          ]
        },
        "TimeAtts": {
          "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/TimeAtts",
          "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/TimeAtts'",
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "Xfuze": {
              "type": "object",
              "description": "The (required) Xfuze derived / enriched attributes that define the context of the time points (external / internal) related to the event is changing / notifying on",
              "unevaluatedProperties": false,
              "properties": {
                "TimeZones": {
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "HomeTimeZone": {
                      "description": "A TimeZone object (required) representing the main 'home' timezone the client is and reports form",
                      "type": "object",
                      "required": [
                        "TimeZone"
                      ],
                      "unevaluatedProperties": false,
                      "properties": {
                        "TimeZone": {
                          "type": "string",
                          "description": "The Time Zone e.g Europe/London"
                        },
                        "TimeZoneOffset": {
                          "type": "string",
                          "description": "UTC+01:00"
                        },
                        "TimeZoneExplicitCode": {
                          "type": "string",
                          "description": "Indicates whether the timeZone offset is explicit in the source (e.g +01:00) or implicit (e.g assumed to be +01:00, and thus reformatting work is needed to make explicit)",
                          "enum": [
                            "ExplicitOffsetInSource",
                            "ImplicitOffsetNotInSource"
                          ]
                        },
                        "Country": {
                          "description": "The country of the timezone",
                          "type": "object",
                          "anyOf": [
                            {
                              "properties": {
                                "ISO2": {
                                  "type": "string",
                                  "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                }
                              },
                              "required": [
                                "ISO2"
                              ]
                            },
                            {
                              "properties": {
                                "ISO3": {
                                  "type": "string",
                                  "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                }
                              },
                              "required": [
                                "ISO3"
                              ]
                            }
                          ],
                          "unevaluatedProperties": false,
                          "properties": {
                            "CountryCode": {
                              "type": "string",
                              "description": "The canonical CountryCode (country-code) country code e.g 036"
                            },
                            "Name": {
                              "type": "string",
                              "description": "The canonical (official) 'Name' of the country e.g Australia"
                            },
                            "AltName": {
                              "type": "string",
                              "description": "An alternate name for the country"
                            },
                            "RegionCode": {
                              "type": "string",
                              "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                            },
                            "RegionName": {
                              "type": "string",
                              "description": "The canonical RegionName (region) for the country code e.g Oceania"
                            },
                            "SubRegionCode": {
                              "type": "string",
                              "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                            },
                            "SubRegionName": {
                              "type": "string",
                              "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                            },
                            "IntermediateRegionCode": {
                              "type": "string",
                              "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                            },
                            "IntermediateRegionName": {
                              "type": "string",
                              "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                            },
                            "Coordinates": {
                              "description": "The canonical Coordinates of the country (canonical from google)",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "Latitude": {
                                  "type": "number",
                                  "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                  "minimum": -90,
                                  "maximum": 90
                                },
                                "Longitude": {
                                  "type": "number",
                                  "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                  "minimum": -180,
                                  "maximum": 180
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              },
                              "required": [
                                "Latitude",
                                "Longitude"
                              ]
                            },
                            "PrimaryLanguage": {
                              "type": "string",
                              "description": "The canonical Primary Language of the country"
                            },
                            "Currency": {
                              "description": "The canonical Currency Code of the country (canonical from google)",
                              "type": "object",
                              "anyOf": [
                                {
                                  "required": [
                                    "ISO2"
                                  ]
                                },
                                {
                                  "required": [
                                    "ISO3"
                                  ]
                                }
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "ISO2": {
                                  "type": "string",
                                  "description": "The canonical ISO2 currency code"
                                },
                                "ISO3": {
                                  "type": "string",
                                  "description": "The canonical ISO3 currency code"
                                },
                                "Number": {
                                  "type": "string",
                                  "description": "The canonical currency number"
                                },
                                "DecimalPlaces": {
                                  "type": "string",
                                  "description": "The canonical number of decimal places for the currency"
                                },
                                "CountryCodes": {
                                  "type": "array",
                                  "description": "The canonical array of ISO3 country codes officially using this currency",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "Symbol": {
                                  "type": "string",
                                  "description": "The canonical symbol for the currency"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "IsEuropeanCountry": {
                              "type": "string",
                              "description": "Is this country an european one? e.g Y",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "Lineage": {
                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "EntityId": {
                                  "type": "string",
                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                },
                                "EventId": {
                                  "type": "string",
                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                },
                                "AsOf": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                },
                                "SourceSystem": {
                                  "type": "string",
                                  "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                }
                              },
                              "required": [
                                "EntityId,EventId,AsOf"
                              ]
                            }
                          }
                        },
                        "Lineage": {
                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "EntityId": {
                              "type": "string",
                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                            },
                            "EventId": {
                              "type": "string",
                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                            },
                            "AsOf": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                            },
                            "SourceSystem": {
                              "type": "string",
                              "description": "The source system of the most recent impacting change that the above event (details) are related to"
                            }
                          },
                          "required": [
                            "EntityId,EventId,AsOf"
                          ]
                        }
                      }
                    },
                    "EventTimeZone": {
                      "description": "A TimeZone object (required) representing the main 'event' timezone i.e event source could represent all times in UTC.  Can be same as HomeTimeZone but also different",
                      "type": "object",
                      "required": [
                        "TimeZone"
                      ],
                      "unevaluatedProperties": false,
                      "properties": {
                        "TimeZone": {
                          "type": "string",
                          "description": "The Time Zone e.g Europe/London"
                        },
                        "TimeZoneOffset": {
                          "type": "string",
                          "description": "UTC+01:00"
                        },
                        "TimeZoneExplicitCode": {
                          "type": "string",
                          "description": "Indicates whether the timeZone offset is explicit in the source (e.g +01:00) or implicit (e.g assumed to be +01:00, and thus reformatting work is needed to make explicit)",
                          "enum": [
                            "ExplicitOffsetInSource",
                            "ImplicitOffsetNotInSource"
                          ]
                        },
                        "Country": {
                          "description": "The country of the timezone",
                          "type": "object",
                          "anyOf": [
                            {
                              "properties": {
                                "ISO2": {
                                  "type": "string",
                                  "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                }
                              },
                              "required": [
                                "ISO2"
                              ]
                            },
                            {
                              "properties": {
                                "ISO3": {
                                  "type": "string",
                                  "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                }
                              },
                              "required": [
                                "ISO3"
                              ]
                            }
                          ],
                          "unevaluatedProperties": false,
                          "properties": {
                            "CountryCode": {
                              "type": "string",
                              "description": "The canonical CountryCode (country-code) country code e.g 036"
                            },
                            "Name": {
                              "type": "string",
                              "description": "The canonical (official) 'Name' of the country e.g Australia"
                            },
                            "AltName": {
                              "type": "string",
                              "description": "An alternate name for the country"
                            },
                            "RegionCode": {
                              "type": "string",
                              "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                            },
                            "RegionName": {
                              "type": "string",
                              "description": "The canonical RegionName (region) for the country code e.g Oceania"
                            },
                            "SubRegionCode": {
                              "type": "string",
                              "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                            },
                            "SubRegionName": {
                              "type": "string",
                              "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                            },
                            "IntermediateRegionCode": {
                              "type": "string",
                              "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                            },
                            "IntermediateRegionName": {
                              "type": "string",
                              "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                            },
                            "Coordinates": {
                              "description": "The canonical Coordinates of the country (canonical from google)",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "Latitude": {
                                  "type": "number",
                                  "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                  "minimum": -90,
                                  "maximum": 90
                                },
                                "Longitude": {
                                  "type": "number",
                                  "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                  "minimum": -180,
                                  "maximum": 180
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              },
                              "required": [
                                "Latitude",
                                "Longitude"
                              ]
                            },
                            "PrimaryLanguage": {
                              "type": "string",
                              "description": "The canonical Primary Language of the country"
                            },
                            "Currency": {
                              "description": "The canonical Currency Code of the country (canonical from google)",
                              "type": "object",
                              "anyOf": [
                                {
                                  "required": [
                                    "ISO2"
                                  ]
                                },
                                {
                                  "required": [
                                    "ISO3"
                                  ]
                                }
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "ISO2": {
                                  "type": "string",
                                  "description": "The canonical ISO2 currency code"
                                },
                                "ISO3": {
                                  "type": "string",
                                  "description": "The canonical ISO3 currency code"
                                },
                                "Number": {
                                  "type": "string",
                                  "description": "The canonical currency number"
                                },
                                "DecimalPlaces": {
                                  "type": "string",
                                  "description": "The canonical number of decimal places for the currency"
                                },
                                "CountryCodes": {
                                  "type": "array",
                                  "description": "The canonical array of ISO3 country codes officially using this currency",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "Symbol": {
                                  "type": "string",
                                  "description": "The canonical symbol for the currency"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "IsEuropeanCountry": {
                              "type": "string",
                              "description": "Is this country an european one? e.g Y",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "Lineage": {
                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "EntityId": {
                                  "type": "string",
                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                },
                                "EventId": {
                                  "type": "string",
                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                },
                                "AsOf": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                },
                                "SourceSystem": {
                                  "type": "string",
                                  "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                }
                              },
                              "required": [
                                "EntityId,EventId,AsOf"
                              ]
                            }
                          }
                        },
                        "Lineage": {
                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "EntityId": {
                              "type": "string",
                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                            },
                            "EventId": {
                              "type": "string",
                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                            },
                            "AsOf": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                            },
                            "SourceSystem": {
                              "type": "string",
                              "description": "The source system of the most recent impacting change that the above event (details) are related to"
                            }
                          },
                          "required": [
                            "EntityId,EventId,AsOf"
                          ]
                        }
                      }
                    },
                    "PartyTimeZone": {
                      "description": "A TimeZone object (optional) representing the contextual 'party' timezone associated with the party (e.b customer) in the context of the event (e.g order placed timezone)",
                      "type": "object",
                      "required": [
                        "TimeZone"
                      ],
                      "unevaluatedProperties": false,
                      "properties": {
                        "TimeZone": {
                          "type": "string",
                          "description": "The Time Zone e.g Europe/London"
                        },
                        "TimeZoneOffset": {
                          "type": "string",
                          "description": "UTC+01:00"
                        },
                        "TimeZoneExplicitCode": {
                          "type": "string",
                          "description": "Indicates whether the timeZone offset is explicit in the source (e.g +01:00) or implicit (e.g assumed to be +01:00, and thus reformatting work is needed to make explicit)",
                          "enum": [
                            "ExplicitOffsetInSource",
                            "ImplicitOffsetNotInSource"
                          ]
                        },
                        "Country": {
                          "description": "The country of the timezone",
                          "type": "object",
                          "anyOf": [
                            {
                              "properties": {
                                "ISO2": {
                                  "type": "string",
                                  "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                }
                              },
                              "required": [
                                "ISO2"
                              ]
                            },
                            {
                              "properties": {
                                "ISO3": {
                                  "type": "string",
                                  "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                }
                              },
                              "required": [
                                "ISO3"
                              ]
                            }
                          ],
                          "unevaluatedProperties": false,
                          "properties": {
                            "CountryCode": {
                              "type": "string",
                              "description": "The canonical CountryCode (country-code) country code e.g 036"
                            },
                            "Name": {
                              "type": "string",
                              "description": "The canonical (official) 'Name' of the country e.g Australia"
                            },
                            "AltName": {
                              "type": "string",
                              "description": "An alternate name for the country"
                            },
                            "RegionCode": {
                              "type": "string",
                              "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                            },
                            "RegionName": {
                              "type": "string",
                              "description": "The canonical RegionName (region) for the country code e.g Oceania"
                            },
                            "SubRegionCode": {
                              "type": "string",
                              "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                            },
                            "SubRegionName": {
                              "type": "string",
                              "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                            },
                            "IntermediateRegionCode": {
                              "type": "string",
                              "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                            },
                            "IntermediateRegionName": {
                              "type": "string",
                              "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                            },
                            "Coordinates": {
                              "description": "The canonical Coordinates of the country (canonical from google)",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "Latitude": {
                                  "type": "number",
                                  "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                  "minimum": -90,
                                  "maximum": 90
                                },
                                "Longitude": {
                                  "type": "number",
                                  "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                  "minimum": -180,
                                  "maximum": 180
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              },
                              "required": [
                                "Latitude",
                                "Longitude"
                              ]
                            },
                            "PrimaryLanguage": {
                              "type": "string",
                              "description": "The canonical Primary Language of the country"
                            },
                            "Currency": {
                              "description": "The canonical Currency Code of the country (canonical from google)",
                              "type": "object",
                              "anyOf": [
                                {
                                  "required": [
                                    "ISO2"
                                  ]
                                },
                                {
                                  "required": [
                                    "ISO3"
                                  ]
                                }
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "ISO2": {
                                  "type": "string",
                                  "description": "The canonical ISO2 currency code"
                                },
                                "ISO3": {
                                  "type": "string",
                                  "description": "The canonical ISO3 currency code"
                                },
                                "Number": {
                                  "type": "string",
                                  "description": "The canonical currency number"
                                },
                                "DecimalPlaces": {
                                  "type": "string",
                                  "description": "The canonical number of decimal places for the currency"
                                },
                                "CountryCodes": {
                                  "type": "array",
                                  "description": "The canonical array of ISO3 country codes officially using this currency",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "Symbol": {
                                  "type": "string",
                                  "description": "The canonical symbol for the currency"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "IsEuropeanCountry": {
                              "type": "string",
                              "description": "Is this country an european one? e.g Y",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "Lineage": {
                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "EntityId": {
                                  "type": "string",
                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                },
                                "EventId": {
                                  "type": "string",
                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                },
                                "AsOf": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                },
                                "SourceSystem": {
                                  "type": "string",
                                  "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                }
                              },
                              "required": [
                                "EntityId,EventId,AsOf"
                              ]
                            }
                          }
                        },
                        "Lineage": {
                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "EntityId": {
                              "type": "string",
                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                            },
                            "EventId": {
                              "type": "string",
                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                            },
                            "AsOf": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                            },
                            "SourceSystem": {
                              "type": "string",
                              "description": "The source system of the most recent impacting change that the above event (details) are related to"
                            }
                          },
                          "required": [
                            "EntityId,EventId,AsOf"
                          ]
                        }
                      }
                    }
                  },
                  "required": [
                    "HomeTimeZone",
                    "EventTimeZone"
                  ]
                },
                "Times": {
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "EventOccurredTimestamp": {
                      "description": "Time properties (required) representing the 'true' real-world time the event occurred (EOT) e.g orderPlaced time, (typically) sourced from.  If the DQ of the source is poor, fallback on system time (not great).  This should be the timestamp(s) to use for any analysis and operational handling e.g ordering",
                      "type": [
                        "object",
                        "null"
                      ],
                      "unevaluatedProperties": false,
                      "anyOf": [
                        {
                          "required": [
                            "DateId",
                            "UTC",
                            "Millis"
                          ]
                        },
                        {
                          "required": [
                            "DateId",
                            "Local",
                            "TimeZone"
                          ]
                        }
                      ],
                      "properties": {
                        "DateId": {
                          "type": "string",
                          "description": "The Xfuze Date dim Id e.g Date_20231001"
                        },
                        "DateKey": {
                          "type": "number",
                          "min-length": 8,
                          "max-length": 8,
                          "description": "The Xfuze Date Key as a number e.g 20231001"
                        },
                        "UTC": {
                          "type": "string",
                          "format": "date-time",
                          "description": "An Xfuze timestamp represented in UTC e.g 2023-11-06T17:12:30.780Z"
                        },
                        "DateTimeKey": {
                          "type": "number",
                          "min-length": 14,
                          "max-length": 14,
                          "description": "An Xfuze timestamp represented in number format e.g 20231109135856000"
                        },
                        "DateUTC": {
                          "type": "string",
                          "format": "date",
                          "description": "An Xfuze timestamp as date represented in UTC e.g 2023-01-12"
                        },
                        "RawValue": {
                          "type": "string",
                          "description": "An input timestamp parsed to Xfuze in raw format e.g 2023-11-06T17:12:30.780Z"
                        },
                        "Local": {
                          "type": "string",
                          "format": "date-time",
                          "description": "An Xfuze timestamp represented in local time e.g 2023-11-06T17:12:30.780Z+00:00"
                        },
                        "DateLocal": {
                          "type": "string",
                          "format": "date",
                          "description": "An Xfuze timestamp as date represented in local timeZone aware (if date is input not a TS is always = DateUTC ) e.g 2023-01-12"
                        },
                        "HourId": {
                          "type": "string",
                          "description": "The Xfuze hour dim Id e.g Hours_2023110617"
                        },
                        "HourKey": {
                          "type": "number",
                          "min-length": 10,
                          "max-length": 10,
                          "description": "The Xfuze hour key in number form e.g 2023110617"
                        },
                        "Millis": {
                          "type": "number",
                          "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                        },
                        "HourUTC": {
                          "type": "number",
                          "min-length": 2,
                          "max-length": 2,
                          "description": "The Xfuze hour in number form e.g 17"
                        },
                        "HourLocal": {
                          "type": "number",
                          "min-length": 2,
                          "max-length": 2,
                          "description": "The Xfuze hour in number form e.g 17"
                        },
                        "TimeZone": {
                          "type": "string",
                          "description": "The related time zone offset used in local conversions e.g UTC, Europe/London"
                        },
                        "TimeZoneOffset": {
                          "type": "string",
                          "description": "The related time zone offset used in local conversions e.g +00:00"
                        },
                        "YearMonth": {
                          "type": "number",
                          "min-length": 6,
                          "max-length": 6,
                          "description": "The Xfuze YearMonth in number form e.g 202311"
                        },
                        "YearWeek": {
                          "type": "number",
                          "min-length": 6,
                          "max-length": 6,
                          "description": "The Xfuze YearWeek in number form e.g 202344"
                        },
                        "YearIsoWeek": {
                          "type": "number",
                          "min-length": 6,
                          "max-length": 6,
                          "description": "The Xfuze YearIsoWeek in number form e.g 202345"
                        },
                        "YearDay": {
                          "type": "number",
                          "min-length": 7,
                          "max-length": 7,
                          "description": "The YearDay in number form e.g 2023310"
                        },
                        "Lineage": {
                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "EntityId": {
                              "type": "string",
                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                            },
                            "EventId": {
                              "type": "string",
                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                            },
                            "AsOf": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                            },
                            "SourceSystem": {
                              "type": "string",
                              "description": "The source system of the most recent impacting change that the above event (details) are related to"
                            }
                          },
                          "required": [
                            "EntityId,EventId,AsOf"
                          ]
                        }
                      }
                    },
                    "EventOccurredType": {
                      "type": "string",
                      "description": "The (required) type of the EventOccurredTimestamp, indicator of the quality.  TrueTime is if EOT is sourced from correct / best timestamp from the source and is the highest quality.",
                      "enum": [
                        "TrueTime",
                        "ApproximateTime",
                        "SystemTime"
                      ]
                    },
                    "EventSourceSentTimestamp": {
                      "description": "Time properties (optional) representing the time the inbound originating / raw event was originally sent from source leaving its boundary of control e.g time an external client service published the event",
                      "type": [
                        "object",
                        "null"
                      ],
                      "unevaluatedProperties": false,
                      "anyOf": [
                        {
                          "required": [
                            "DateId",
                            "UTC",
                            "Millis"
                          ]
                        },
                        {
                          "required": [
                            "DateId",
                            "Local",
                            "TimeZone"
                          ]
                        }
                      ],
                      "properties": {
                        "DateId": {
                          "type": "string",
                          "description": "The Xfuze Date dim Id e.g Date_20231001"
                        },
                        "DateKey": {
                          "type": "number",
                          "min-length": 8,
                          "max-length": 8,
                          "description": "The Xfuze Date Key as a number e.g 20231001"
                        },
                        "UTC": {
                          "type": "string",
                          "format": "date-time",
                          "description": "An Xfuze timestamp represented in UTC e.g 2023-11-06T17:12:30.780Z"
                        },
                        "DateTimeKey": {
                          "type": "number",
                          "min-length": 14,
                          "max-length": 14,
                          "description": "An Xfuze timestamp represented in number format e.g 20231109135856000"
                        },
                        "DateUTC": {
                          "type": "string",
                          "format": "date",
                          "description": "An Xfuze timestamp as date represented in UTC e.g 2023-01-12"
                        },
                        "RawValue": {
                          "type": "string",
                          "description": "An input timestamp parsed to Xfuze in raw format e.g 2023-11-06T17:12:30.780Z"
                        },
                        "Local": {
                          "type": "string",
                          "format": "date-time",
                          "description": "An Xfuze timestamp represented in local time e.g 2023-11-06T17:12:30.780Z+00:00"
                        },
                        "DateLocal": {
                          "type": "string",
                          "format": "date",
                          "description": "An Xfuze timestamp as date represented in local timeZone aware (if date is input not a TS is always = DateUTC ) e.g 2023-01-12"
                        },
                        "HourId": {
                          "type": "string",
                          "description": "The Xfuze hour dim Id e.g Hours_2023110617"
                        },
                        "HourKey": {
                          "type": "number",
                          "min-length": 10,
                          "max-length": 10,
                          "description": "The Xfuze hour key in number form e.g 2023110617"
                        },
                        "Millis": {
                          "type": "number",
                          "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                        },
                        "HourUTC": {
                          "type": "number",
                          "min-length": 2,
                          "max-length": 2,
                          "description": "The Xfuze hour in number form e.g 17"
                        },
                        "HourLocal": {
                          "type": "number",
                          "min-length": 2,
                          "max-length": 2,
                          "description": "The Xfuze hour in number form e.g 17"
                        },
                        "TimeZone": {
                          "type": "string",
                          "description": "The related time zone offset used in local conversions e.g UTC, Europe/London"
                        },
                        "TimeZoneOffset": {
                          "type": "string",
                          "description": "The related time zone offset used in local conversions e.g +00:00"
                        },
                        "YearMonth": {
                          "type": "number",
                          "min-length": 6,
                          "max-length": 6,
                          "description": "The Xfuze YearMonth in number form e.g 202311"
                        },
                        "YearWeek": {
                          "type": "number",
                          "min-length": 6,
                          "max-length": 6,
                          "description": "The Xfuze YearWeek in number form e.g 202344"
                        },
                        "YearIsoWeek": {
                          "type": "number",
                          "min-length": 6,
                          "max-length": 6,
                          "description": "The Xfuze YearIsoWeek in number form e.g 202345"
                        },
                        "YearDay": {
                          "type": "number",
                          "min-length": 7,
                          "max-length": 7,
                          "description": "The YearDay in number form e.g 2023310"
                        },
                        "Lineage": {
                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "EntityId": {
                              "type": "string",
                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                            },
                            "EventId": {
                              "type": "string",
                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                            },
                            "AsOf": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                            },
                            "SourceSystem": {
                              "type": "string",
                              "description": "The source system of the most recent impacting change that the above event (details) are related to"
                            }
                          },
                          "required": [
                            "EntityId,EventId,AsOf"
                          ]
                        }
                      }
                    },
                    "EventExternalReceivedTimestamp": {
                      "description": "Time properties (optional) representing the time the inbound originating / raw event was received into an interim landing zone, prior to SmartConnector processing e.g time landed in GSC, PubSub prior to the smart connector processing",
                      "type": [
                        "object",
                        "null"
                      ],
                      "unevaluatedProperties": false,
                      "anyOf": [
                        {
                          "required": [
                            "DateId",
                            "UTC",
                            "Millis"
                          ]
                        },
                        {
                          "required": [
                            "DateId",
                            "Local",
                            "TimeZone"
                          ]
                        }
                      ],
                      "properties": {
                        "DateId": {
                          "type": "string",
                          "description": "The Xfuze Date dim Id e.g Date_20231001"
                        },
                        "DateKey": {
                          "type": "number",
                          "min-length": 8,
                          "max-length": 8,
                          "description": "The Xfuze Date Key as a number e.g 20231001"
                        },
                        "UTC": {
                          "type": "string",
                          "format": "date-time",
                          "description": "An Xfuze timestamp represented in UTC e.g 2023-11-06T17:12:30.780Z"
                        },
                        "DateTimeKey": {
                          "type": "number",
                          "min-length": 14,
                          "max-length": 14,
                          "description": "An Xfuze timestamp represented in number format e.g 20231109135856000"
                        },
                        "DateUTC": {
                          "type": "string",
                          "format": "date",
                          "description": "An Xfuze timestamp as date represented in UTC e.g 2023-01-12"
                        },
                        "RawValue": {
                          "type": "string",
                          "description": "An input timestamp parsed to Xfuze in raw format e.g 2023-11-06T17:12:30.780Z"
                        },
                        "Local": {
                          "type": "string",
                          "format": "date-time",
                          "description": "An Xfuze timestamp represented in local time e.g 2023-11-06T17:12:30.780Z+00:00"
                        },
                        "DateLocal": {
                          "type": "string",
                          "format": "date",
                          "description": "An Xfuze timestamp as date represented in local timeZone aware (if date is input not a TS is always = DateUTC ) e.g 2023-01-12"
                        },
                        "HourId": {
                          "type": "string",
                          "description": "The Xfuze hour dim Id e.g Hours_2023110617"
                        },
                        "HourKey": {
                          "type": "number",
                          "min-length": 10,
                          "max-length": 10,
                          "description": "The Xfuze hour key in number form e.g 2023110617"
                        },
                        "Millis": {
                          "type": "number",
                          "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                        },
                        "HourUTC": {
                          "type": "number",
                          "min-length": 2,
                          "max-length": 2,
                          "description": "The Xfuze hour in number form e.g 17"
                        },
                        "HourLocal": {
                          "type": "number",
                          "min-length": 2,
                          "max-length": 2,
                          "description": "The Xfuze hour in number form e.g 17"
                        },
                        "TimeZone": {
                          "type": "string",
                          "description": "The related time zone offset used in local conversions e.g UTC, Europe/London"
                        },
                        "TimeZoneOffset": {
                          "type": "string",
                          "description": "The related time zone offset used in local conversions e.g +00:00"
                        },
                        "YearMonth": {
                          "type": "number",
                          "min-length": 6,
                          "max-length": 6,
                          "description": "The Xfuze YearMonth in number form e.g 202311"
                        },
                        "YearWeek": {
                          "type": "number",
                          "min-length": 6,
                          "max-length": 6,
                          "description": "The Xfuze YearWeek in number form e.g 202344"
                        },
                        "YearIsoWeek": {
                          "type": "number",
                          "min-length": 6,
                          "max-length": 6,
                          "description": "The Xfuze YearIsoWeek in number form e.g 202345"
                        },
                        "YearDay": {
                          "type": "number",
                          "min-length": 7,
                          "max-length": 7,
                          "description": "The YearDay in number form e.g 2023310"
                        },
                        "Lineage": {
                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "EntityId": {
                              "type": "string",
                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                            },
                            "EventId": {
                              "type": "string",
                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                            },
                            "AsOf": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                            },
                            "SourceSystem": {
                              "type": "string",
                              "description": "The source system of the most recent impacting change that the above event (details) are related to"
                            }
                          },
                          "required": [
                            "EntityId,EventId,AsOf"
                          ]
                        }
                      }
                    },
                    "EventExternalLandingZoneType": {
                      "type": "string",
                      "description": "The (optional) type of the EventExternalReceivedTimestamp (should be provided if EventExternalReceivedTimestamp set), indicator of the external landing zone type. e.g GCS",
                      "enum": [
                        "GCS",
                        "S3",
                        "Pub/Sub",
                        "Pulsar",
                        "Kafka",
                        "Kinesis",
                        "SQS",
                        "SNS",
                        "EventBridge",
                        "EventGrid",
                        "WebMethods",
                        "SFTP",
                        "FTP",
                        "MongoDB",
                        "MongoDBStream",
                        "DynamoDB",
                        "DynamoDBStream",
                        "DocumentDB",
                        "DocumentDBStream",
                        "Other"
                      ]
                    },
                    "EventReceivedTimestamp": {
                      "description": "Time properties (required) representing the time at which the SmartConnector received (to process) the inbound originating / raw event",
                      "type": [
                        "object",
                        "null"
                      ],
                      "unevaluatedProperties": false,
                      "anyOf": [
                        {
                          "required": [
                            "DateId",
                            "UTC",
                            "Millis"
                          ]
                        },
                        {
                          "required": [
                            "DateId",
                            "Local",
                            "TimeZone"
                          ]
                        }
                      ],
                      "properties": {
                        "DateId": {
                          "type": "string",
                          "description": "The Xfuze Date dim Id e.g Date_20231001"
                        },
                        "DateKey": {
                          "type": "number",
                          "min-length": 8,
                          "max-length": 8,
                          "description": "The Xfuze Date Key as a number e.g 20231001"
                        },
                        "UTC": {
                          "type": "string",
                          "format": "date-time",
                          "description": "An Xfuze timestamp represented in UTC e.g 2023-11-06T17:12:30.780Z"
                        },
                        "DateTimeKey": {
                          "type": "number",
                          "min-length": 14,
                          "max-length": 14,
                          "description": "An Xfuze timestamp represented in number format e.g 20231109135856000"
                        },
                        "DateUTC": {
                          "type": "string",
                          "format": "date",
                          "description": "An Xfuze timestamp as date represented in UTC e.g 2023-01-12"
                        },
                        "RawValue": {
                          "type": "string",
                          "description": "An input timestamp parsed to Xfuze in raw format e.g 2023-11-06T17:12:30.780Z"
                        },
                        "Local": {
                          "type": "string",
                          "format": "date-time",
                          "description": "An Xfuze timestamp represented in local time e.g 2023-11-06T17:12:30.780Z+00:00"
                        },
                        "DateLocal": {
                          "type": "string",
                          "format": "date",
                          "description": "An Xfuze timestamp as date represented in local timeZone aware (if date is input not a TS is always = DateUTC ) e.g 2023-01-12"
                        },
                        "HourId": {
                          "type": "string",
                          "description": "The Xfuze hour dim Id e.g Hours_2023110617"
                        },
                        "HourKey": {
                          "type": "number",
                          "min-length": 10,
                          "max-length": 10,
                          "description": "The Xfuze hour key in number form e.g 2023110617"
                        },
                        "Millis": {
                          "type": "number",
                          "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                        },
                        "HourUTC": {
                          "type": "number",
                          "min-length": 2,
                          "max-length": 2,
                          "description": "The Xfuze hour in number form e.g 17"
                        },
                        "HourLocal": {
                          "type": "number",
                          "min-length": 2,
                          "max-length": 2,
                          "description": "The Xfuze hour in number form e.g 17"
                        },
                        "TimeZone": {
                          "type": "string",
                          "description": "The related time zone offset used in local conversions e.g UTC, Europe/London"
                        },
                        "TimeZoneOffset": {
                          "type": "string",
                          "description": "The related time zone offset used in local conversions e.g +00:00"
                        },
                        "YearMonth": {
                          "type": "number",
                          "min-length": 6,
                          "max-length": 6,
                          "description": "The Xfuze YearMonth in number form e.g 202311"
                        },
                        "YearWeek": {
                          "type": "number",
                          "min-length": 6,
                          "max-length": 6,
                          "description": "The Xfuze YearWeek in number form e.g 202344"
                        },
                        "YearIsoWeek": {
                          "type": "number",
                          "min-length": 6,
                          "max-length": 6,
                          "description": "The Xfuze YearIsoWeek in number form e.g 202345"
                        },
                        "YearDay": {
                          "type": "number",
                          "min-length": 7,
                          "max-length": 7,
                          "description": "The YearDay in number form e.g 2023310"
                        },
                        "Lineage": {
                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "EntityId": {
                              "type": "string",
                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                            },
                            "EventId": {
                              "type": "string",
                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                            },
                            "AsOf": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                            },
                            "SourceSystem": {
                              "type": "string",
                              "description": "The source system of the most recent impacting change that the above event (details) are related to"
                            }
                          },
                          "required": [
                            "EntityId,EventId,AsOf"
                          ]
                        }
                      }
                    },
                    "EventIngestProcessedTimestamp": {
                      "description": "Time properties (optional) representing when a SmartConnector finished 'processing' the inbound originating / raw event e.g just prior to publishing downstream",
                      "type": [
                        "object",
                        "null"
                      ],
                      "unevaluatedProperties": false,
                      "anyOf": [
                        {
                          "required": [
                            "DateId",
                            "UTC",
                            "Millis"
                          ]
                        },
                        {
                          "required": [
                            "DateId",
                            "Local",
                            "TimeZone"
                          ]
                        }
                      ],
                      "properties": {
                        "DateId": {
                          "type": "string",
                          "description": "The Xfuze Date dim Id e.g Date_20231001"
                        },
                        "DateKey": {
                          "type": "number",
                          "min-length": 8,
                          "max-length": 8,
                          "description": "The Xfuze Date Key as a number e.g 20231001"
                        },
                        "UTC": {
                          "type": "string",
                          "format": "date-time",
                          "description": "An Xfuze timestamp represented in UTC e.g 2023-11-06T17:12:30.780Z"
                        },
                        "DateTimeKey": {
                          "type": "number",
                          "min-length": 14,
                          "max-length": 14,
                          "description": "An Xfuze timestamp represented in number format e.g 20231109135856000"
                        },
                        "DateUTC": {
                          "type": "string",
                          "format": "date",
                          "description": "An Xfuze timestamp as date represented in UTC e.g 2023-01-12"
                        },
                        "RawValue": {
                          "type": "string",
                          "description": "An input timestamp parsed to Xfuze in raw format e.g 2023-11-06T17:12:30.780Z"
                        },
                        "Local": {
                          "type": "string",
                          "format": "date-time",
                          "description": "An Xfuze timestamp represented in local time e.g 2023-11-06T17:12:30.780Z+00:00"
                        },
                        "DateLocal": {
                          "type": "string",
                          "format": "date",
                          "description": "An Xfuze timestamp as date represented in local timeZone aware (if date is input not a TS is always = DateUTC ) e.g 2023-01-12"
                        },
                        "HourId": {
                          "type": "string",
                          "description": "The Xfuze hour dim Id e.g Hours_2023110617"
                        },
                        "HourKey": {
                          "type": "number",
                          "min-length": 10,
                          "max-length": 10,
                          "description": "The Xfuze hour key in number form e.g 2023110617"
                        },
                        "Millis": {
                          "type": "number",
                          "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                        },
                        "HourUTC": {
                          "type": "number",
                          "min-length": 2,
                          "max-length": 2,
                          "description": "The Xfuze hour in number form e.g 17"
                        },
                        "HourLocal": {
                          "type": "number",
                          "min-length": 2,
                          "max-length": 2,
                          "description": "The Xfuze hour in number form e.g 17"
                        },
                        "TimeZone": {
                          "type": "string",
                          "description": "The related time zone offset used in local conversions e.g UTC, Europe/London"
                        },
                        "TimeZoneOffset": {
                          "type": "string",
                          "description": "The related time zone offset used in local conversions e.g +00:00"
                        },
                        "YearMonth": {
                          "type": "number",
                          "min-length": 6,
                          "max-length": 6,
                          "description": "The Xfuze YearMonth in number form e.g 202311"
                        },
                        "YearWeek": {
                          "type": "number",
                          "min-length": 6,
                          "max-length": 6,
                          "description": "The Xfuze YearWeek in number form e.g 202344"
                        },
                        "YearIsoWeek": {
                          "type": "number",
                          "min-length": 6,
                          "max-length": 6,
                          "description": "The Xfuze YearIsoWeek in number form e.g 202345"
                        },
                        "YearDay": {
                          "type": "number",
                          "min-length": 7,
                          "max-length": 7,
                          "description": "The YearDay in number form e.g 2023310"
                        },
                        "Lineage": {
                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "EntityId": {
                              "type": "string",
                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                            },
                            "EventId": {
                              "type": "string",
                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                            },
                            "AsOf": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                            },
                            "SourceSystem": {
                              "type": "string",
                              "description": "The source system of the most recent impacting change that the above event (details) are related to"
                            }
                          },
                          "required": [
                            "EntityId,EventId,AsOf"
                          ]
                        }
                      }
                    },
                    "EventProcessedTimestamp": {
                      "description": "Time properties (optional) representing when an EventProcessor finished 'processing' the trigger event and all changes and enrichments data wise",
                      "type": [
                        "object",
                        "null"
                      ],
                      "unevaluatedProperties": false,
                      "anyOf": [
                        {
                          "required": [
                            "DateId",
                            "UTC",
                            "Millis"
                          ]
                        },
                        {
                          "required": [
                            "DateId",
                            "Local",
                            "TimeZone"
                          ]
                        }
                      ],
                      "properties": {
                        "DateId": {
                          "type": "string",
                          "description": "The Xfuze Date dim Id e.g Date_20231001"
                        },
                        "DateKey": {
                          "type": "number",
                          "min-length": 8,
                          "max-length": 8,
                          "description": "The Xfuze Date Key as a number e.g 20231001"
                        },
                        "UTC": {
                          "type": "string",
                          "format": "date-time",
                          "description": "An Xfuze timestamp represented in UTC e.g 2023-11-06T17:12:30.780Z"
                        },
                        "DateTimeKey": {
                          "type": "number",
                          "min-length": 14,
                          "max-length": 14,
                          "description": "An Xfuze timestamp represented in number format e.g 20231109135856000"
                        },
                        "DateUTC": {
                          "type": "string",
                          "format": "date",
                          "description": "An Xfuze timestamp as date represented in UTC e.g 2023-01-12"
                        },
                        "RawValue": {
                          "type": "string",
                          "description": "An input timestamp parsed to Xfuze in raw format e.g 2023-11-06T17:12:30.780Z"
                        },
                        "Local": {
                          "type": "string",
                          "format": "date-time",
                          "description": "An Xfuze timestamp represented in local time e.g 2023-11-06T17:12:30.780Z+00:00"
                        },
                        "DateLocal": {
                          "type": "string",
                          "format": "date",
                          "description": "An Xfuze timestamp as date represented in local timeZone aware (if date is input not a TS is always = DateUTC ) e.g 2023-01-12"
                        },
                        "HourId": {
                          "type": "string",
                          "description": "The Xfuze hour dim Id e.g Hours_2023110617"
                        },
                        "HourKey": {
                          "type": "number",
                          "min-length": 10,
                          "max-length": 10,
                          "description": "The Xfuze hour key in number form e.g 2023110617"
                        },
                        "Millis": {
                          "type": "number",
                          "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                        },
                        "HourUTC": {
                          "type": "number",
                          "min-length": 2,
                          "max-length": 2,
                          "description": "The Xfuze hour in number form e.g 17"
                        },
                        "HourLocal": {
                          "type": "number",
                          "min-length": 2,
                          "max-length": 2,
                          "description": "The Xfuze hour in number form e.g 17"
                        },
                        "TimeZone": {
                          "type": "string",
                          "description": "The related time zone offset used in local conversions e.g UTC, Europe/London"
                        },
                        "TimeZoneOffset": {
                          "type": "string",
                          "description": "The related time zone offset used in local conversions e.g +00:00"
                        },
                        "YearMonth": {
                          "type": "number",
                          "min-length": 6,
                          "max-length": 6,
                          "description": "The Xfuze YearMonth in number form e.g 202311"
                        },
                        "YearWeek": {
                          "type": "number",
                          "min-length": 6,
                          "max-length": 6,
                          "description": "The Xfuze YearWeek in number form e.g 202344"
                        },
                        "YearIsoWeek": {
                          "type": "number",
                          "min-length": 6,
                          "max-length": 6,
                          "description": "The Xfuze YearIsoWeek in number form e.g 202345"
                        },
                        "YearDay": {
                          "type": "number",
                          "min-length": 7,
                          "max-length": 7,
                          "description": "The YearDay in number form e.g 2023310"
                        },
                        "Lineage": {
                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "EntityId": {
                              "type": "string",
                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                            },
                            "EventId": {
                              "type": "string",
                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                            },
                            "AsOf": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                            },
                            "SourceSystem": {
                              "type": "string",
                              "description": "The source system of the most recent impacting change that the above event (details) are related to"
                            }
                          },
                          "required": [
                            "EntityId,EventId,AsOf"
                          ]
                        }
                      }
                    },
                    "EventPublishedTimestamp": {
                      "description": "Time properties (optional) representing when an EventProcessor, post 'processing' the trigger event and all changes, publishes the event downstream ",
                      "type": [
                        "object",
                        "null"
                      ],
                      "unevaluatedProperties": false,
                      "anyOf": [
                        {
                          "required": [
                            "DateId",
                            "UTC",
                            "Millis"
                          ]
                        },
                        {
                          "required": [
                            "DateId",
                            "Local",
                            "TimeZone"
                          ]
                        }
                      ],
                      "properties": {
                        "DateId": {
                          "type": "string",
                          "description": "The Xfuze Date dim Id e.g Date_20231001"
                        },
                        "DateKey": {
                          "type": "number",
                          "min-length": 8,
                          "max-length": 8,
                          "description": "The Xfuze Date Key as a number e.g 20231001"
                        },
                        "UTC": {
                          "type": "string",
                          "format": "date-time",
                          "description": "An Xfuze timestamp represented in UTC e.g 2023-11-06T17:12:30.780Z"
                        },
                        "DateTimeKey": {
                          "type": "number",
                          "min-length": 14,
                          "max-length": 14,
                          "description": "An Xfuze timestamp represented in number format e.g 20231109135856000"
                        },
                        "DateUTC": {
                          "type": "string",
                          "format": "date",
                          "description": "An Xfuze timestamp as date represented in UTC e.g 2023-01-12"
                        },
                        "RawValue": {
                          "type": "string",
                          "description": "An input timestamp parsed to Xfuze in raw format e.g 2023-11-06T17:12:30.780Z"
                        },
                        "Local": {
                          "type": "string",
                          "format": "date-time",
                          "description": "An Xfuze timestamp represented in local time e.g 2023-11-06T17:12:30.780Z+00:00"
                        },
                        "DateLocal": {
                          "type": "string",
                          "format": "date",
                          "description": "An Xfuze timestamp as date represented in local timeZone aware (if date is input not a TS is always = DateUTC ) e.g 2023-01-12"
                        },
                        "HourId": {
                          "type": "string",
                          "description": "The Xfuze hour dim Id e.g Hours_2023110617"
                        },
                        "HourKey": {
                          "type": "number",
                          "min-length": 10,
                          "max-length": 10,
                          "description": "The Xfuze hour key in number form e.g 2023110617"
                        },
                        "Millis": {
                          "type": "number",
                          "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                        },
                        "HourUTC": {
                          "type": "number",
                          "min-length": 2,
                          "max-length": 2,
                          "description": "The Xfuze hour in number form e.g 17"
                        },
                        "HourLocal": {
                          "type": "number",
                          "min-length": 2,
                          "max-length": 2,
                          "description": "The Xfuze hour in number form e.g 17"
                        },
                        "TimeZone": {
                          "type": "string",
                          "description": "The related time zone offset used in local conversions e.g UTC, Europe/London"
                        },
                        "TimeZoneOffset": {
                          "type": "string",
                          "description": "The related time zone offset used in local conversions e.g +00:00"
                        },
                        "YearMonth": {
                          "type": "number",
                          "min-length": 6,
                          "max-length": 6,
                          "description": "The Xfuze YearMonth in number form e.g 202311"
                        },
                        "YearWeek": {
                          "type": "number",
                          "min-length": 6,
                          "max-length": 6,
                          "description": "The Xfuze YearWeek in number form e.g 202344"
                        },
                        "YearIsoWeek": {
                          "type": "number",
                          "min-length": 6,
                          "max-length": 6,
                          "description": "The Xfuze YearIsoWeek in number form e.g 202345"
                        },
                        "YearDay": {
                          "type": "number",
                          "min-length": 7,
                          "max-length": 7,
                          "description": "The YearDay in number form e.g 2023310"
                        },
                        "Lineage": {
                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "EntityId": {
                              "type": "string",
                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                            },
                            "EventId": {
                              "type": "string",
                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                            },
                            "AsOf": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                            },
                            "SourceSystem": {
                              "type": "string",
                              "description": "The source system of the most recent impacting change that the above event (details) are related to"
                            }
                          },
                          "required": [
                            "EntityId,EventId,AsOf"
                          ]
                        }
                      }
                    },
                    "EventSeq": {
                      "type": "number",
                      "description": "The (optional) sequence number of this event over life of entity, typically explicitly provided or sometimes derived"
                    }
                  },
                  "required": [
                    "EventOccurredTimestamp",
                    "EventOccurredType",
                    "EventReceivedTimestamp"
                  ]
                }
              },
              "required": [
                "TimeZones",
                "Times"
              ]
            },
            "Origin": {
              "type": "object",
              "unevaluatedProperties": false,
              "properties": {
                "Times": {
                  "type": "object",
                  "description": "The Origin (i.e source / raw attributes) input fields provided used in transforming to 'Xfuze' representations",
                  "unevaluatedProperties": false,
                  "properties": {
                    "EventOccurredTimestamp": {
                      "type": "string",
                      "description": "Raw form (as provided) of the input timestamp used in generating Xfuze EventOccurredTimestamp e.g 2023-01-12 12:03:00+00:00"
                    },
                    "EventSourceSentTimestamp": {
                      "type": "string",
                      "description": "Raw form (as provided) of the input timestamp used in generating Xfuze EventSourceSentTimestamp e.g 1673525621103"
                    },
                    "EventExternalReceivedTimestamp": {
                      "type": "string",
                      "description": "Raw form (as provided) of the input timestamp used in generating Xfuze EventExternalReceivedTimestamp e.g 1673525621012"
                    }
                  },
                  "required": [
                    "EventOccurredTimestamp"
                  ]
                }
              }
            }
          },
          "required": [
            "Xfuze",
            "Origin"
          ]
        },
        "PartyAtts": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/PartyAtts",
          "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/PartyAtts'",
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "Xfuze": {
              "type": "object",
              "description": "The (optional) Xfuze derived / enriched attributes that define the context of the (primary) party involved in this particular instance of the event",
              "unevaluatedProperties": false,
              "properties": {
                "PartyId": {
                  "type": "string",
                  "description": "The (optional) canonical top level PartyId, identifying the physical party (e.g person, organisation, group), as the single ID source of truth across systems - typically only derivable by the EventProcessors e.g Party_69a79ae0-1d10-46b3-8dd2-7455c622aae2"
                },
                "SystemPartyId": {
                  "type": "string",
                  "description": "The (required) canonical party Id, for a given system, uniquely identifying the party within that specific system (as opposed to across systems which is the case for the above PartyId) e.g Party_SFCC_123456789"
                },
                "SystemAccountId": {
                  "type": "string",
                  "description": "The (optional) canonical top level AccountId of the account this event relates to e.g Account_SFCC_987654321"
                },
                "PartyRoleTypeCode": {
                  "type": "string",
                  "description": "The (required) type of behavioural role of the party with respect to the involvement in this event e.g Customer.  A party can assume multiple roles, this role is the one WRT this specific event"
                },
                "PartyRoleSubTypeCode": {
                  "type": "string",
                  "description": "The (optional) sub type of the top level role of the party with respect to the involvement in this event to further refine the top level role to be more accurate and specific e.g Purchaser, Recipient, DeliveryRecipient etc.  "
                },
                "PartyStatusCode": {
                  "type": "string",
                  "description": "The (optional) canonical status of the party as was at the time of this event e.g Registered"
                },
                "InvolvedReasonCode": {
                  "type": "string",
                  "description": "The (optional) canonical reason code as to they this party was involved in the event e.g Purchaser"
                }
              },
              "required": [
                "SystemPartyId"
              ]
            },
            "Origin": {
              "type": "object",
              "description": "The 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
              "unevaluatedProperties": false,
              "properties": {
                "SystemPartyId": {
                  "type": "string",
                  "description": "Raw form (as provided) of the input SystemPartyId (e.g CustomerId) from the source, used in transforming to 'Xfuze' representations e.g 123456789"
                },
                "SystemAccountId": {
                  "type": "string",
                  "description": "Raw form (as provided) of the input SystemPartyId (e.g CustomerAccountId) from the source, used in transforming to 'Xfuze' representations to e.g Account_SFCC_987654321"
                },
                "PartyRoleTypeCode": {
                  "type": "string",
                  "description": "Raw form (as provided) of the input PartyRoleTypeCode (e.g Customer or Employee, but more often derived by Xfuze then supplied as input) from the source, used in transforming to 'Xfuze' representations"
                },
                "PartyStatusCode": {
                  "type": "string",
                  "description": "Raw form (as provided) of the input PartyStatusCode (e.g Customer or Employee Status codes)  from the source, used in transforming to 'Xfuze' representations e.g Registered"
                }
              }
            }
          }
        },
        "ProductAtts": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/ProductAtts",
          "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/ProductAtts'",
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "Xfuze": {
              "type": "object",
              "anyOf": [
                {
                  "required": [
                    "ProductId",
                    "ProductKey"
                  ]
                },
                {
                  "required": [
                    "ProductIds",
                    "ProductKeys"
                  ]
                }
              ],
              "description": "The (optional) Xfuze derived / enriched attributes that define the context of the product(s) involved in event",
              "unevaluatedProperties": false,
              "properties": {
                "ProductId": {
                  "type": "string",
                  "description": "e.g PRODUCT_APP_DE_de_DE_D20165-7647-D578-XXL"
                },
                "ProductKey": {
                  "type": "string",
                  "description": "e.g D20165-7647-D578-XXL"
                },
                "ProductIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "e.g [\"PRODUCT_APP_DE_de_DE_D20165-7647-D578-XXL\", \"PRODUCT_APP_DE_de_DE_51001-C909-C762-3834\", \"PRODUCT_APP_DE_de_DE_D22284-D183-D338-3834\"]"
                },
                "ProductKeys": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "e.g [\"D20165-7647-D578-XXL\", \"51001-C909-C762-3834\", \"D22284-D183-D338-3834\"]"
                },
                "InvolvedReasonCode": {
                  "type": "string",
                  "description": "e.g SoldProduct"
                }
              }
            },
            "Origin": {
              "type": "object",
              "description": "The 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
              "unevaluatedProperties": false,
              "properties": {
                "ProductId": {
                  "type": "string",
                  "description": "Raw form (optional) of the input ProductId from the source, used in transforming to 'Xfuze' representations e.g PRODUCT_APP_DE_de_DE_D20165-7647-D578-XXL"
                },
                "ProductKey": {
                  "type": "string",
                  "description": "Raw form (optional) of the input ProductKey from the source, used in transforming to 'Xfuze' representations e.g D20165-7647-D578-XXL"
                }
              }
            }
          }
        },
        "LocationAtts": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/LocationAtts",
          "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/LocationAtts'",
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "Xfuze": {
              "type": "object",
              "description": "The Xfuze derived / enriched attributes that define the context of the primary location involved in event",
              "unevaluatedProperties": false,
              "properties": {
                "ChannelCode": {
                  "type": "string",
                  "description": "The (optional) Xfuze channel code e.g App"
                },
                "ChannelName": {
                  "type": "string",
                  "description": "The (optional) Xfuze channel name e.g Mobile App"
                },
                "LocationId": {
                  "type": "string",
                  "description": "The (optional) Xfuze locationId of the primary location of this event e.g Location_Crew_901"
                },
                "LocationNumber": {
                  "type": "string",
                  "description": "The (optional) location type of the primary location of this event e.g 901"
                },
                "LocationType": {
                  "type": "string",
                  "description": "The (optional) location type of the primary location of this event e.g Store"
                },
                "Country": {
                  "description": "The country of the event",
                  "type": "object",
                  "anyOf": [
                    {
                      "properties": {
                        "ISO2": {
                          "type": "string",
                          "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                        }
                      },
                      "required": [
                        "ISO2"
                      ]
                    },
                    {
                      "properties": {
                        "ISO3": {
                          "type": "string",
                          "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                        }
                      },
                      "required": [
                        "ISO3"
                      ]
                    }
                  ],
                  "unevaluatedProperties": false,
                  "properties": {
                    "CountryCode": {
                      "type": "string",
                      "description": "The canonical CountryCode (country-code) country code e.g 036"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The canonical (official) 'Name' of the country e.g Australia"
                    },
                    "AltName": {
                      "type": "string",
                      "description": "An alternate name for the country"
                    },
                    "RegionCode": {
                      "type": "string",
                      "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                    },
                    "RegionName": {
                      "type": "string",
                      "description": "The canonical RegionName (region) for the country code e.g Oceania"
                    },
                    "SubRegionCode": {
                      "type": "string",
                      "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                    },
                    "SubRegionName": {
                      "type": "string",
                      "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                    },
                    "IntermediateRegionCode": {
                      "type": "string",
                      "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                    },
                    "IntermediateRegionName": {
                      "type": "string",
                      "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                    },
                    "Coordinates": {
                      "description": "The canonical Coordinates of the country (canonical from google)",
                      "type": "object",
                      "unevaluatedProperties": false,
                      "properties": {
                        "Latitude": {
                          "type": "number",
                          "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                          "minimum": -90,
                          "maximum": 90
                        },
                        "Longitude": {
                          "type": "number",
                          "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                          "minimum": -180,
                          "maximum": 180
                        },
                        "Lineage": {
                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "EntityId": {
                              "type": "string",
                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                            },
                            "EventId": {
                              "type": "string",
                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                            },
                            "AsOf": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                            },
                            "SourceSystem": {
                              "type": "string",
                              "description": "The source system of the most recent impacting change that the above event (details) are related to"
                            }
                          },
                          "required": [
                            "EntityId,EventId,AsOf"
                          ]
                        }
                      },
                      "required": [
                        "Latitude",
                        "Longitude"
                      ]
                    },
                    "PrimaryLanguage": {
                      "type": "string",
                      "description": "The canonical Primary Language of the country"
                    },
                    "Currency": {
                      "description": "The canonical Currency Code of the country (canonical from google)",
                      "type": "object",
                      "anyOf": [
                        {
                          "required": [
                            "ISO2"
                          ]
                        },
                        {
                          "required": [
                            "ISO3"
                          ]
                        }
                      ],
                      "unevaluatedProperties": false,
                      "properties": {
                        "ISO2": {
                          "type": "string",
                          "description": "The canonical ISO2 currency code"
                        },
                        "ISO3": {
                          "type": "string",
                          "description": "The canonical ISO3 currency code"
                        },
                        "Number": {
                          "type": "string",
                          "description": "The canonical currency number"
                        },
                        "DecimalPlaces": {
                          "type": "string",
                          "description": "The canonical number of decimal places for the currency"
                        },
                        "CountryCodes": {
                          "type": "array",
                          "description": "The canonical array of ISO3 country codes officially using this currency",
                          "items": {
                            "type": "string"
                          }
                        },
                        "Symbol": {
                          "type": "string",
                          "description": "The canonical symbol for the currency"
                        },
                        "Lineage": {
                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "EntityId": {
                              "type": "string",
                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                            },
                            "EventId": {
                              "type": "string",
                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                            },
                            "AsOf": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                            },
                            "SourceSystem": {
                              "type": "string",
                              "description": "The source system of the most recent impacting change that the above event (details) are related to"
                            }
                          },
                          "required": [
                            "EntityId,EventId,AsOf"
                          ]
                        }
                      }
                    },
                    "IsEuropeanCountry": {
                      "type": "string",
                      "description": "Is this country an european one? e.g Y",
                      "enum": [
                        "Y",
                        "N",
                        "U"
                      ]
                    },
                    "Lineage": {
                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                      "type": "object",
                      "unevaluatedProperties": false,
                      "properties": {
                        "EntityId": {
                          "type": "string",
                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                        },
                        "EventId": {
                          "type": "string",
                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                        },
                        "AsOf": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                        },
                        "SourceSystem": {
                          "type": "string",
                          "description": "The source system of the most recent impacting change that the above event (details) are related to"
                        }
                      },
                      "required": [
                        "EntityId,EventId,AsOf"
                      ]
                    }
                  }
                },
                "Coordinates": {
                  "description": "The country of the channel",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Latitude": {
                      "type": "number",
                      "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                      "minimum": -90,
                      "maximum": 90
                    },
                    "Longitude": {
                      "type": "number",
                      "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                      "minimum": -180,
                      "maximum": 180
                    },
                    "Lineage": {
                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                      "type": "object",
                      "unevaluatedProperties": false,
                      "properties": {
                        "EntityId": {
                          "type": "string",
                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                        },
                        "EventId": {
                          "type": "string",
                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                        },
                        "AsOf": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                        },
                        "SourceSystem": {
                          "type": "string",
                          "description": "The source system of the most recent impacting change that the above event (details) are related to"
                        }
                      },
                      "required": [
                        "EntityId,EventId,AsOf"
                      ]
                    }
                  },
                  "required": [
                    "Latitude",
                    "Longitude"
                  ]
                },
                "InvolvedReasonCode": {
                  "type": "string",
                  "description": "The (optional) reason that this channel/location was involved in the event e.g SoldLocation"
                }
              }
            },
            "Origin": {
              "type": "object",
              "description": "The 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
              "unevaluatedProperties": false,
              "properties": {
                "ChannelCode": {
                  "type": "string",
                  "description": "Raw form (optional) of the input ChannelCode from the source, used in transforming to 'Xfuze' representations e.g APP"
                },
                "ChannelName": {
                  "type": "string",
                  "description": "Raw form (optional) of the input ChannelName from the source, used in transforming to 'Xfuze' representations e.g MOBILEAPP"
                },
                "LocationId": {
                  "type": "string",
                  "description": "Raw form (optional) of the input LocationId from the source, used in transforming to 'Xfuze' representations e.g Location_Hybris_f37f4592-da7e-4e59-bddc-6f6f2e17d3eb"
                },
                "LocationNumber": {
                  "type": "string",
                  "description": "Raw form (optional) of the input LocationNumber from the source, used in transforming to 'Xfuze' representations e.g 189"
                },
                "LocationType": {
                  "type": "string",
                  "description": "Raw form (optional) of the input LocationType from the source, used in transforming to 'Xfuze' representations e.g STORE"
                },
                "CountryCode": {
                  "type": "string",
                  "description": "Raw form (optional) of the input CountryCode from the source, used in transforming to 'Xfuze' representations e.g GB"
                }
              }
            }
          }
        },
        "MeasuresAtts": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/MeasuresAtts",
          "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/MeasuresAtts'",
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "TriggerEntity": {
              "type": "object",
              "description": "The Xfuze key contextual 'measures' (numerical values) contained in the event that contextualise the change itself (e.g for SalesOrderItemsCancelled event, the QtyCancelled)",
              "unevaluatedProperties": false,
              "properties": {
                "Value1": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g 232.98"
                },
                "Value1Code": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g SalesOrder.Header.Totals.GrandTotal.BCY.IncTax"
                },
                "Value2": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g 50.15"
                },
                "Value2Code": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g SalesOrder.Header.Totals.FinalMargin.BCY.Percent"
                },
                "Value3": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g 0.0"
                },
                "Value3Code": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g SalesOrder.Header.Totals.DiscountsTotal.BCY.IncTax"
                },
                "Value4": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g 50.15"
                },
                "Value4Code": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g SalesOrder.Header.Totals.FinalMargin.BCY.Percent"
                },
                "Value5": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g 0.0"
                },
                "Value5Code": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g SalesOrder.Header.Totals.DiscountsTotal.BCY.IncTax"
                },
                "Value6": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g 3"
                },
                "Value6Code": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g SalesOrder.Header.Qtys.QtySold"
                },
                "Value7": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g 3"
                },
                "Value7Code": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g SalesOrder.Header.Qtys.QtySold"
                }
              }
            },
            "LatestEntity": {
              "type": "object",
              "description": "The Xfuze key contextual 'measures' (numerical values) contained in the event that contextualise the latest entity state itself (e.g stateful view - for SalesOrderItemsCancelled event, the QtyCancelled, QtyNet & QtySold)",
              "unevaluatedProperties": false,
              "properties": {
                "Value1": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g 232.98"
                },
                "Value1Code": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g SalesOrder.Header.Totals.GrandTotal.BCY.IncTax"
                },
                "Value2": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g 50.15"
                },
                "Value2Code": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g SalesOrder.Header.Totals.FinalMargin.BCY.Percent"
                },
                "Value3": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g 0.0"
                },
                "Value3Code": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g SalesOrder.Header.Totals.DiscountsTotal.BCY.IncTax"
                },
                "Value4": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g 50.15"
                },
                "Value4Code": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g SalesOrder.Header.Totals.FinalMargin.BCY.Percent"
                },
                "Value5": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g 0.0"
                },
                "Value5Code": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g SalesOrder.Header.Totals.DiscountsTotal.BCY.IncTax"
                },
                "Value6": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g 3"
                },
                "Value6Code": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g SalesOrder.Header.Qtys.QtySold"
                },
                "Value7": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g 3"
                },
                "Value7Code": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "e.g SalesOrder.Header.Qtys.QtySold"
                }
              }
            }
          }
        },
        "ReferenceAtts": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/ReferenceAtts",
          "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/ReferenceAtts'",
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "ReferenceAtts": {
              "type": "object",
              "unevaluatedProperties": false,
              "description": "The Xfuze derived / enriched attributes that define core reference data / lookup data fields to enrich other structs/fields with in the event",
              "properties": {
                "Atts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "A custom att object, a generic extension object",
                    "unevaluatedProperties": false,
                    "properties": {
                      "Code": {
                        "type": "string",
                        "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                      },
                      "CodeShort": {
                        "type": "string",
                        "description": "The short version of the code in the leaf element of 'Code'"
                      },
                      "Name": {
                        "type": "string",
                        "description": "The name of the att"
                      },
                      "Value": {
                        "type": "string",
                        "description": "The value of the att"
                      },
                      "Desc": {
                        "type": "string",
                        "description": "The desc of the att"
                      },
                      "SourceSystem": {
                        "type": "string",
                        "description": "The source system this att is from"
                      },
                      "Lineage": {
                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                        "type": "object",
                        "unevaluatedProperties": false,
                        "properties": {
                          "EntityId": {
                            "type": "string",
                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                          },
                          "EventId": {
                            "type": "string",
                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                          },
                          "AsOf": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                          },
                          "SourceSystem": {
                            "type": "string",
                            "description": "The source system of the most recent impacting change that the above event (details) are related to"
                          }
                        },
                        "required": [
                          "EntityId,EventId,AsOf"
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "Atts"
              ]
            }
          },
          "required": [
            "ReferenceAtts"
          ]
        },
        "PrivacyAtts": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/PrivacyAtts",
          "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/PrivacyAtts'",
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "Xfuze": {
              "type": "object",
              "description": "The (required)  Xfuze derived / enriched attributes that define the context of the privacy of the data involved in event",
              "unevaluatedProperties": false,
              "properties": {
                "IsSensitiveEntity": {
                  "type": "string",
                  "description": "Is this a sensitive entity that needs sensitive handling for GDRP / PII? etc e.g Y",
                  "enum": [
                    "Y",
                    "N",
                    "U"
                  ]
                },
                "IsEncrypted": {
                  "type": "string",
                  "description": "Is this entities sensitive fields encrypted by Xfuze in this event? e.g N",
                  "enum": [
                    "Y",
                    "N",
                    "U"
                  ]
                },
                "EncryptionKeyId": {
                  "type": "string",
                  "description": "The ID (typically a cloud Id) of the key used in encryption e.g 1234abcd-12ab-34cd-56ef-1234567890ab"
                },
                "EncryptionKeyURI": {
                  "type": "string",
                  "description": "The URI (typically a cloud Id) of the key used in encryption  e.g arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"
                },
                "EncryptionKeyName": {
                  "type": "string",
                  "description": "e.g The name (typically a cloud Id) of the key used in encryption xfuze-default-key"
                },
                "EncryptionKeyHost": {
                  "type": "string",
                  "description": "The encryption key host provider e.g AWS::KMS"
                },
                "SensitiveFieldPaths": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The array of canonical codes of those sensitive fields contained in this event e.g Party.Profile.Name.FirstName"
                }
              },
              "required": [
                "IsSensitiveEntity",
                "IsEncrypted"
              ]
            },
            "Origin": {
              "type": "object",
              "description": "The (optional) 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
              "unevaluatedProperties": false,
              "properties": {
                "IsEncrypted": {
                  "type": "string",
                  "description": "Raw form (optional) of the input ProductId from the source, used in transforming to 'Xfuze' representations e.g 1"
                }
              },
              "required": [
                "IsEncrypted"
              ]
            }
          }
        },
        "IngestAtts": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/IngestAtts",
          "description": "XDM Schema for the common event component 'EventHeader/IngestAtts'",
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "Xfuze": {
              "type": "object",
              "title": "Xfuze IngestAtts",
              "description": "The (required) Xfuze derived / enriched attributes that define the context of the external trigger system and full ingest path for lineage and auditability",
              "unevaluatedProperties": false,
              "oneOf": [
                {
                  "required": [
                    "File"
                  ]
                },
                {
                  "required": [
                    "Stream"
                  ]
                },
                {
                  "required": [
                    "Api"
                  ]
                },
                {
                  "required": [
                    "Table"
                  ]
                }
              ],
              "properties": {
                "File": {
                  "type": "object",
                  "properties": {
                    "SystemCode": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The (required) system code of the provider of the file e.g GCS"
                    },
                    "URI": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The (optional) URI of the file if a cloud file being processed that this event was derived from e.g gcs://xfuze-file-ingest/clientA/prod/dt=20230810/SalesDaily.csv"
                    },
                    "Path": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The (required) URI of the file if a cloud file being processed that this event was derived from e.g xfuze-file-ingest/clientA/prod/dt=20230810"
                    },
                    "Name": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The (required) name of the file if a cloud file being processed that this event was derived from e.g SalesDaily.csv"
                    },
                    "BatchId": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The (optional) batch ID if processing is being batched e.g BT1001"
                    },
                    "BatchNumber": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The (optional) batch Number if processing is being batched e.g BT1001-004"
                    },
                    "LineNumber": {
                      "type": "number",
                      "description": "The (optional) line number within a batch, as a key way to track lineage of event to source row e.g 234"
                    },
                    "TotalBatchLines": {
                      "type": "number",
                      "description": "The (optional) total number of lines within the batch, as a tracker of batch completion e.g 500 "
                    },
                    "OriginalFileSizeBytes": {
                      "type": "number",
                      "description": "The (required) original file size in bytes, key to reconciliation in chunked/streaming mode e.g 25000 "
                    },
                    "OriginalRowSizeBytes": {
                      "type": "number",
                      "description": "The (optional) original file size in bytes, key to reconciliation in chunked/streaming mode e.g 500 "
                    },
                    "BytesOffsetInOriginalFile": {
                      "type": "number",
                      "description": "The (optional) original file size in bytes, key to reconciliation in chunked/streaming mode e.g 500 "
                    },
                    "FormatType": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The (required) source format type",
                      "enum": [
                        "CSV",
                        "TCSV",
                        "INI",
                        "TXT",
                        "JSON",
                        "BSON",
                        "XML",
                        "YAML",
                        "Protobuf",
                        "Binary",
                        "MessagePack",
                        "Avro",
                        "Thrift",
                        "Parquet",
                        "Arrow",
                        "Other"
                      ]
                    },
                    "PatternType": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The (optional) type of File ingest pattern e.g Cloud Object Notification",
                      "enum": [
                        "CloudObjectNotification",
                        "SFTP",
                        "FTP",
                        "CloudObjectScan",
                        "Other"
                      ]
                    },
                    "ChangeTimestampUTC": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time",
                      "description": "The  (optional) time at which the file object changed state and triggered a notification, often in cloud metadata e.g GCS metadata"
                    },
                    "ObjectNotificationPayload": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The (optional) raw JSON string of the cloud object notification payload e.g GCS file notification"
                    }
                  }
                },
                "Stream": {
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "SystemCode": {
                      "type": "string"
                    },
                    "ChannelURI": {
                      "type": "string"
                    },
                    "ChannelName": {
                      "type": "string"
                    },
                    "ChannelType": {
                      "type": "string"
                    },
                    "Partition": {
                      "type": "string"
                    },
                    "Offset": {
                      "type": "number"
                    },
                    "ExternalMessageId": {
                      "type": "string"
                    },
                    "FormatType": {
                      "type": "string"
                    },
                    "PatternType": {
                      "type": "string"
                    },
                    "PublishTimestampUTC": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time"
                    }
                  }
                },
                "Api": {
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "SystemCode": {
                      "type": "string"
                    },
                    "URI": {
                      "type": "string"
                    },
                    "Name": {
                      "type": "string"
                    },
                    "Resource": {
                      "type": "string"
                    },
                    "HttpMethod": {
                      "type": "string"
                    },
                    "QueryString": {
                      "type": "string"
                    },
                    "FormatType": {
                      "type": "string"
                    },
                    "PatternType": {
                      "type": "string"
                    },
                    "InvokeTimestampUTC": {
                      "type": "string"
                    }
                  }
                },
                "Table": {
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "SystemCode": {
                      "type": "string"
                    },
                    "DatabaseURI": {
                      "type": "string"
                    },
                    "DatabaseName": {
                      "type": "string"
                    },
                    "SchemaName": {
                      "type": "string"
                    },
                    "TableName": {
                      "type": "string"
                    },
                    "RowKey": {
                      "type": "string"
                    },
                    "Method": {
                      "type": "string"
                    },
                    "PatternType": {
                      "type": "string"
                    },
                    "ReceiveTimestampUTC": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "required": [
            "Xfuze"
          ]
        },
        "PayloadAtts": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/PayloadAtts",
          "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/PayloadAtts'",
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "Xfuze": {
              "type": "object",
              "description": "The Xfuze derived / enriched attributes that define various hashing values of the payloads, for deduping and change detection",
              "unevaluatedProperties": false,
              "properties": {
                "DataPayloadHash": {
                  "type": "string",
                  "description": "The hash of the 'Data / Domain Objects' part of the Xfuze payload only, excluding EventHeader details e.g ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad"
                },
                "EventPayloadHash": {
                  "type": "string",
                  "description": "The hash of the 'Full Event' of the Xfuze payload, including EventHeader e.g cd5453f8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad"
                },
                "HashScheme": {
                  "type": "string",
                  "description": "The hash scheme used to hash the payload partse.g SHA256, MD5",
                  "enum": [
                    "SHA256",
                    "MD5",
                    "BASE64"
                  ]
                }
              }
            },
            "Origin": {
              "type": "object",
              "description": "The 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
              "required": [
                "DataPayloadHash"
              ],
              "unevaluatedProperties": false,
              "properties": {
                "DataPayloadHash": {
                  "type": "string",
                  "description": "The hash of the Origins 'Data / Domain Objects' part of the Xfuze payload only, excluding EventHeader details e.g ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad"
                },
                "EventPayloadHash": {
                  "type": "string",
                  "description": "The hash of the Origins 'Full Event' payload, if applicable e.g cd5453f8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad"
                },
                "HashScheme": {
                  "type": "string",
                  "description": "The hash scheme used to hash the origin payload partse.g SHA256, MD5",
                  "enum": [
                    "SHA256",
                    "MD5",
                    "BASE64",
                    "Other"
                  ]
                }
              }
            }
          }
        },
        "LabelAtts": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/LabelAtts",
          "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/LabelAtts'",
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "LabelAtts": {
              "type": "object",
              "description": "The Xfuze derived / enriched customer extension atts as a generic placeholder for new values not in the core schema of the XDM event",
              "unevaluatedProperties": false,
              "properties": {
                "Atts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "A custom att object, a generic extension object",
                    "unevaluatedProperties": false,
                    "properties": {
                      "Code": {
                        "type": "string",
                        "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                      },
                      "CodeShort": {
                        "type": "string",
                        "description": "The short version of the code in the leaf element of 'Code'"
                      },
                      "Name": {
                        "type": "string",
                        "description": "The name of the att"
                      },
                      "Value": {
                        "type": "string",
                        "description": "The value of the att"
                      },
                      "Desc": {
                        "type": "string",
                        "description": "The desc of the att"
                      },
                      "SourceSystem": {
                        "type": "string",
                        "description": "The source system this att is from"
                      },
                      "Lineage": {
                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                        "type": "object",
                        "unevaluatedProperties": false,
                        "properties": {
                          "EntityId": {
                            "type": "string",
                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                          },
                          "EventId": {
                            "type": "string",
                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                          },
                          "AsOf": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                          },
                          "SourceSystem": {
                            "type": "string",
                            "description": "The source system of the most recent impacting change that the above event (details) are related to"
                          }
                        },
                        "required": [
                          "EntityId,EventId,AsOf"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "required": [
            "LabelAtts"
          ]
        },
        "DqTestAtts": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/DqTestAtts",
          "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/DqTestAtts'",
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "Xfuze": {
              "type": "object",
              "description": "The Xfuze derived / enriched attributes that define the schema and transforms and metadata used in generating this transform",
              "unevaluatedProperties": false,
              "properties": {
                "DqTestAtts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "unevaluatedProperties": false,
                    "properties": {
                      "TestId": {
                        "type": "null"
                      },
                      "TestName": {
                        "type": "null"
                      },
                      "TestType": {
                        "type": "null"
                      },
                      "TestVersion": {
                        "type": "null"
                      },
                      "ActualResultCode": {
                        "type": "null"
                      },
                      "ActualResultValue": {
                        "type": "null"
                      },
                      "ExpectedResultCode": {
                        "type": "null"
                      },
                      "ExpectedResultValue": {
                        "type": "null"
                      },
                      "Note": {
                        "type": "null"
                      },
                      "SeverityCode": {
                        "type": "null"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": [
            "DqTestAtts"
          ]
        },
        "ReplayAtts": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/ReplayAtts",
          "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/ReplayAtts'",
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "Xfuze": {
              "type": "object",
              "description": "The Xfuze derived / enriched attributes that define the schema and transforms and metadata used in generating this transform",
              "unevaluatedProperties": false,
              "properties": {
                "IsReplayed": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "ReplayStatusCode": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "ReplayStatusReason": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "ReplayCount": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "LastEventId": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "LastEventOccurredTimestampUTC": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            },
            "Origin": {
              "type": "object",
              "description": "The 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
              "unevaluatedProperties": false,
              "properties": {
                "IsReplayed": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "ReplayStatusCode": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "ReplayStatusReason": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "ReplayCount": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "LastEventId": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "LastEventOccurredTimestampUTC": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          }
        },
        "ErrorAtts": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/ErrorAtts",
          "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/ErrorAtts'",
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "Xfuze": {
              "type": "object",
              "description": "The Xfuze derived / enriched error attributes for capturing error info related to any part of the event tlifecycle of this event",
              "unevaluatedProperties": false,
              "properties": {
                "ServiceId": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "(TODO)"
                },
                "ErrorId": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "(TODO)"
                },
                "ErrorType": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "(TODO)",
                  "enum": [
                    "Ingress Source - Source Connectivity",
                    "Ingress Source - Source Data Quality",
                    "Ingress Connector - Network",
                    "Ingress Connector - Storage",
                    "Ingress Connector - Database",
                    "Ingress Connector - Security",
                    "Ingress Connector - XDM - Bad Raw Input",
                    "Ingress Connector - XDM - Schema Validation Error",
                    "Ingress Connector - XDM - Transformation Execution Error",
                    "Ingress Connector - Distribution - Publication Error",
                    "(Other)"
                  ]
                },
                "ErrorCode": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "(TODO)"
                },
                "ErrorDesc": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "(TODO)"
                },
                "ErrorPriority": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "Critical",
                    "VeryHigh",
                    "High",
                    "Medium",
                    "Low"
                  ]
                },
                "ErrorSourceSystem": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "(TODO)"
                },
                "ErrorSourceSubSystem": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "(TODO)"
                },
                "ErrorSourceEventId": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "(TODO)"
                },
                "ErrorEventId": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "(TODO)"
                },
                "ErrorTimestampUTC": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "(TODO)"
                },
                "ErrorEntityId": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "(TODO)"
                },
                "StackTrace": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "(TODO)"
                },
                "HttpStatusCode": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "(TODO)"
                },
                "LogHint": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "(TODO)"
                },
                "RemedyType": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "XiatechToResolve",
                    "ClientToResolve",
                    "ThirdPartyToResolve",
                    "Unknown"
                  ]
                }
              }
            },
            "Origin": {
              "type": "object",
              "description": "The 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
              "unevaluatedProperties": false,
              "properties": {
                "ErrorCode": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "ErrorDesc": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "HttpStatusCode": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "ReplayCount": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "LastEventId": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "LastEventOccurredTimestampUTC": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          }
        },
        "ExtensionAtts": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/ExtensionAtts",
          "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/ExtensionAtts'",
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "ExtensionAtts": {
              "type": "object",
              "description": "The Xfuze derived / enriched customer extension atts as a generic placeholder for new values not in the core schema of the XDM event",
              "unevaluatedProperties": false,
              "properties": {
                "Atts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "A custom att object, a generic extension object",
                    "unevaluatedProperties": false,
                    "properties": {
                      "Code": {
                        "type": "string",
                        "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                      },
                      "CodeShort": {
                        "type": "string",
                        "description": "The short version of the code in the leaf element of 'Code'"
                      },
                      "Name": {
                        "type": "string",
                        "description": "The name of the att"
                      },
                      "Value": {
                        "type": "string",
                        "description": "The value of the att"
                      },
                      "Desc": {
                        "type": "string",
                        "description": "The desc of the att"
                      },
                      "SourceSystem": {
                        "type": "string",
                        "description": "The source system this att is from"
                      },
                      "Lineage": {
                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                        "type": "object",
                        "unevaluatedProperties": false,
                        "properties": {
                          "EntityId": {
                            "type": "string",
                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                          },
                          "EventId": {
                            "type": "string",
                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                          },
                          "AsOf": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                          },
                          "SourceSystem": {
                            "type": "string",
                            "description": "The source system of the most recent impacting change that the above event (details) are related to"
                          }
                        },
                        "required": [
                          "EntityId,EventId,AsOf"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "required": [
            "ExtensionAtts"
          ]
        }
      },
      "required": [
        "EventAtts",
        "EntityAtts",
        "TimeAtts",
        "IngestAtts",
        "PrivacyAtts",
        "PayloadAtts"
      ]
    },
    "DomainEvent": {
      "type": "object",
      "required": [
        "TriggerEntity"
      ],
      "unevaluatedProperties": false,
      "properties": {
        "TriggerEntity": {
          "type": "object",
          "unevaluatedProperties": false,
          "properties": {
            "ProductVariant": {
              "properties": {
                "EntityId": {
                  "type": "string",
                  "description": "The (required) globally unique synthetic Xfuze Id for the entity instance this event is related to and whose payload is the subject of change, unique across all entities. Typically of the format [EntityType::EntitySubType]_[SystemCode]_[RawEntityId] where RawEntityId can be composed of 1 or more source fields to create singular uniqueness e.g SalesOrderLine::Return_Hybris_8106008620_RET1"
                },
                "EntityType": {
                  "type": "string",
                  "description": "The (required) entity type, allowing for a typing system (top level) for entities, where the type is sourced from the master Xfuze control list e.g SalesOrderLine"
                },
                "EntitySubType": {
                  "type": "string",
                  "description": "An (optional) entity subtype, allowing for further, more refined typing of the core type for accuracy of interpretation e.g ReturnLine, CancelLine, VoidLine etc"
                },
                "ParentEntityId": {
                  "type": "string",
                  "description": "An (required) canonical Xfuze parent entity Id, where there is a natural parent a level above, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
                },
                "ParentEntityType": {
                  "type": "string",
                  "description": "An (required) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                },
                "CompositeEntityId": {
                  "type": "string",
                  "description": "An (optional) canonical Xfuze parent entity Id, where there is a natural 'composition' and containing parent, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
                },
                "CompositeEntityType": {
                  "type": "string",
                  "description": "An (optional) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                },
                "RawEntityId": {
                  "type": "string",
                  "description": "An (optional) raw/native key used to derived EntityId.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                },
                "XRefIds": {
                  "description": "The list of cross reference lookups, i.e all the ways to look up this entity by the various data points, both in canonical Ids and system specific ones",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "description": "An object to capture cross referencing fields to support entity lookups by various surrogate keys spanning systems",
                    "unevaluatedProperties": false,
                    "properties": {
                      "Id": {
                        "type": "string",
                        "description": "The value of the id/key to lookup using (i.e surrogate key 'value') e.g TRAN123456"
                      },
                      "SystemCode": {
                        "type": "string",
                        "description": "The system mastering the 'Code' field and its 'Id' value e.g PMC"
                      },
                      "Code": {
                        "type": "string",
                        "description": "The name of the id/key to lookup using (i.e surrogate key 'value') as is its exact name from source e.g transId"
                      },
                      "EntityId": {
                        "type": "string",
                        "description": "The Xfuze EntityId this cross referencing lookup resolves to e.g SalesOrderLine_PMC_TRAN123456"
                      },
                      "ParentEntityId": {
                        "type": "string",
                        "description": "The Xfuze ParentEntityId this cross referencing lookup resolves to e.g SalesOrderHeader_PMC_TRAN123456"
                      },
                      "CompositeEntityId": {
                        "type": "string",
                        "description": "The Xfuze CompositeEntityId this cross referencing lookup resolves to e.g SalesOrder_PMC_TRAN123456"
                      },
                      "Lineage": {
                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                        "type": "object",
                        "unevaluatedProperties": false,
                        "properties": {
                          "EntityId": {
                            "type": "string",
                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                          },
                          "EventId": {
                            "type": "string",
                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                          },
                          "AsOf": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                          },
                          "SourceSystem": {
                            "type": "string",
                            "description": "The source system of the most recent impacting change that the above event (details) are related to"
                          }
                        },
                        "required": [
                          "EntityId,EventId,AsOf"
                        ]
                      }
                    }
                  }
                },
                "TimeZones": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "required": [
                      "TimeZone"
                    ],
                    "unevaluatedProperties": false,
                    "properties": {
                      "TimeZone": {
                        "type": "string",
                        "description": "The Time Zone e.g Europe/London"
                      },
                      "TimeZoneOffset": {
                        "type": "string",
                        "description": "UTC+01:00"
                      },
                      "TimeZoneExplicitCode": {
                        "type": "string",
                        "description": "Indicates whether the timeZone offset is explicit in the source (e.g +01:00) or implicit (e.g assumed to be +01:00, and thus reformatting work is needed to make explicit)",
                        "enum": [
                          "ExplicitOffsetInSource",
                          "ImplicitOffsetNotInSource"
                        ]
                      },
                      "Country": {
                        "description": "The country of the timezone",
                        "type": "object",
                        "anyOf": [
                          {
                            "properties": {
                              "ISO2": {
                                "type": "string",
                                "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                              }
                            },
                            "required": [
                              "ISO2"
                            ]
                          },
                          {
                            "properties": {
                              "ISO3": {
                                "type": "string",
                                "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                              }
                            },
                            "required": [
                              "ISO3"
                            ]
                          }
                        ],
                        "unevaluatedProperties": false,
                        "properties": {
                          "CountryCode": {
                            "type": "string",
                            "description": "The canonical CountryCode (country-code) country code e.g 036"
                          },
                          "Name": {
                            "type": "string",
                            "description": "The canonical (official) 'Name' of the country e.g Australia"
                          },
                          "AltName": {
                            "type": "string",
                            "description": "An alternate name for the country"
                          },
                          "RegionCode": {
                            "type": "string",
                            "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                          },
                          "RegionName": {
                            "type": "string",
                            "description": "The canonical RegionName (region) for the country code e.g Oceania"
                          },
                          "SubRegionCode": {
                            "type": "string",
                            "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                          },
                          "SubRegionName": {
                            "type": "string",
                            "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                          },
                          "IntermediateRegionCode": {
                            "type": "string",
                            "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                          },
                          "IntermediateRegionName": {
                            "type": "string",
                            "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                          },
                          "Coordinates": {
                            "description": "The canonical Coordinates of the country (canonical from google)",
                            "type": "object",
                            "unevaluatedProperties": false,
                            "properties": {
                              "Latitude": {
                                "type": "number",
                                "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                "minimum": -90,
                                "maximum": 90
                              },
                              "Longitude": {
                                "type": "number",
                                "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                "minimum": -180,
                                "maximum": 180
                              },
                              "Lineage": {
                                "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                "type": "object",
                                "unevaluatedProperties": false,
                                "properties": {
                                  "EntityId": {
                                    "type": "string",
                                    "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                  },
                                  "EventId": {
                                    "type": "string",
                                    "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                  },
                                  "AsOf": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                  },
                                  "SourceSystem": {
                                    "type": "string",
                                    "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                  }
                                },
                                "required": [
                                  "EntityId,EventId,AsOf"
                                ]
                              }
                            },
                            "required": [
                              "Latitude",
                              "Longitude"
                            ]
                          },
                          "PrimaryLanguage": {
                            "type": "string",
                            "description": "The canonical Primary Language of the country"
                          },
                          "Currency": {
                            "description": "The canonical Currency Code of the country (canonical from google)",
                            "type": "object",
                            "anyOf": [
                              {
                                "required": [
                                  "ISO2"
                                ]
                              },
                              {
                                "required": [
                                  "ISO3"
                                ]
                              }
                            ],
                            "unevaluatedProperties": false,
                            "properties": {
                              "ISO2": {
                                "type": "string",
                                "description": "The canonical ISO2 currency code"
                              },
                              "ISO3": {
                                "type": "string",
                                "description": "The canonical ISO3 currency code"
                              },
                              "Number": {
                                "type": "string",
                                "description": "The canonical currency number"
                              },
                              "DecimalPlaces": {
                                "type": "string",
                                "description": "The canonical number of decimal places for the currency"
                              },
                              "CountryCodes": {
                                "type": "array",
                                "description": "The canonical array of ISO3 country codes officially using this currency",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "Symbol": {
                                "type": "string",
                                "description": "The canonical symbol for the currency"
                              },
                              "Lineage": {
                                "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                "type": "object",
                                "unevaluatedProperties": false,
                                "properties": {
                                  "EntityId": {
                                    "type": "string",
                                    "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                  },
                                  "EventId": {
                                    "type": "string",
                                    "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                  },
                                  "AsOf": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                  },
                                  "SourceSystem": {
                                    "type": "string",
                                    "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                  }
                                },
                                "required": [
                                  "EntityId,EventId,AsOf"
                                ]
                              }
                            }
                          },
                          "IsEuropeanCountry": {
                            "type": "string",
                            "description": "Is this country an european one? e.g Y",
                            "enum": [
                              "Y",
                              "N",
                              "U"
                            ]
                          },
                          "Lineage": {
                            "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                            "type": "object",
                            "unevaluatedProperties": false,
                            "properties": {
                              "EntityId": {
                                "type": "string",
                                "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                              },
                              "EventId": {
                                "type": "string",
                                "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                              },
                              "AsOf": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                              },
                              "SourceSystem": {
                                "type": "string",
                                "description": "The source system of the most recent impacting change that the above event (details) are related to"
                              }
                            },
                            "required": [
                              "EntityId,EventId,AsOf"
                            ]
                          }
                        }
                      },
                      "Lineage": {
                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                        "type": "object",
                        "unevaluatedProperties": false,
                        "properties": {
                          "EntityId": {
                            "type": "string",
                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                          },
                          "EventId": {
                            "type": "string",
                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                          },
                          "AsOf": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                          },
                          "SourceSystem": {
                            "type": "string",
                            "description": "The source system of the most recent impacting change that the above event (details) are related to"
                          }
                        },
                        "required": [
                          "EntityId,EventId,AsOf"
                        ]
                      }
                    }
                  }
                },
                "Times": {
                  "type": "object",
                  "additionalProperties": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "unevaluatedProperties": false,
                    "anyOf": [
                      {
                        "required": [
                          "DateId",
                          "UTC",
                          "Millis"
                        ]
                      },
                      {
                        "required": [
                          "DateId",
                          "Local",
                          "TimeZone"
                        ]
                      }
                    ],
                    "properties": {
                      "DateId": {
                        "type": "string",
                        "description": "The Xfuze Date dim Id e.g Date_20231001"
                      },
                      "DateKey": {
                        "type": "number",
                        "min-length": 8,
                        "max-length": 8,
                        "description": "The Xfuze Date Key as a number e.g 20231001"
                      },
                      "UTC": {
                        "type": "string",
                        "format": "date-time",
                        "description": "An Xfuze timestamp represented in UTC e.g 2023-11-06T17:12:30.780Z"
                      },
                      "DateTimeKey": {
                        "type": "number",
                        "min-length": 14,
                        "max-length": 14,
                        "description": "An Xfuze timestamp represented in number format e.g 20231109135856000"
                      },
                      "DateUTC": {
                        "type": "string",
                        "format": "date",
                        "description": "An Xfuze timestamp as date represented in UTC e.g 2023-01-12"
                      },
                      "RawValue": {
                        "type": "string",
                        "description": "An input timestamp parsed to Xfuze in raw format e.g 2023-11-06T17:12:30.780Z"
                      },
                      "Local": {
                        "type": "string",
                        "format": "date-time",
                        "description": "An Xfuze timestamp represented in local time e.g 2023-11-06T17:12:30.780Z+00:00"
                      },
                      "DateLocal": {
                        "type": "string",
                        "format": "date",
                        "description": "An Xfuze timestamp as date represented in local timeZone aware (if date is input not a TS is always = DateUTC ) e.g 2023-01-12"
                      },
                      "HourId": {
                        "type": "string",
                        "description": "The Xfuze hour dim Id e.g Hours_2023110617"
                      },
                      "HourKey": {
                        "type": "number",
                        "min-length": 10,
                        "max-length": 10,
                        "description": "The Xfuze hour key in number form e.g 2023110617"
                      },
                      "Millis": {
                        "type": "number",
                        "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                      },
                      "HourUTC": {
                        "type": "number",
                        "min-length": 2,
                        "max-length": 2,
                        "description": "The Xfuze hour in number form e.g 17"
                      },
                      "HourLocal": {
                        "type": "number",
                        "min-length": 2,
                        "max-length": 2,
                        "description": "The Xfuze hour in number form e.g 17"
                      },
                      "TimeZone": {
                        "type": "string",
                        "description": "The related time zone offset used in local conversions e.g UTC, Europe/London"
                      },
                      "TimeZoneOffset": {
                        "type": "string",
                        "description": "The related time zone offset used in local conversions e.g +00:00"
                      },
                      "YearMonth": {
                        "type": "number",
                        "min-length": 6,
                        "max-length": 6,
                        "description": "The Xfuze YearMonth in number form e.g 202311"
                      },
                      "YearWeek": {
                        "type": "number",
                        "min-length": 6,
                        "max-length": 6,
                        "description": "The Xfuze YearWeek in number form e.g 202344"
                      },
                      "YearIsoWeek": {
                        "type": "number",
                        "min-length": 6,
                        "max-length": 6,
                        "description": "The Xfuze YearIsoWeek in number form e.g 202345"
                      },
                      "YearDay": {
                        "type": "number",
                        "min-length": 7,
                        "max-length": 7,
                        "description": "The YearDay in number form e.g 2023310"
                      },
                      "Lineage": {
                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                        "type": "object",
                        "unevaluatedProperties": false,
                        "properties": {
                          "EntityId": {
                            "type": "string",
                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                          },
                          "EventId": {
                            "type": "string",
                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                          },
                          "AsOf": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                          },
                          "SourceSystem": {
                            "type": "string",
                            "description": "The source system of the most recent impacting change that the above event (details) are related to"
                          }
                        },
                        "required": [
                          "EntityId,EventId,AsOf"
                        ]
                      }
                    }
                  }
                },
                "Status": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "required": [
                      "StatusCode"
                    ],
                    "unevaluatedProperties": false,
                    "properties": {
                      "StatusClass": {
                        "type": "string",
                        "description": "The class of the status e.g Retail, Hire, TailorMe"
                      },
                      "StatusCode": {
                        "type": "string",
                        "description": "The (required) unique code for the status e.g InProcessing"
                      },
                      "SubStatusCode": {
                        "type": "string",
                        "description": "A sub status if applicable e.g Invoiced"
                      },
                      "StatusDesc": {
                        "type": "string",
                        "description": "The description for the status"
                      },
                      "SeqNo": {
                        "type": "number",
                        "description": "The sequence number of this status in relation to all the possible values if naturally ordinal e.g 2"
                      },
                      "ReasonCode": {
                        "type": "string",
                        "description": "A reason code for the status being in this state e.g Faulty Product"
                      },
                      "ReasonDesc": {
                        "type": "string",
                        "description": "A reason description for the status being in this state"
                      },
                      "Lineage": {
                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                        "type": "object",
                        "unevaluatedProperties": false,
                        "properties": {
                          "EntityId": {
                            "type": "string",
                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                          },
                          "EventId": {
                            "type": "string",
                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                          },
                          "AsOf": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                          },
                          "SourceSystem": {
                            "type": "string",
                            "description": "The source system of the most recent impacting change that the above event (details) are related to"
                          }
                        },
                        "required": [
                          "EntityId,EventId,AsOf"
                        ]
                      }
                    }
                  }
                },
                "Type": {
                  "type": "object",
                  "required": [
                    "TypeCode"
                  ],
                  "unevaluatedProperties": false,
                  "properties": {
                    "TypeClass": {
                      "type": "string",
                      "description": "The class of the type e.g Concession, Hire"
                    },
                    "TypeCode": {
                      "type": "string",
                      "description": "The canonical code of the type e.g Sale"
                    },
                    "TypeDesc": {
                      "type": "string",
                      "description": "The description of the type e.g Sale Order Line"
                    },
                    "SubTypeCode": {
                      "type": "string",
                      "description": "The canonical code of the sub type e.g Sale"
                    },
                    "SubTypeDesc": {
                      "type": "string",
                      "description": "The description of the sub type e.g Sale Order Line"
                    },
                    "Lineage": {
                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                      "type": "object",
                      "unevaluatedProperties": false,
                      "properties": {
                        "EntityId": {
                          "type": "string",
                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                        },
                        "EventId": {
                          "type": "string",
                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                        },
                        "AsOf": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                        },
                        "SourceSystem": {
                          "type": "string",
                          "description": "The source system of the most recent impacting change that the above event (details) are related to"
                        }
                      },
                      "required": [
                        "EntityId,EventId,AsOf"
                      ]
                    }
                  }
                },
                "ProductIds": {
                  "type": "object",
                  "description": "A collection of product ids as a common set",
                  "unevaluatedProperties": false,
                  "properties": {
                    "EntityId": {
                      "type": "string",
                      "description": "The (base) product Id, in Xfuze canonical form, identifying the (base not variant) product e.g Product_Retail247_123456"
                    },
                    "EntityType": {
                      "type": "string",
                      "description": "The type of the product the EntityId references e.g ProductVariant"
                    },
                    "ProductId": {
                      "type": "string",
                      "description": "The (base) product Id, in Xfuze canonical form, identifying the (base not variant) product e.g Product_Retail247_123456"
                    },
                    "ProductKey": {
                      "type": "string",
                      "description": "The (base) product number (native form like SKU), identifying the (base not variant) product e.g 123456"
                    },
                    "ProductVariantId": {
                      "type": "string",
                      "minLength": 1,
                      "description": "The (variant) product Id, in Xfuze canonical form, identifying the (base not variant) product Often the base [ProductId]_[VariantPart] where variant part can be for example a native key, a size code etc e.g ProductVariant_Retail247_123456789_32R"
                    },
                    "ProductVariantKey": {
                      "type": "string",
                      "minLength": 1,
                      "description": "The (variant) product number (native form like SKU), identifying the (base not variant) product e.g 123456789_32R"
                    },
                    "ProductVariantKeyType": {
                      "type": "string",
                      "description": "The (variant) product number (native form like SKU), identifying the (base not variant) product  e.g 123456789",
                      "enum": [
                        "SKU",
                        "EAN",
                        "UPC",
                        "OptionId"
                      ]
                    },
                    "SKU": {
                      "type": "string",
                      "description": "The SKU of the product e.g 123456789"
                    },
                    "EAN": {
                      "type": "string",
                      "description": "The EAN (a type of barcode, but here in explicit form) of the product e e.g 5059595842972"
                    },
                    "UPC": {
                      "type": "string",
                      "description": "The UPC (a type of barcode, but here in explicit form) of the product e.g 85059595842972"
                    },
                    "Barcode": {
                      "description": "The barcode of the product e.g 869893435059595842972",
                      "type": "object",
                      "unevaluatedProperties": false,
                      "properties": {
                        "Barcode": {
                          "type": "string",
                          "description": "The barcode data itself"
                        },
                        "BarcodeType": {
                          "type": "string",
                          "description": "The type of the barcode e.g  UPC, EAB, QRCode, Code39, Code128, DataMatrix, PDF417, ITF14, Codabar, MaxiCode"
                        },
                        "BarcodeSource": {
                          "type": "string",
                          "description": "The source of the barcode instance"
                        },
                        "Lineage": {
                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "EntityId": {
                              "type": "string",
                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                            },
                            "EventId": {
                              "type": "string",
                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                            },
                            "AsOf": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                            },
                            "SourceSystem": {
                              "type": "string",
                              "description": "The source system of the most recent impacting change that the above event (details) are related to"
                            }
                          },
                          "required": [
                            "EntityId,EventId,AsOf"
                          ]
                        }
                      }
                    },
                    "Barcodes": {
                      "type": "array",
                      "description": "A collection (array) of barcodes where 1 or more in array form",
                      "items": {
                        "type": "object",
                        "unevaluatedProperties": false,
                        "properties": {
                          "Barcode": {
                            "type": "string",
                            "description": "The barcode data itself"
                          },
                          "BarcodeType": {
                            "type": "string",
                            "description": "The type of the barcode e.g  UPC, EAB, QRCode, Code39, Code128, DataMatrix, PDF417, ITF14, Codabar, MaxiCode"
                          },
                          "BarcodeSource": {
                            "type": "string",
                            "description": "The source of the barcode instance"
                          },
                          "Lineage": {
                            "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                            "type": "object",
                            "unevaluatedProperties": false,
                            "properties": {
                              "EntityId": {
                                "type": "string",
                                "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                              },
                              "EventId": {
                                "type": "string",
                                "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                              },
                              "AsOf": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                              },
                              "SourceSystem": {
                                "type": "string",
                                "description": "The source system of the most recent impacting change that the above event (details) are related to"
                              }
                            },
                            "required": [
                              "EntityId,EventId,AsOf"
                            ]
                          }
                        }
                      }
                    },
                    "ItemOptionNumber": {
                      "type": "string",
                      "description": "The item option number of the product e.g 1111111"
                    }
                  },
                  "required": [
                    "ProductVariantKey",
                    "ProductVariantId"
                  ]
                },
                "CoreAtts": {
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "ProductCode": {
                      "type": "string"
                    },
                    "ProductName": {
                      "type": "string"
                    },
                    "Description": {
                      "type": "string"
                    },
                    "Barcode": {
                      "type": "string"
                    }
                  }
                },
                "Classifications": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "unevaluatedProperties": false,
                    "required": [
                      "Code"
                    ],
                    "properties": {
                      "Code": {
                        "type": "string"
                      },
                      "Desc": {
                        "type": "string"
                      }
                    }
                  }
                },
                "PricingFinancial": {
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "CostPrices": {
                      "type": "object",
                      "description": "A common component definng a 'Price', used for financial measures such as Unit Prices, Totals etc",
                      "additionalProperties": {
                        "type": "object",
                        "unevaluatedProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "BCY"
                            ]
                          },
                          {
                            "required": [
                              "LCY"
                            ]
                          }
                        ],
                        "properties": {
                          "BCY": {
                            "type": "object",
                            "properties": {
                              "ExTax": {
                                "type": [
                                  "number",
                                  "null"
                                ],
                                "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                              },
                              "IncTax": {
                                "type": [
                                  "number",
                                  "null"
                                ],
                                "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                              },
                              "Tax": {
                                "type": [
                                  "number",
                                  "null"
                                ],
                                "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                              },
                              "Localisation": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                              },
                              "Currency": {
                                "description": "The canonical Currency of the price",
                                "type": "object",
                                "anyOf": [
                                  {
                                    "required": [
                                      "ISO2"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "ISO3"
                                    ]
                                  }
                                ],
                                "unevaluatedProperties": false,
                                "properties": {
                                  "ISO2": {
                                    "type": "string",
                                    "description": "The canonical ISO2 currency code"
                                  },
                                  "ISO3": {
                                    "type": "string",
                                    "description": "The canonical ISO3 currency code"
                                  },
                                  "Number": {
                                    "type": "string",
                                    "description": "The canonical currency number"
                                  },
                                  "DecimalPlaces": {
                                    "type": "string",
                                    "description": "The canonical number of decimal places for the currency"
                                  },
                                  "CountryCodes": {
                                    "type": "array",
                                    "description": "The canonical array of ISO3 country codes officially using this currency",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "Symbol": {
                                    "type": "string",
                                    "description": "The canonical symbol for the currency"
                                  },
                                  "Lineage": {
                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "EntityId": {
                                        "type": "string",
                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                      },
                                      "EventId": {
                                        "type": "string",
                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                      },
                                      "AsOf": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                      },
                                      "SourceSystem": {
                                        "type": "string",
                                        "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                      }
                                    },
                                    "required": [
                                      "EntityId,EventId,AsOf"
                                    ]
                                  }
                                }
                              },
                              "Lineage": {
                                "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                "type": "object",
                                "unevaluatedProperties": false,
                                "properties": {
                                  "EntityId": {
                                    "type": "string",
                                    "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                  },
                                  "EventId": {
                                    "type": "string",
                                    "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                  },
                                  "AsOf": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                  },
                                  "SourceSystem": {
                                    "type": "string",
                                    "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                  }
                                },
                                "required": [
                                  "EntityId,EventId,AsOf"
                                ]
                              }
                            }
                          },
                          "LCY": {
                            "type": "object",
                            "properties": {
                              "ExTax": {
                                "type": [
                                  "number",
                                  "null"
                                ],
                                "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                              },
                              "IncTax": {
                                "type": [
                                  "number",
                                  "null"
                                ],
                                "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                              },
                              "Tax": {
                                "type": [
                                  "number",
                                  "null"
                                ],
                                "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                              },
                              "Localisation": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                              },
                              "Currency": {
                                "description": "The canonical Currency of the price",
                                "type": "object",
                                "anyOf": [
                                  {
                                    "required": [
                                      "ISO2"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "ISO3"
                                    ]
                                  }
                                ],
                                "unevaluatedProperties": false,
                                "properties": {
                                  "ISO2": {
                                    "type": "string",
                                    "description": "The canonical ISO2 currency code"
                                  },
                                  "ISO3": {
                                    "type": "string",
                                    "description": "The canonical ISO3 currency code"
                                  },
                                  "Number": {
                                    "type": "string",
                                    "description": "The canonical currency number"
                                  },
                                  "DecimalPlaces": {
                                    "type": "string",
                                    "description": "The canonical number of decimal places for the currency"
                                  },
                                  "CountryCodes": {
                                    "type": "array",
                                    "description": "The canonical array of ISO3 country codes officially using this currency",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "Symbol": {
                                    "type": "string",
                                    "description": "The canonical symbol for the currency"
                                  },
                                  "Lineage": {
                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "EntityId": {
                                        "type": "string",
                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                      },
                                      "EventId": {
                                        "type": "string",
                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                      },
                                      "AsOf": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                      },
                                      "SourceSystem": {
                                        "type": "string",
                                        "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                      }
                                    },
                                    "required": [
                                      "EntityId,EventId,AsOf"
                                    ]
                                  }
                                }
                              },
                              "Lineage": {
                                "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                "type": "object",
                                "unevaluatedProperties": false,
                                "properties": {
                                  "EntityId": {
                                    "type": "string",
                                    "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                  },
                                  "EventId": {
                                    "type": "string",
                                    "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                  },
                                  "AsOf": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                  },
                                  "SourceSystem": {
                                    "type": "string",
                                    "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                  }
                                },
                                "required": [
                                  "EntityId,EventId,AsOf"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "SellingPrices": {
                      "type": "object",
                      "description": "A common component definng a 'Price', used for financial measures such as Unit Prices, Totals etc",
                      "additionalProperties": {
                        "type": "object",
                        "unevaluatedProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "BCY"
                            ]
                          },
                          {
                            "required": [
                              "LCY"
                            ]
                          }
                        ],
                        "properties": {
                          "BCY": {
                            "type": "object",
                            "properties": {
                              "ExTax": {
                                "type": [
                                  "number",
                                  "null"
                                ],
                                "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                              },
                              "IncTax": {
                                "type": [
                                  "number",
                                  "null"
                                ],
                                "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                              },
                              "Tax": {
                                "type": [
                                  "number",
                                  "null"
                                ],
                                "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                              },
                              "Localisation": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                              },
                              "Currency": {
                                "description": "The canonical Currency of the price",
                                "type": "object",
                                "anyOf": [
                                  {
                                    "required": [
                                      "ISO2"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "ISO3"
                                    ]
                                  }
                                ],
                                "unevaluatedProperties": false,
                                "properties": {
                                  "ISO2": {
                                    "type": "string",
                                    "description": "The canonical ISO2 currency code"
                                  },
                                  "ISO3": {
                                    "type": "string",
                                    "description": "The canonical ISO3 currency code"
                                  },
                                  "Number": {
                                    "type": "string",
                                    "description": "The canonical currency number"
                                  },
                                  "DecimalPlaces": {
                                    "type": "string",
                                    "description": "The canonical number of decimal places for the currency"
                                  },
                                  "CountryCodes": {
                                    "type": "array",
                                    "description": "The canonical array of ISO3 country codes officially using this currency",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "Symbol": {
                                    "type": "string",
                                    "description": "The canonical symbol for the currency"
                                  },
                                  "Lineage": {
                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "EntityId": {
                                        "type": "string",
                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                      },
                                      "EventId": {
                                        "type": "string",
                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                      },
                                      "AsOf": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                      },
                                      "SourceSystem": {
                                        "type": "string",
                                        "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                      }
                                    },
                                    "required": [
                                      "EntityId,EventId,AsOf"
                                    ]
                                  }
                                }
                              },
                              "Lineage": {
                                "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                "type": "object",
                                "unevaluatedProperties": false,
                                "properties": {
                                  "EntityId": {
                                    "type": "string",
                                    "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                  },
                                  "EventId": {
                                    "type": "string",
                                    "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                  },
                                  "AsOf": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                  },
                                  "SourceSystem": {
                                    "type": "string",
                                    "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                  }
                                },
                                "required": [
                                  "EntityId,EventId,AsOf"
                                ]
                              }
                            }
                          },
                          "LCY": {
                            "type": "object",
                            "properties": {
                              "ExTax": {
                                "type": [
                                  "number",
                                  "null"
                                ],
                                "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                              },
                              "IncTax": {
                                "type": [
                                  "number",
                                  "null"
                                ],
                                "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                              },
                              "Tax": {
                                "type": [
                                  "number",
                                  "null"
                                ],
                                "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                              },
                              "Localisation": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                              },
                              "Currency": {
                                "description": "The canonical Currency of the price",
                                "type": "object",
                                "anyOf": [
                                  {
                                    "required": [
                                      "ISO2"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "ISO3"
                                    ]
                                  }
                                ],
                                "unevaluatedProperties": false,
                                "properties": {
                                  "ISO2": {
                                    "type": "string",
                                    "description": "The canonical ISO2 currency code"
                                  },
                                  "ISO3": {
                                    "type": "string",
                                    "description": "The canonical ISO3 currency code"
                                  },
                                  "Number": {
                                    "type": "string",
                                    "description": "The canonical currency number"
                                  },
                                  "DecimalPlaces": {
                                    "type": "string",
                                    "description": "The canonical number of decimal places for the currency"
                                  },
                                  "CountryCodes": {
                                    "type": "array",
                                    "description": "The canonical array of ISO3 country codes officially using this currency",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "Symbol": {
                                    "type": "string",
                                    "description": "The canonical symbol for the currency"
                                  },
                                  "Lineage": {
                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "EntityId": {
                                        "type": "string",
                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                      },
                                      "EventId": {
                                        "type": "string",
                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                      },
                                      "AsOf": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                      },
                                      "SourceSystem": {
                                        "type": "string",
                                        "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                      }
                                    },
                                    "required": [
                                      "EntityId,EventId,AsOf"
                                    ]
                                  }
                                }
                              },
                              "Lineage": {
                                "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                "type": "object",
                                "unevaluatedProperties": false,
                                "properties": {
                                  "EntityId": {
                                    "type": "string",
                                    "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                  },
                                  "EventId": {
                                    "type": "string",
                                    "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                  },
                                  "AsOf": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                  },
                                  "SourceSystem": {
                                    "type": "string",
                                    "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                  }
                                },
                                "required": [
                                  "EntityId,EventId,AsOf"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "Taxes": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "unevaluatedProperties": false,
                        "properties": {
                          "TaxCode": {
                            "type": "string",
                            "description": "The unique code of the tax e.g VAT20"
                          },
                          "TaxSchemeCode": {
                            "type": "string",
                            "description": "The scheme of the tax e.g VAT"
                          },
                          "TaxTypeCode": {
                            "type": "string",
                            "description": "The type of the tax e.g Sales"
                          },
                          "TaxGroupId": {
                            "type": "string",
                            "description": "The group id this tax code is part of"
                          },
                          "TaxGroupCode": {
                            "type": "string",
                            "description": "The group code this tax code is part of"
                          },
                          "IsTaxExempt": {
                            "type": "string",
                            "description": "Is this tax line a tex exempt one? e.g Y",
                            "enum": [
                              "Y",
                              "N",
                              "U"
                            ]
                          },
                          "TaxRate": {
                            "type": "number",
                            "description": "The tax rate as a percentage e.g 20.00"
                          },
                          "GLCode": {
                            "type": "string",
                            "description": "A GL code associated with this Tax"
                          },
                          "Lineage": {
                            "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                            "type": "object",
                            "unevaluatedProperties": false,
                            "properties": {
                              "EntityId": {
                                "type": "string",
                                "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                              },
                              "EventId": {
                                "type": "string",
                                "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                              },
                              "AsOf": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                              },
                              "SourceSystem": {
                                "type": "string",
                                "description": "The source system of the most recent impacting change that the above event (details) are related to"
                              }
                            },
                            "required": [
                              "EntityId,EventId,AsOf"
                            ]
                          }
                        }
                      }
                    },
                    "PriceClassification": {
                      "type": "object",
                      "unevaluatedProperties": false,
                      "properties": {
                        "PriceLevel": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "PriceLevelCode": {
                              "type": "string"
                            },
                            "PriceLevelType": {
                              "type": "string"
                            },
                            "PriceLevelDesc": {
                              "type": "string"
                            }
                          }
                        },
                        "IsHighValue": {
                          "type": "string",
                          "enum": [
                            "Y",
                            "N",
                            "U"
                          ]
                        },
                        "IsMarkdown": {
                          "type": "string",
                          "enum": [
                            "Y",
                            "N",
                            "U"
                          ]
                        }
                      }
                    }
                  }
                },
                "PhysicalAttributes": {
                  "type": "object",
                  "properties": {
                    "Colour": {
                      "type": "object",
                      "unevaluatedProperties": false,
                      "properties": {
                        "ColourCode": {
                          "type": "string"
                        },
                        "ColourDescription": {
                          "type": "string"
                        },
                        "ColourGroup": {
                          "type": "string"
                        }
                      }
                    },
                    "Measurements": {
                      "type": "object",
                      "unevaluatedProperties": false,
                      "properties": {
                        "Weight": {
                          "type": "object",
                          "required": [
                            "Amount"
                          ],
                          "unevaluatedProperties": false,
                          "properties": {
                            "Code": {
                              "type": "string",
                              "description": "The code of the quantity e.g QtySold, QtyReturned"
                            },
                            "Desc": {
                              "type": "string",
                              "description": "The description of the quantity"
                            },
                            "Amount": {
                              "type": [
                                "number",
                                "null"
                              ],
                              "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                            },
                            "UnitMeasure": {
                              "type": "string",
                              "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                            },
                            "UnitType": {
                              "type": "string",
                              "description": "The quantity unit type. e.g Metric, Imperial"
                            },
                            "UnitScheme": {
                              "type": "string",
                              "description": "The quantity unit scheme e.g ISO xx"
                            },
                            "Lineage": {
                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "EntityId": {
                                  "type": "string",
                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                },
                                "EventId": {
                                  "type": "string",
                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                },
                                "AsOf": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                },
                                "SourceSystem": {
                                  "type": "string",
                                  "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                }
                              },
                              "required": [
                                "EntityId,EventId,AsOf"
                              ]
                            }
                          }
                        },
                        "Volume": {
                          "type": "object",
                          "required": [
                            "Amount"
                          ],
                          "unevaluatedProperties": false,
                          "properties": {
                            "Code": {
                              "type": "string",
                              "description": "The code of the quantity e.g QtySold, QtyReturned"
                            },
                            "Desc": {
                              "type": "string",
                              "description": "The description of the quantity"
                            },
                            "Amount": {
                              "type": [
                                "number",
                                "null"
                              ],
                              "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                            },
                            "UnitMeasure": {
                              "type": "string",
                              "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                            },
                            "UnitType": {
                              "type": "string",
                              "description": "The quantity unit type. e.g Metric, Imperial"
                            },
                            "UnitScheme": {
                              "type": "string",
                              "description": "The quantity unit scheme e.g ISO xx"
                            },
                            "Lineage": {
                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "EntityId": {
                                  "type": "string",
                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                },
                                "EventId": {
                                  "type": "string",
                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                },
                                "AsOf": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                },
                                "SourceSystem": {
                                  "type": "string",
                                  "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                }
                              },
                              "required": [
                                "EntityId,EventId,AsOf"
                              ]
                            }
                          }
                        },
                        "Dimensions": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "Height": {
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "Width": {
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "Depth": {
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "Length": {
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "StandardSize": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "SizeCode": {
                              "type": "string"
                            },
                            "SizeDescription": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "Garment": {
                      "type": "object",
                      "unevaluatedProperties": false,
                      "properties": {
                        "Bottoms": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "Waistband": {
                              "type": "object",
                              "properties": {
                                "WaistbandCode": {
                                  "type": "string"
                                },
                                "WaistbandType": {
                                  "type": "string"
                                },
                                "WaistbandDesc": {
                                  "type": "string"
                                },
                                "WaistbandPosition": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "Fabric": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "FabricCode": {
                              "type": "string"
                            },
                            "FabricType": {
                              "type": "string"
                            },
                            "FasbricDesc": {
                              "type": "string"
                            },
                            "Pattern": {
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "PatternCode": {
                                  "type": "string"
                                },
                                "PatternType": {
                                  "type": "string"
                                },
                                "PatternDesc": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "Feature": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "Fastening": {
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "FasteningCode": {
                                  "type": "string"
                                },
                                "FasteningType": {
                                  "type": "string"
                                },
                                "FasteningDesc": {
                                  "type": "string"
                                }
                              }
                            },
                            "Padding": {
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "PaddingCode": {
                                  "type": "string"
                                },
                                "PaddingType": {
                                  "type": "string"
                                },
                                "PaddingDesc": {
                                  "type": "string"
                                }
                              }
                            },
                            "WaterResistance": {
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "WaterResistanceCode": {
                                  "type": "string"
                                },
                                "WaterResistanceType": {
                                  "type": "string"
                                },
                                "WaterResistanceDesc": {
                                  "type": "string"
                                }
                              }
                            },
                            "Wiring": {
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "WiringCode": {
                                  "type": "string"
                                },
                                "WiringType": {
                                  "type": "string"
                                },
                                "WiringDesc": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "Footwear": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "Composition": {
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "Lining": {
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "LiningCompositionCode": {
                                      "type": "string"
                                    },
                                    "LiningCompositionType": {
                                      "type": "string"
                                    },
                                    "LiningCompositionDesc": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "Main": {
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "MainCompositionCode": {
                                      "type": "string"
                                    },
                                    "MainCompositionType": {
                                      "type": "string"
                                    },
                                    "MainCompositionDesc": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "Sole": {
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "SoleCompositionCode": {
                                      "type": "string"
                                    },
                                    "SoleCompositionType": {
                                      "type": "string"
                                    },
                                    "SoleCompositionDesc": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "Heel": {
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "HeelCode": {
                                  "type": "string"
                                },
                                "HeelType": {
                                  "type": "string"
                                },
                                "HeelDesc": {
                                  "type": "string"
                                },
                                "Height": {
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "HeelHeightCode": {
                                      "type": "string"
                                    },
                                    "HeelHeightType": {
                                      "type": "string"
                                    },
                                    "HeelHeightDesc": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "Toe": {
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "ToeCode": {
                                  "type": "string"
                                },
                                "ToeType": {
                                  "type": "string"
                                },
                                "ToeDesc": {
                                  "type": "string"
                                },
                                "Style": {
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "ToeStyleCode": {
                                      "type": "string"
                                    },
                                    "ToeStyleType": {
                                      "type": "string"
                                    },
                                    "ToeStyleDesc": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "Style": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "StyleCode": {
                              "type": "string"
                            },
                            "StyleType": {
                              "type": "string"
                            },
                            "StyleDesc": {
                              "type": "string"
                            },
                            "Fit": {
                              "type": "object",
                              "properties": {
                                "FitCode": {
                                  "type": "string"
                                },
                                "FitType": {
                                  "type": "string"
                                },
                                "FitDesc": {
                                  "type": "string"
                                }
                              }
                            },
                            "Length": {
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "LengthCode": {
                                  "type": "string"
                                },
                                "LengthType": {
                                  "type": "string"
                                },
                                "LengthDesc": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "Tops": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "Neckline": {
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "NecklineCode": {
                                  "type": "string"
                                },
                                "NecklineType": {
                                  "type": "string"
                                },
                                "NecklineDesc": {
                                  "type": "string"
                                }
                              }
                            },
                            "Sleeve": {
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "Length": {
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "SleeveLengthCode": {
                                      "type": "string"
                                    },
                                    "SleeveLengthType": {
                                      "type": "string"
                                    },
                                    "SleeveLengthDesc": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "InventoryLogistics": {
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Supplier": {
                      "type": "object",
                      "oneOf": [
                        {
                          "required": [
                            "ProfileName"
                          ]
                        },
                        {
                          "required": [
                            "PrimaryAddress"
                          ]
                        },
                        {
                          "required": [
                            "PrimaryEmail"
                          ]
                        },
                        {
                          "required": [
                            "PrimaryPhone"
                          ]
                        }
                      ],
                      "unevaluatedProperties": false,
                      "properties": {
                        "ProfileId": {
                          "type": "string",
                          "description": "The canonical (synthetic) Xfuze contact profile id if identifiable e.g ContactProfile_D365_987654"
                        },
                        "ProfileKey": {
                          "type": "string",
                          "description": "The native contact profile number of the contact profile master if identifiable e.g 987654"
                        },
                        "ProfileCode": {
                          "type": "string",
                          "description": "The native contact profile code of the contact profile master if identifiable e.g 987654"
                        },
                        "ProfileType": {
                          "type": "string",
                          "description": "The type of the contact profile"
                        },
                        "ProfilePurpose": {
                          "type": "string",
                          "description": "The purpose of the usage of the contact profile",
                          "enum": [
                            "Billing",
                            "Invoice",
                            "Delivery",
                            "Contact",
                            "Customer",
                            "Shipping",
                            "ReturnExchange",
                            "Store",
                            "Warehouse",
                            "Marketing",
                            "LegitimateInterest",
                            "Supplier",
                            "Franchisee",
                            "Employee",
                            "PhysicalEvent",
                            "DropOff",
                            "Collection",
                            "LogisticsPoint",
                            "Other"
                          ]
                        },
                        "ProfileDesc": {
                          "type": "string",
                          "description": "The description of the contact profile"
                        },
                        "ProfileName": {
                          "description": "The person name on the contact profile",
                          "type": "object",
                          "required": [
                            "FullName",
                            "NameType"
                          ],
                          "unevaluatedProperties": false,
                          "properties": {
                            "NameId": {
                              "type": "string",
                              "description": "The canonical (synthetic) Xfuze name id for the name if identifiable and has some unique key e.g Name_D365_55555"
                            },
                            "NameKey": {
                              "type": "string",
                              "description": "The native name key / number of the name master, if identifiable and thus has some unique key e.g 55555"
                            },
                            "NameType": {
                              "type": "string",
                              "description": "The type of the name",
                              "enum": [
                                "Person",
                                "Organisation",
                                "Group"
                              ]
                            },
                            "Honorific": {
                              "type": "string",
                              "description": "The canonical Honorific of the name",
                              "enum": [
                                "Mr",
                                "Mrs",
                                "Miss",
                                "Ms",
                                "Dr",
                                "Professor",
                                "The Rt Revd Dr",
                                "The Most Revd",
                                "The Rt Revd",
                                "The Revd Canon",
                                "The Revd",
                                "The Rt Revd Professor",
                                "The Ven",
                                "The Most Revd Dr",
                                "Rabbi",
                                "Canon",
                                "Dame",
                                "Chief",
                                "Sister",
                                "Father",
                                "Reverend",
                                "Major",
                                "Other",
                                "Cllr",
                                "Sir",
                                "Rt Hon Lord",
                                "Rt Hon",
                                "The Lord ",
                                "Viscount",
                                "Viscountess",
                                "Baroness",
                                "Captain",
                                "Master",
                                "Very Revd",
                                "Lady",
                                "MP",
                                "Mx (gender-netural)",
                                "His Holiness",
                                "Her Holiness"
                              ]
                            },
                            "FirstName": {
                              "type": "string",
                              "description": "The first name"
                            },
                            "LastName": {
                              "type": "string",
                              "description": "The last name"
                            },
                            "MiddleNames": {
                              "type": "string",
                              "description": "The middle names"
                            },
                            "MaidenName": {
                              "type": "string",
                              "description": "The maiden name"
                            },
                            "FullName": {
                              "type": "string",
                              "description": "The full name"
                            },
                            "NickName": {
                              "type": "string",
                              "description": "The nick name"
                            },
                            "PreferredName": {
                              "type": "string",
                              "description": "The preferred name the person wishes to be called"
                            },
                            "Initials": {
                              "type": "string",
                              "description": "The initials of the name"
                            },
                            "Suffix": {
                              "type": "string",
                              "description": "The suffix of the name"
                            },
                            "IsEncrypted": {
                              "type": "string",
                              "description": "Is this name encrypted? e.g Y",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "Lineage": {
                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "EntityId": {
                                  "type": "string",
                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                },
                                "EventId": {
                                  "type": "string",
                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                },
                                "AsOf": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                },
                                "SourceSystem": {
                                  "type": "string",
                                  "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                }
                              },
                              "required": [
                                "EntityId,EventId,AsOf"
                              ]
                            }
                          }
                        },
                        "PrimaryAddress": {
                          "description": "The address of the contact profile",
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "AddressId": {
                              "type": "string",
                              "description": "The canonical (synthetic) Xfuze address id if identifiable and has some unique key e.g Address_D365_987654"
                            },
                            "AddressKey": {
                              "type": "string",
                              "description": "The native address number of the address master if identifiable and has some unique key e.g 987654"
                            },
                            "AddressType": {
                              "type": "string",
                              "description": "The type of the address",
                              "enum": [
                                "Residential",
                                "Business",
                                "Billing",
                                "Shipping",
                                "Mailing",
                                "Postal",
                                "POBox",
                                "Physical",
                                "Service",
                                "Forwarding",
                                "Temporary",
                                "Work",
                                "Home",
                                "Other"
                              ]
                            },
                            "AddressPurpose": {
                              "type": "string",
                              "description": "The purpose of the usage of the address",
                              "enum": [
                                "Billing",
                                "Invoice",
                                "Delivery",
                                "Contact",
                                "Customer",
                                "Shipping",
                                "ReturnExchange",
                                "Store",
                                "Warehouse",
                                "Marketing",
                                "LegitimateInterest",
                                "Supplier",
                                "Franchisee",
                                "Employee",
                                "PhysicalEvent",
                                "DropOff",
                                "Collection",
                                "LogisticsPoint",
                                "Other"
                              ]
                            },
                            "FormattedAddress": {
                              "type": "string",
                              "description": "The fully formatted address with all address parts as a single string"
                            },
                            "AddressName": {
                              "type": "string",
                              "description": "The name of the address"
                            },
                            "AddressDesc": {
                              "type": "string",
                              "description": "The description of the address"
                            },
                            "Flat": {
                              "type": "string",
                              "description": "The flat number of the address"
                            },
                            "HouseNameNumber": {
                              "type": "string",
                              "description": "The house / name number of the address"
                            },
                            "AddressLines": {
                              "description": "The address line 1..5 of the address",
                              "type": "object",
                              "required": [
                                "Line1"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Line1": {
                                  "type": "string",
                                  "description": "The address line 1 of the address"
                                },
                                "Line2": {
                                  "type": "string",
                                  "description": "The address line 2 of the address"
                                },
                                "Line3": {
                                  "type": "string",
                                  "description": "The address line 3 of the address"
                                },
                                "Line4": {
                                  "type": "string",
                                  "description": "The address line 4 of the address"
                                },
                                "Line5": {
                                  "type": "string",
                                  "description": "The address line 5 of the address"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "TownCity": {
                              "description": "The town / city of the address",
                              "type": "object",
                              "oneOf": [
                                {
                                  "required": [
                                    "name"
                                  ]
                                },
                                {
                                  "required": [
                                    "country"
                                  ]
                                }
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Name": {
                                  "type": "string",
                                  "description": "The name of the city or town."
                                },
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the city or town."
                                },
                                "Country": {
                                  "description": "The country where the city or town is located.",
                                  "type": "object",
                                  "anyOf": [
                                    {
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                        }
                                      },
                                      "required": [
                                        "ISO2"
                                      ]
                                    },
                                    {
                                      "properties": {
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                        }
                                      },
                                      "required": [
                                        "ISO3"
                                      ]
                                    }
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "CountryCode": {
                                      "type": "string",
                                      "description": "The canonical CountryCode (country-code) country code e.g 036"
                                    },
                                    "Name": {
                                      "type": "string",
                                      "description": "The canonical (official) 'Name' of the country e.g Australia"
                                    },
                                    "AltName": {
                                      "type": "string",
                                      "description": "An alternate name for the country"
                                    },
                                    "RegionCode": {
                                      "type": "string",
                                      "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                    },
                                    "RegionName": {
                                      "type": "string",
                                      "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                    },
                                    "SubRegionCode": {
                                      "type": "string",
                                      "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                    },
                                    "SubRegionName": {
                                      "type": "string",
                                      "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                    },
                                    "IntermediateRegionCode": {
                                      "type": "string",
                                      "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                    },
                                    "IntermediateRegionName": {
                                      "type": "string",
                                      "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                    },
                                    "Coordinates": {
                                      "description": "The canonical Coordinates of the country (canonical from google)",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Latitude": {
                                          "type": "number",
                                          "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                          "minimum": -90,
                                          "maximum": 90
                                        },
                                        "Longitude": {
                                          "type": "number",
                                          "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                          "minimum": -180,
                                          "maximum": 180
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            },
                                            "SourceSystem": {
                                              "type": "string",
                                              "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                            }
                                          },
                                          "required": [
                                            "EntityId,EventId,AsOf"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "Latitude",
                                        "Longitude"
                                      ]
                                    },
                                    "PrimaryLanguage": {
                                      "type": "string",
                                      "description": "The canonical Primary Language of the country"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency Code of the country (canonical from google)",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            },
                                            "SourceSystem": {
                                              "type": "string",
                                              "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                            }
                                          },
                                          "required": [
                                            "EntityId,EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "IsEuropeanCountry": {
                                      "type": "string",
                                      "description": "Is this country an european one? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        },
                                        "SourceSystem": {
                                          "type": "string",
                                          "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                        }
                                      },
                                      "required": [
                                        "EntityId,EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "Population": {
                                  "type": "number",
                                  "minimum": 0,
                                  "description": "The population of the city or town."
                                },
                                "Coordinates": {
                                  "description": "The geographical coordinates of the city or town.",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "Latitude": {
                                      "type": "number",
                                      "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                      "minimum": -90,
                                      "maximum": 90
                                    },
                                    "Longitude": {
                                      "type": "number",
                                      "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                      "minimum": -180,
                                      "maximum": 180
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        },
                                        "SourceSystem": {
                                          "type": "string",
                                          "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                        }
                                      },
                                      "required": [
                                        "EntityId,EventId,AsOf"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "Latitude",
                                    "Longitude"
                                  ]
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              },
                              "required": [
                                "name"
                              ]
                            },
                            "Postcode": {
                              "description": "The Postcode of the address",
                              "type": "object",
                              "required": [
                                "PostcodeCode"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Postcode": {
                                  "type": "string",
                                  "description": "The full postcode of the address e.g SW1A 1AA"
                                },
                                "PostcodeScheme": {
                                  "type": "string",
                                  "description": "The scheme of the postcode e.g UK, US, AUS"
                                },
                                "PostcodeArea": {
                                  "type": "string",
                                  "description": "The area part of the postcode of the address e.g SW"
                                },
                                "PostcodeDistrict": {
                                  "type": "string",
                                  "description": "The district part of the postcode of the address e.g 1A"
                                },
                                "PostcodeSector": {
                                  "type": "string",
                                  "description": "The sector part of the postcode of the address e.g 1"
                                },
                                "PostcodeUnit": {
                                  "type": "string",
                                  "description": "The sector part of the postcode of the address e.g AA"
                                },
                                "IsVerified": {
                                  "type": "string",
                                  "description": "Has the postcode been verified? e.g Y",
                                  "enum": [
                                    "Y",
                                    "N",
                                    "U"
                                  ]
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "Country": {
                              "description": "The country of the address",
                              "type": "object",
                              "anyOf": [
                                {
                                  "properties": {
                                    "ISO2": {
                                      "type": "string",
                                      "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                    }
                                  },
                                  "required": [
                                    "ISO2"
                                  ]
                                },
                                {
                                  "properties": {
                                    "ISO3": {
                                      "type": "string",
                                      "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                    }
                                  },
                                  "required": [
                                    "ISO3"
                                  ]
                                }
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "CountryCode": {
                                  "type": "string",
                                  "description": "The canonical CountryCode (country-code) country code e.g 036"
                                },
                                "Name": {
                                  "type": "string",
                                  "description": "The canonical (official) 'Name' of the country e.g Australia"
                                },
                                "AltName": {
                                  "type": "string",
                                  "description": "An alternate name for the country"
                                },
                                "RegionCode": {
                                  "type": "string",
                                  "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                },
                                "RegionName": {
                                  "type": "string",
                                  "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                },
                                "SubRegionCode": {
                                  "type": "string",
                                  "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                },
                                "SubRegionName": {
                                  "type": "string",
                                  "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                },
                                "IntermediateRegionCode": {
                                  "type": "string",
                                  "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                },
                                "IntermediateRegionName": {
                                  "type": "string",
                                  "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                },
                                "Coordinates": {
                                  "description": "The canonical Coordinates of the country (canonical from google)",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "Latitude": {
                                      "type": "number",
                                      "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                      "minimum": -90,
                                      "maximum": 90
                                    },
                                    "Longitude": {
                                      "type": "number",
                                      "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                      "minimum": -180,
                                      "maximum": 180
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        },
                                        "SourceSystem": {
                                          "type": "string",
                                          "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                        }
                                      },
                                      "required": [
                                        "EntityId,EventId,AsOf"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "Latitude",
                                    "Longitude"
                                  ]
                                },
                                "PrimaryLanguage": {
                                  "type": "string",
                                  "description": "The canonical Primary Language of the country"
                                },
                                "Currency": {
                                  "description": "The canonical Currency Code of the country (canonical from google)",
                                  "type": "object",
                                  "anyOf": [
                                    {
                                      "required": [
                                        "ISO2"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "ISO3"
                                      ]
                                    }
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "ISO2": {
                                      "type": "string",
                                      "description": "The canonical ISO2 currency code"
                                    },
                                    "ISO3": {
                                      "type": "string",
                                      "description": "The canonical ISO3 currency code"
                                    },
                                    "Number": {
                                      "type": "string",
                                      "description": "The canonical currency number"
                                    },
                                    "DecimalPlaces": {
                                      "type": "string",
                                      "description": "The canonical number of decimal places for the currency"
                                    },
                                    "CountryCodes": {
                                      "type": "array",
                                      "description": "The canonical array of ISO3 country codes officially using this currency",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "Symbol": {
                                      "type": "string",
                                      "description": "The canonical symbol for the currency"
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        },
                                        "SourceSystem": {
                                          "type": "string",
                                          "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                        }
                                      },
                                      "required": [
                                        "EntityId,EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "IsEuropeanCountry": {
                                  "type": "string",
                                  "description": "Is this country an european one? e.g Y",
                                  "enum": [
                                    "Y",
                                    "N",
                                    "U"
                                  ]
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "Coordinates": {
                              "description": "The geographical coordinates of the city or town.",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "Latitude": {
                                  "type": "number",
                                  "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                  "minimum": -90,
                                  "maximum": 90
                                },
                                "Longitude": {
                                  "type": "number",
                                  "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                  "minimum": -180,
                                  "maximum": 180
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              },
                              "required": [
                                "Latitude",
                                "Longitude"
                              ]
                            },
                            "IsPrimary": {
                              "type": "string",
                              "description": "Ia this address a primary one? e.g Y",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "IsVerified": {
                              "type": "string",
                              "description": "Is this address verified by an official address lookup / validator? e.g Y",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "IsEncrypted": {
                              "type": "string",
                              "description": "Is this address encrypted? e.g Y",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "Lineage": {
                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "EntityId": {
                                  "type": "string",
                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                },
                                "EventId": {
                                  "type": "string",
                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                },
                                "AsOf": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                },
                                "SourceSystem": {
                                  "type": "string",
                                  "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                }
                              },
                              "required": [
                                "EntityId,EventId,AsOf"
                              ]
                            }
                          }
                        },
                        "PrimaryEmail": {
                          "description": "The email of the contact profile",
                          "type": "object",
                          "required": [
                            "EmailAddress"
                          ],
                          "unevaluatedProperties": false,
                          "properties": {
                            "EmailId": {
                              "type": "string",
                              "description": "The canonical (synthetic) Xfuze email id for the email if identifiable and has some unique key e.g Email_D365_987654"
                            },
                            "EmailKey": {
                              "type": "string",
                              "description": "The native email number of the email master if identifiable and has some unique key e.g 987654"
                            },
                            "EmailType": {
                              "type": "string",
                              "description": "The type of the email",
                              "enum": [
                                "Residential",
                                "Business",
                                "Billing",
                                "Shipping",
                                "Mailing",
                                "Postal",
                                "POBox",
                                "Physical",
                                "Service",
                                "Forwarding",
                                "Temporary",
                                "Work",
                                "Home",
                                "Other"
                              ]
                            },
                            "EmailPurpose": {
                              "type": "string",
                              "description": "The purpose of the usage of the email",
                              "enum": [
                                "Billing",
                                "Invoice",
                                "Delivery",
                                "Contact",
                                "Customer",
                                "Shipping",
                                "ReturnExchange",
                                "Store",
                                "Warehouse",
                                "Marketing",
                                "LegitimateInterest",
                                "Supplier",
                                "Franchisee",
                                "Employee",
                                "PhysicalEvent",
                                "DropOff",
                                "Collection",
                                "LogisticsPoint",
                                "Other"
                              ]
                            },
                            "EmailAddress": {
                              "type": "string",
                              "description": "The actual email email",
                              "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
                            },
                            "IsPrimary": {
                              "type": "string",
                              "description": "Is this email a primary one? e.g Y",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "IsVerified": {
                              "type": "string",
                              "description": "Is this email verified by an official email lookup / validator? e.g Y",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "IsEncrypted": {
                              "type": "string",
                              "description": "Is this email encrypted? e.g Y",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "Lineage": {
                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "EntityId": {
                                  "type": "string",
                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                },
                                "EventId": {
                                  "type": "string",
                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                },
                                "AsOf": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                },
                                "SourceSystem": {
                                  "type": "string",
                                  "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                }
                              },
                              "required": [
                                "EntityId,EventId,AsOf"
                              ]
                            }
                          }
                        },
                        "PrimaryPhone": {
                          "description": "The phone of the contact profile",
                          "type": "object",
                          "oneOf": [
                            {
                              "required": [
                                "PhoneLocal"
                              ]
                            },
                            {
                              "required": [
                                "PhoneInternational"
                              ]
                            }
                          ],
                          "unevaluatedProperties": false,
                          "properties": {
                            "PhoneId": {
                              "type": "string",
                              "description": "The canonical (synthetic) Xfuze phone id for the phone if identifiable and has some unique key e.g Phone_D365_123456"
                            },
                            "PhoneNumber": {
                              "type": "string",
                              "description": "The native phone number (key not user number) of the phone if identifiable and has some unique key e.g 123456"
                            },
                            "PhoneType": {
                              "type": "string",
                              "description": "The type of the address",
                              "enum": [
                                "Landline",
                                "Mobile",
                                "Fax",
                                "Other"
                              ]
                            },
                            "PhonePurpose": {
                              "type": "string",
                              "description": "The purpose of the usage of the address",
                              "enum": [
                                "Billing",
                                "Invoice",
                                "Delivery",
                                "Contact",
                                "Customer",
                                "Shipping",
                                "ReturnExchange",
                                "Store",
                                "Warehouse",
                                "Marketing",
                                "LegitimateInterest",
                                "Supplier",
                                "Franchisee",
                                "Employee",
                                "PhysicalEvent",
                                "DropOff",
                                "Collection",
                                "LogisticsPoint",
                                "Other"
                              ]
                            },
                            "PhoneLocal": {
                              "type": "string",
                              "description": "The actual phone number, in local format (i.e without international prefix)"
                            },
                            "PhoneInternational": {
                              "type": "string",
                              "description": "The actual phone number, in international format (i.e with international prefix)"
                            },
                            "CountryPrefix": {
                              "type": "string",
                              "description": "The CountryPrefix e.g +44"
                            },
                            "IsMobile": {
                              "type": "string",
                              "description": "Is this phone a mobile one? e.g Y",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "IsPrimary": {
                              "type": "string",
                              "description": "Is this phone a primary one? e.g Y",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "IsVerified": {
                              "type": "string",
                              "description": "Is this phone verified by an official phone lookup / validator? e.g Y",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "IsEncrypted": {
                              "type": "string",
                              "description": "Is this phone encrypted? e.g Y",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "Lineage": {
                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "EntityId": {
                                  "type": "string",
                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                },
                                "EventId": {
                                  "type": "string",
                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                },
                                "AsOf": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                },
                                "SourceSystem": {
                                  "type": "string",
                                  "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                }
                              },
                              "required": [
                                "EntityId,EventId,AsOf"
                              ]
                            }
                          }
                        },
                        "Lineage": {
                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "EntityId": {
                              "type": "string",
                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                            },
                            "EventId": {
                              "type": "string",
                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                            },
                            "AsOf": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                            },
                            "SourceSystem": {
                              "type": "string",
                              "description": "The source system of the most recent impacting change that the above event (details) are related to"
                            }
                          },
                          "required": [
                            "EntityId,EventId,AsOf"
                          ]
                        }
                      }
                    },
                    "Fulfilment": {
                      "type": "object",
                      "unevaluatedProperties": false,
                      "properties": {
                        "FulfilmentChannel": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "ChannelId": {
                              "type": "string",
                              "description": "The canonical (synthetic) Xfuze channel id, if the channel is identifiable, format Channel_[sourceSystem]_[ChannelNumber] e.g Channel_D365_012"
                            },
                            "ChannelKey": {
                              "type": "string",
                              "description": "The native channel number from source, if the channel is identifiable e.g 012"
                            },
                            "ChannelKeyType": {
                              "type": "string",
                              "description": "The type of the channel number e.g Store, DC etc"
                            },
                            "ChannelClass": {
                              "type": "string",
                              "description": "The native channel number from source, if the channel is identifiable e.g Concessions",
                              "enum": [
                                "Digital",
                                "Retail",
                                "Concession",
                                "Franchise",
                                "Marketplace",
                                "Direct",
                                "Wholesale",
                                "Outlet",
                                "Other"
                              ]
                            },
                            "ChannelCode": {
                              "type": "string",
                              "description": "The unique code of the channel where the transaction occurred e.g Web, Retail",
                              "enum": [
                                "RetailStore",
                                "Online",
                                "Mobile",
                                "OutletStore",
                                "Kiosk",
                                "VendingMachine",
                                "Social",
                                "Printed",
                                "Subscription",
                                "Employee",
                                "Speciality",
                                "Other"
                              ]
                            },
                            "ChannelPurpose": {
                              "type": "string",
                              "description": "The purpose of the channel usage e.g Sales, Return, Collection",
                              "enum": [
                                "Sale",
                                "Return",
                                "Exchange",
                                "Collection",
                                "Distribution",
                                "Support",
                                "Other"
                              ]
                            },
                            "ChannelType": {
                              "type": "string",
                              "description": "The class e.g Selling and type e.g B2B, B2C, Partner of the channel",
                              "enum": [
                                "B2C",
                                "B2B",
                                "Partner",
                                "Wholesale",
                                "Franchise",
                                "Other"
                              ]
                            },
                            "ChannelName": {
                              "type": "string",
                              "description": "The name of the channel e.g John Lewis Concession"
                            },
                            "Country": {
                              "description": "The country of the channel",
                              "type": "object",
                              "anyOf": [
                                {
                                  "properties": {
                                    "ISO2": {
                                      "type": "string",
                                      "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                    }
                                  },
                                  "required": [
                                    "ISO2"
                                  ]
                                },
                                {
                                  "properties": {
                                    "ISO3": {
                                      "type": "string",
                                      "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                    }
                                  },
                                  "required": [
                                    "ISO3"
                                  ]
                                }
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "CountryCode": {
                                  "type": "string",
                                  "description": "The canonical CountryCode (country-code) country code e.g 036"
                                },
                                "Name": {
                                  "type": "string",
                                  "description": "The canonical (official) 'Name' of the country e.g Australia"
                                },
                                "AltName": {
                                  "type": "string",
                                  "description": "An alternate name for the country"
                                },
                                "RegionCode": {
                                  "type": "string",
                                  "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                },
                                "RegionName": {
                                  "type": "string",
                                  "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                },
                                "SubRegionCode": {
                                  "type": "string",
                                  "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                },
                                "SubRegionName": {
                                  "type": "string",
                                  "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                },
                                "IntermediateRegionCode": {
                                  "type": "string",
                                  "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                },
                                "IntermediateRegionName": {
                                  "type": "string",
                                  "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                },
                                "Coordinates": {
                                  "description": "The canonical Coordinates of the country (canonical from google)",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "Latitude": {
                                      "type": "number",
                                      "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                      "minimum": -90,
                                      "maximum": 90
                                    },
                                    "Longitude": {
                                      "type": "number",
                                      "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                      "minimum": -180,
                                      "maximum": 180
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        },
                                        "SourceSystem": {
                                          "type": "string",
                                          "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                        }
                                      },
                                      "required": [
                                        "EntityId,EventId,AsOf"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "Latitude",
                                    "Longitude"
                                  ]
                                },
                                "PrimaryLanguage": {
                                  "type": "string",
                                  "description": "The canonical Primary Language of the country"
                                },
                                "Currency": {
                                  "description": "The canonical Currency Code of the country (canonical from google)",
                                  "type": "object",
                                  "anyOf": [
                                    {
                                      "required": [
                                        "ISO2"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "ISO3"
                                      ]
                                    }
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "ISO2": {
                                      "type": "string",
                                      "description": "The canonical ISO2 currency code"
                                    },
                                    "ISO3": {
                                      "type": "string",
                                      "description": "The canonical ISO3 currency code"
                                    },
                                    "Number": {
                                      "type": "string",
                                      "description": "The canonical currency number"
                                    },
                                    "DecimalPlaces": {
                                      "type": "string",
                                      "description": "The canonical number of decimal places for the currency"
                                    },
                                    "CountryCodes": {
                                      "type": "array",
                                      "description": "The canonical array of ISO3 country codes officially using this currency",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "Symbol": {
                                      "type": "string",
                                      "description": "The canonical symbol for the currency"
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        },
                                        "SourceSystem": {
                                          "type": "string",
                                          "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                        }
                                      },
                                      "required": [
                                        "EntityId,EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "IsEuropeanCountry": {
                                  "type": "string",
                                  "description": "Is this country an european one? e.g Y",
                                  "enum": [
                                    "Y",
                                    "N",
                                    "U"
                                  ]
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "TouchPoint": {
                              "description": "The touch-point 'system' details of the channel interaction",
                              "type": "object",
                              "required": [
                                "TouchPointCode"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "TouchPointId": {
                                  "type": "string",
                                  "description": "The canonical (synthetic) Xfuze touch point id, if the touch point is identifiable, format TouchPoint_[sourceSystem]_[TouchPointNumber] e.g TouchPoint_D365_012"
                                },
                                "TouchPointKey": {
                                  "type": "string",
                                  "description": "The native touch point number from source, if the touch point is identifiable e.g 012"
                                },
                                "TouchPointClass": {
                                  "type": "string",
                                  "description": "The class of the touch-point device used for the transaction e.g ConsumerDigital",
                                  "enum": [
                                    "ConsumerDigital",
                                    "RetailerDigital",
                                    "RetailerPhysical",
                                    "Other"
                                  ]
                                },
                                "TouchPointDeviceType": {
                                  "type": "string",
                                  "description": "The class of the touch-point device used for the transaction e.g Tablet",
                                  "enum": [
                                    "Tablet",
                                    "Mobile",
                                    "Kiosk",
                                    "POS",
                                    "mPOS",
                                    "VendingMachine",
                                    "Wearable",
                                    "QRCodeReader",
                                    "TV",
                                    "Scanner",
                                    "PaymentDevice",
                                    "Other"
                                  ]
                                },
                                "TouchPointSystem": {
                                  "type": "string",
                                  "description": "The touch-point system the transaction originated from, if it has a name e.g eBasket, EndlessAisle"
                                },
                                "TerminalId": {
                                  "type": "string",
                                  "description": "The terminal Id if identifiable"
                                },
                                "ExternalTerminalId": {
                                  "type": "string",
                                  "description": "The external terminal id ifidentifiable"
                                },
                                "Device": {
                                  "description": "The devive details of the device used in the context of this touch point",
                                  "type": "object",
                                  "required": [
                                    "DeviceType"
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "DeviceId": {
                                      "type": "string",
                                      "description": "The canonical (synthetic) Xfuze device id, if the touch point is identifiable, format Device_[sourceSystem]_[DeviceNumber] e.g Device_D365_012"
                                    },
                                    "DeviceNumber": {
                                      "type": "string",
                                      "description": "The native device number from source, if identifiable e.g 012"
                                    },
                                    "DeviceClass": {
                                      "type": "string",
                                      "description": "The class of the device e.g ConsumerDigital",
                                      "enum": [
                                        "ConsumerDigital",
                                        "RetailerDigital",
                                        "RetailerPhysical",
                                        "Other"
                                      ]
                                    },
                                    "DeviceType": {
                                      "type": "string",
                                      "description": "The type of the device e.g Tablet",
                                      "enum": [
                                        "Tablet",
                                        "Mobile",
                                        "Kiosk",
                                        "POS",
                                        "mPOS",
                                        "VendingMachine",
                                        "Wearable",
                                        "QRCodeReader",
                                        "TV",
                                        "Scanner",
                                        "PaymentDevice",
                                        "Other"
                                      ]
                                    },
                                    "ExternalDeviceId": {
                                      "type": "string",
                                      "description": "The external device id if the device is identifiable"
                                    },
                                    "OS": {
                                      "type": "string",
                                      "description": "The operating system of the device"
                                    },
                                    "OSVersion": {
                                      "type": "string",
                                      "description": "The operating system version of the device"
                                    },
                                    "Model": {
                                      "type": "string",
                                      "description": "The model of the device"
                                    },
                                    "Brand": {
                                      "type": "string",
                                      "description": "The brand of the device"
                                    },
                                    "UserAgent": {
                                      "type": "string",
                                      "description": "The user agent of the device"
                                    },
                                    "Browser": {
                                      "type": "string",
                                      "description": "The browser of the device"
                                    },
                                    "BrowserType": {
                                      "type": "string",
                                      "description": "The browser type of the device"
                                    },
                                    "BrowserVersion": {
                                      "type": "string",
                                      "description": "The browser version of the device"
                                    },
                                    "BrowserWidth": {
                                      "type": "string",
                                      "description": "The browser screen width of the device"
                                    },
                                    "BrowserHeight": {
                                      "type": "string",
                                      "description": "The browser screen height of the device"
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        },
                                        "SourceSystem": {
                                          "type": "string",
                                          "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                        }
                                      },
                                      "required": [
                                        "EntityId,EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "IPAddress": {
                                  "type": "string",
                                  "description": "The IP address of the touch-point device"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "ReasonCode": {
                              "type": "string",
                              "description": "The reason for this channel"
                            },
                            "ReasonDesc": {
                              "type": "string",
                              "description": "The reason desc for this channel"
                            },
                            "Lineage": {
                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "EntityId": {
                                  "type": "string",
                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                },
                                "EventId": {
                                  "type": "string",
                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                },
                                "AsOf": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                },
                                "SourceSystem": {
                                  "type": "string",
                                  "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                }
                              },
                              "required": [
                                "EntityId,EventId,AsOf"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "TradeClassification": {
                      "type": "object",
                      "unevaluatedProperties": false,
                      "description": "Trade Classifications for Import and Export such as Tariff and HS (Harmonized System) Codes",
                      "properties": {
                        "HS": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "description": "HS (Harmonized System) Codes",
                          "properties": {
                            "HSCode": {
                              "type": "string",
                              "description": "HS Code",
                              "maxLength": 10
                            },
                            "HSDesc": {
                              "type": "string",
                              "description": "HS Description"
                            }
                          }
                        },
                        "Tariff": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "description": "HS (Harmonized System) Codes",
                          "properties": {
                            "TariffCode": {
                              "type": "string",
                              "description": "Tariff Code",
                              "maxLength": 10
                            },
                            "TariffDesc": {
                              "type": "string",
                              "description": "Tariff Description"
                            }
                          }
                        }
                      }
                    },
                    "InventoryManagement": {
                      "type": "object",
                      "unevaluatedProperties": false,
                      "properties": {
                        "Stock": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "StockAge": {
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "IsReturnable": {
                              "type": "string",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "Distribution": {
                      "type": "object",
                      "unevaluatedProperties": false,
                      "properties": {
                        "ULD": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "description": "Unit Load Device",
                          "required": [
                            "ULDType"
                          ],
                          "properties": {
                            "ULDType": {
                              "type": "string",
                              "description": "The type of ULD",
                              "enum": [
                                "Package",
                                "Container",
                                "Pallet",
                                "Crate"
                              ]
                            },
                            "ULDCapacity": {
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "ULDWeight": {
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "ULDVolume": {
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "ULDHeight": {
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "ULDWidth": {
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "ULDLength": {
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "Packaging": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "PackagingCode": {
                              "type": "string"
                            },
                            "PackagingType": {
                              "type": "string"
                            },
                            "PackagingDesc": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "SalesPerformance": {
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Description": {
                      "type": "string"
                    }
                  }
                },
                "DigitalAttributes": {
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Web": {
                      "type": "object",
                      "unevaluatedProperties": false,
                      "properties": {
                        "WebExclusive": {
                          "type": "string",
                          "enum": [
                            "Y",
                            "N",
                            "U"
                          ]
                        },
                        "WebDescription": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "WebDescriptionShort": {
                              "type": "string"
                            },
                            "WebDescriptionLong": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "Images": {
                      "type": "object",
                      "unevaluatedProperties": false,
                      "properties": {
                        "Model": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "Height": {
                              "type": "string"
                            },
                            "Wears": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "Bundles": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "BundleID"
                        ],
                        "properties": {
                          "BundleID": {
                            "type": "string"
                          },
                          "BundleName": {
                            "type": "string"
                          },
                          "BundleDescription": {
                            "type": "string"
                          },
                          "IncludedProducts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "A collection of product ids as a common set",
                                "unevaluatedProperties": false,
                                "properties": {
                                  "EntityId": {
                                    "type": "string",
                                    "description": "The (base) product Id, in Xfuze canonical form, identifying the (base not variant) product e.g Product_Retail247_123456"
                                  },
                                  "EntityType": {
                                    "type": "string",
                                    "description": "The type of the product the EntityId references e.g ProductVariant"
                                  },
                                  "ProductId": {
                                    "type": "string",
                                    "description": "The (base) product Id, in Xfuze canonical form, identifying the (base not variant) product e.g Product_Retail247_123456"
                                  },
                                  "ProductKey": {
                                    "type": "string",
                                    "description": "The (base) product number (native form like SKU), identifying the (base not variant) product e.g 123456"
                                  },
                                  "ProductVariantId": {
                                    "type": "string",
                                    "minLength": 1,
                                    "description": "The (variant) product Id, in Xfuze canonical form, identifying the (base not variant) product Often the base [ProductId]_[VariantPart] where variant part can be for example a native key, a size code etc e.g ProductVariant_Retail247_123456789_32R"
                                  },
                                  "ProductVariantKey": {
                                    "type": "string",
                                    "minLength": 1,
                                    "description": "The (variant) product number (native form like SKU), identifying the (base not variant) product e.g 123456789_32R"
                                  },
                                  "ProductVariantKeyType": {
                                    "type": "string",
                                    "description": "The (variant) product number (native form like SKU), identifying the (base not variant) product  e.g 123456789",
                                    "enum": [
                                      "SKU",
                                      "EAN",
                                      "UPC",
                                      "OptionId"
                                    ]
                                  },
                                  "SKU": {
                                    "type": "string",
                                    "description": "The SKU of the product e.g 123456789"
                                  },
                                  "EAN": {
                                    "type": "string",
                                    "description": "The EAN (a type of barcode, but here in explicit form) of the product e e.g 5059595842972"
                                  },
                                  "UPC": {
                                    "type": "string",
                                    "description": "The UPC (a type of barcode, but here in explicit form) of the product e.g 85059595842972"
                                  },
                                  "Barcode": {
                                    "description": "The barcode of the product e.g 869893435059595842972",
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "Barcode": {
                                        "type": "string",
                                        "description": "The barcode data itself"
                                      },
                                      "BarcodeType": {
                                        "type": "string",
                                        "description": "The type of the barcode e.g  UPC, EAB, QRCode, Code39, Code128, DataMatrix, PDF417, ITF14, Codabar, MaxiCode"
                                      },
                                      "BarcodeSource": {
                                        "type": "string",
                                        "description": "The source of the barcode instance"
                                      },
                                      "Lineage": {
                                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                        "type": "object",
                                        "unevaluatedProperties": false,
                                        "properties": {
                                          "EntityId": {
                                            "type": "string",
                                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                          },
                                          "EventId": {
                                            "type": "string",
                                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                          },
                                          "AsOf": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                          },
                                          "SourceSystem": {
                                            "type": "string",
                                            "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                          }
                                        },
                                        "required": [
                                          "EntityId,EventId,AsOf"
                                        ]
                                      }
                                    }
                                  },
                                  "Barcodes": {
                                    "type": "array",
                                    "description": "A collection (array) of barcodes where 1 or more in array form",
                                    "items": {
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Barcode": {
                                          "type": "string",
                                          "description": "The barcode data itself"
                                        },
                                        "BarcodeType": {
                                          "type": "string",
                                          "description": "The type of the barcode e.g  UPC, EAB, QRCode, Code39, Code128, DataMatrix, PDF417, ITF14, Codabar, MaxiCode"
                                        },
                                        "BarcodeSource": {
                                          "type": "string",
                                          "description": "The source of the barcode instance"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            },
                                            "SourceSystem": {
                                              "type": "string",
                                              "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                            }
                                          },
                                          "required": [
                                            "EntityId,EventId,AsOf"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "ItemOptionNumber": {
                                    "type": "string",
                                    "description": "The item option number of the product e.g 1111111"
                                  }
                                },
                                "required": [
                                  "ProductVariantKey",
                                  "ProductVariantId"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "SafetyAndStandards": {
                      "properties": {
                        "Care": {
                          "properties": {
                            "WashingInstructions": {
                              "type": "string"
                            },
                            "DryingInstructions": {
                              "type": "string"
                            },
                            "IroningInstructions": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "RegulatoryCompliance": {
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "SupplyChain": {
                      "type": "object",
                      "properties": {
                        "CountryOfOrigin": {
                          "type": "object",
                          "description": "A country object, based on official ISO 3166",
                          "anyOf": [
                            {
                              "properties": {
                                "ISO2": {
                                  "type": "string",
                                  "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                }
                              },
                              "required": [
                                "ISO2"
                              ]
                            },
                            {
                              "properties": {
                                "ISO3": {
                                  "type": "string",
                                  "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                }
                              },
                              "required": [
                                "ISO3"
                              ]
                            }
                          ],
                          "unevaluatedProperties": false,
                          "properties": {
                            "CountryCode": {
                              "type": "string",
                              "description": "The canonical CountryCode (country-code) country code e.g 036"
                            },
                            "Name": {
                              "type": "string",
                              "description": "The canonical (official) 'Name' of the country e.g Australia"
                            },
                            "AltName": {
                              "type": "string",
                              "description": "An alternate name for the country"
                            },
                            "RegionCode": {
                              "type": "string",
                              "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                            },
                            "RegionName": {
                              "type": "string",
                              "description": "The canonical RegionName (region) for the country code e.g Oceania"
                            },
                            "SubRegionCode": {
                              "type": "string",
                              "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                            },
                            "SubRegionName": {
                              "type": "string",
                              "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                            },
                            "IntermediateRegionCode": {
                              "type": "string",
                              "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                            },
                            "IntermediateRegionName": {
                              "type": "string",
                              "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                            },
                            "Coordinates": {
                              "description": "The canonical Coordinates of the country (canonical from google)",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "Latitude": {
                                  "type": "number",
                                  "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                  "minimum": -90,
                                  "maximum": 90
                                },
                                "Longitude": {
                                  "type": "number",
                                  "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                  "minimum": -180,
                                  "maximum": 180
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              },
                              "required": [
                                "Latitude",
                                "Longitude"
                              ]
                            },
                            "PrimaryLanguage": {
                              "type": "string",
                              "description": "The canonical Primary Language of the country"
                            },
                            "Currency": {
                              "description": "The canonical Currency Code of the country (canonical from google)",
                              "type": "object",
                              "anyOf": [
                                {
                                  "required": [
                                    "ISO2"
                                  ]
                                },
                                {
                                  "required": [
                                    "ISO3"
                                  ]
                                }
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "ISO2": {
                                  "type": "string",
                                  "description": "The canonical ISO2 currency code"
                                },
                                "ISO3": {
                                  "type": "string",
                                  "description": "The canonical ISO3 currency code"
                                },
                                "Number": {
                                  "type": "string",
                                  "description": "The canonical currency number"
                                },
                                "DecimalPlaces": {
                                  "type": "string",
                                  "description": "The canonical number of decimal places for the currency"
                                },
                                "CountryCodes": {
                                  "type": "array",
                                  "description": "The canonical array of ISO3 country codes officially using this currency",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "Symbol": {
                                  "type": "string",
                                  "description": "The canonical symbol for the currency"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    },
                                    "SourceSystem": {
                                      "type": "string",
                                      "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                    }
                                  },
                                  "required": [
                                    "EntityId,EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "IsEuropeanCountry": {
                              "type": "string",
                              "description": "Is this country an european one? e.g Y",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "Lineage": {
                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "EntityId": {
                                  "type": "string",
                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                },
                                "EventId": {
                                  "type": "string",
                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                },
                                "AsOf": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                },
                                "SourceSystem": {
                                  "type": "string",
                                  "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                }
                              },
                              "required": [
                                "EntityId,EventId,AsOf"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "Environmental": {
                      "type": "object",
                      "properties": {
                        "EcoFriendly": {
                          "type": "object",
                          "description": "A custom att object, a generic extension object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "Code": {
                              "type": "string",
                              "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                            },
                            "CodeShort": {
                              "type": "string",
                              "description": "The short version of the code in the leaf element of 'Code'"
                            },
                            "Name": {
                              "type": "string",
                              "description": "The name of the att"
                            },
                            "Value": {
                              "type": "string",
                              "description": "The value of the att"
                            },
                            "Desc": {
                              "type": "string",
                              "description": "The desc of the att"
                            },
                            "SourceSystem": {
                              "type": "string",
                              "description": "The source system this att is from"
                            },
                            "Lineage": {
                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "EntityId": {
                                  "type": "string",
                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                },
                                "EventId": {
                                  "type": "string",
                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                },
                                "AsOf": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                },
                                "SourceSystem": {
                                  "type": "string",
                                  "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                }
                              },
                              "required": [
                                "EntityId,EventId,AsOf"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "SafetyAndStandards": {
                      "type": "object",
                      "properties": {
                        "ShelfLife": {
                          "type": "object",
                          "required": [
                            "Amount"
                          ],
                          "unevaluatedProperties": false,
                          "properties": {
                            "Code": {
                              "type": "string",
                              "description": "The code of the quantity e.g QtySold, QtyReturned"
                            },
                            "Desc": {
                              "type": "string",
                              "description": "The description of the quantity"
                            },
                            "Amount": {
                              "type": [
                                "number",
                                "null"
                              ],
                              "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                            },
                            "UnitMeasure": {
                              "type": "string",
                              "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                            },
                            "UnitType": {
                              "type": "string",
                              "description": "The quantity unit type. e.g Metric, Imperial"
                            },
                            "UnitScheme": {
                              "type": "string",
                              "description": "The quantity unit scheme e.g ISO xx"
                            },
                            "Lineage": {
                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "EntityId": {
                                  "type": "string",
                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                },
                                "EventId": {
                                  "type": "string",
                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                },
                                "AsOf": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                },
                                "SourceSystem": {
                                  "type": "string",
                                  "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                }
                              },
                              "required": [
                                "EntityId,EventId,AsOf"
                              ]
                            }
                          }
                        },
                        "AgeRestriction": {
                          "type": "object",
                          "description": "A custom att object, a generic extension object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "Code": {
                              "type": "string",
                              "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                            },
                            "CodeShort": {
                              "type": "string",
                              "description": "The short version of the code in the leaf element of 'Code'"
                            },
                            "Name": {
                              "type": "string",
                              "description": "The name of the att"
                            },
                            "Value": {
                              "type": "string",
                              "description": "The value of the att"
                            },
                            "Desc": {
                              "type": "string",
                              "description": "The desc of the att"
                            },
                            "SourceSystem": {
                              "type": "string",
                              "description": "The source system this att is from"
                            },
                            "Lineage": {
                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "EntityId": {
                                  "type": "string",
                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                },
                                "EventId": {
                                  "type": "string",
                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                },
                                "AsOf": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                },
                                "SourceSystem": {
                                  "type": "string",
                                  "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                }
                              },
                              "required": [
                                "EntityId,EventId,AsOf"
                              ]
                            }
                          }
                        },
                        "DangerousGoods": {
                          "type": "object",
                          "description": "A custom att object, a generic extension object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "Code": {
                              "type": "string",
                              "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                            },
                            "CodeShort": {
                              "type": "string",
                              "description": "The short version of the code in the leaf element of 'Code'"
                            },
                            "Name": {
                              "type": "string",
                              "description": "The name of the att"
                            },
                            "Value": {
                              "type": "string",
                              "description": "The value of the att"
                            },
                            "Desc": {
                              "type": "string",
                              "description": "The desc of the att"
                            },
                            "SourceSystem": {
                              "type": "string",
                              "description": "The source system this att is from"
                            },
                            "Lineage": {
                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "EntityId": {
                                  "type": "string",
                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                },
                                "EventId": {
                                  "type": "string",
                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                },
                                "AsOf": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                },
                                "SourceSystem": {
                                  "type": "string",
                                  "description": "The source system of the most recent impacting change that the above event (details) are related to"
                                }
                              },
                              "required": [
                                "EntityId,EventId,AsOf"
                              ]
                            }
                          }
                        },
                        "Care": {
                          "type": "object",
                          "properties": {}
                        },
                        "Labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "LabelCode": {
                                "type": "string"
                              },
                              "LabelType": {
                                "type": "string"
                              },
                              "LabelContent": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "CompositeEntityId",
                "CompositeEntityType",
                "CoreAtts",
                "EntityId",
                "EntityType",
                "ParentEntityId",
                "ParentEntityType",
                "Status",
                "Times",
                "Type",
                "XRefIds"
              ],
              "type": "object",
              "unevaluatedProperties": false
            }
          }
        }
      }
    }
  },
  "required": [
    "CompositeEntityId",
    "CompositeEntityType",
    "DomainEvent",
    "EntityId",
    "EntityType",
    "EventId",
    "EventMetadata",
    "EventName",
    "EventOccurredTimestampLocal",
    "EventOccurredTimestampUTC",
    "ParentEntityId",
    "ParentEntityType"
  ],
  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader",
  "title": "EventHeader",
  "description": "XDM Schema for the common event component 'EventHeader'",
  "type": "object",
  "unevaluatedProperties": false
}