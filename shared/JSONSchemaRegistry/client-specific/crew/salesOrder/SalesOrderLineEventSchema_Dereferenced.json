{
  "type": "object",
  "unevaluatedProperties": false,
  "allOf": [
    {
      "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader",
      "title": "EventHeader",
      "description": "XDM Schema for the common event component 'EventHeader'",
      "type": "object",
      "allOf": [
        {
          "properties": {
            "EntityId": {
              "type": "string",
              "description": "The (required) globally unique synthetic Xfuze Id for the entity instance this event is related to and whose payload is the subject of change, unique across all entities. Typically of the format [EntityType::EntitySubType]_[SystemCode]_[RawEntityId] where RawEntityId can be composed of 1 or more source fields to create singular uniqueness e.g SalesOrderLine::Return_Hybris_8106008620_RET1"
            },
            "EntityType": {
              "type": "string",
              "description": "The (required) entity type, allowing for a typing system (top level) for entities, where the type is sourced from the master Xfuze control list e.g SalesOrderLine"
            },
            "EntitySubType": {
              "type": "string",
              "description": "An (optional) entity subtype, allowing for further, more refined typing of the core type for accuracy of interpretation e.g ReturnLine, CancelLine, VoidLine etc"
            },
            "ParentEntityId": {
              "type": "string",
              "description": "An (required) canonical Xfuze parent entity Id, where there is a natural parent a level above, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
            },
            "ParentEntityType": {
              "type": "string",
              "description": "An (required) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
            },
            "CompositeEntityId": {
              "type": "string",
              "description": "An (optional) canonical Xfuze parent entity Id, where there is a natural 'composition' and containing parent, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
            },
            "CompositeEntityType": {
              "type": "string",
              "description": "An (optional) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
            }
          },
          "required": [
            "EntityId",
            "EntityType",
            "ParentEntityId",
            "ParentEntityType",
            "CompositeEntityId",
            "CompositeEntityType"
          ]
        },
        {
          "properties": {
            "EventId": {
              "type": "string",
              "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata for business definition"
            },
            "EventName": {
              "type": "string",
              "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata for business definition"
            },
            "EventOccurredTimestampUTC": {
              "type": "string",
              "format": "date-time",
              "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata for business definition"
            },
            "EventOccurredTimestampLocal": {
              "type": "string",
              "format": "date-time",
              "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata for business definition"
            },
            "EventOccurredTimestampPartyLocal": {
              "type": "string",
              "format": "date-time",
              "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata for business definition"
            },
            "EventMetadata": {
              "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata for business definition",
              "$id": "https://xfuze.io/xdm/schema/components/event/common/EventMetadata",
              "title": "EventMetadata",
              "type": "object",
              "unevaluatedProperties": false,
              "properties": {
                "EventAtts": {
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/EventAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/EventAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "description": "The (required) Xfuze derived / enriched attributes that define the context of the event itself",
                      "unevaluatedProperties": false,
                      "properties": {
                        "EventId": {
                          "type": "string",
                          "description": "The (required) globally unique synthetic Xfuze ID for this event instance, unique across all events. Typically of the format [EventName]_[EntityId]_[EventUniqueWatermark] e.g SalesOrderItemsDelivered_SalesOrderDelivery_Hybris_8106008620_JVGL06053_2023-01-12T12:03:00+00:00"
                        },
                        "EventCategory": {
                          "type": "string",
                          "description": "The (required) event category of this domain event (refer controlled list of allowed values) e.g SalesOrder"
                        },
                        "EventName": {
                          "type": "string",
                          "description": "The (required) event name defines the 'type' of the event (in business terms) and key for routing to specific event handlers (refer to controlled list of allowed values per entity type).  Format is [EntityType][VerbPastTense] e.g SalesOrderItemsDelivered"
                        },
                        "EventClass": {
                          "type": "string",
                          "description": "The class of the event as defined by where this event instance was generated e.g TriggerEvent",
                          "enum": [
                            "RawDataEvent",
                            "TriggerEvent",
                            "ProcessedEvent",
                            "DerivedEvent"
                          ]
                        },
                        "EventChangePattern": {
                          "type": "string",
                          "description": "The type of triggering data/change pattern of the source that resulted in this event e.g BusinessEvent",
                          "enum": [
                            "CDCEvent",
                            "FullSnapshot",
                            "BusinessEvent",
                            "NotificationEvent"
                          ]
                        },
                        "EventValueStream": {
                          "type": "string",
                          "description": "The retail value stream this event is related to e.g Order2Cash",
                          "enum": [
                            "Order2Cash",
                            "Return2Refund",
                            "Product2Offer",
                            "Purchase2Pay",
                            "Forecast2Stock",
                            "Issue2Resolution",
                            "Concept2Customer",
                            "Hire2Retire",
                            "Market2Lead",
                            "Lead2Conversion"
                          ]
                        },
                        "BizCapabilityL0": {
                          "type": "string",
                          "description": "The Level 0 (top) of Xiatech's Industry Specific Business Capability Model (i.e Retail BCM Model) e.g Sell"
                        },
                        "BizCapabilityL1": {
                          "type": "string",
                          "description": "The Level 1 (top) of Xiatech's Industry Specific Business Capability Model (i.e Retail BCM Model) e.g Sell & Serve"
                        },
                        "BizCapabilityL2": {
                          "type": "string",
                          "description": "The Level 2 (top) of Xiatech's Industry Specific Business Capability Model (i.e Retail BCM Model) e.g Process Returns & Exchanges"
                        },
                        "ClientCode": {
                          "type": "string",
                          "description": "An (required) client code used for event ownership and billing attribution where required e.g GSR"
                        },
                        "Note": {
                          "type": "string",
                          "description": "An (optional) free form test field to add some comment to the note, typically for testing purposes e.g (Test case name, or a prod smoke test)"
                        },
                        "IsDerivedEvent": {
                          "type": "string",
                          "description": "String bool indicator for whether this event is a derived one (i.e derived from a processedEvent such as 'CustomerLastNameChanged' derived off 'CustomerProfileUpdated' e.g 'N'",
                          "enum": [
                            "Y",
                            "N",
                            "U"
                          ]
                        }
                      },
                      "required": [
                        "EventId",
                        "EventCategory",
                        "EventName",
                        "EventClass",
                        "EventChangePattern",
                        "ClientCode"
                      ]
                    },
                    "Origin": {
                      "type": "object",
                      "description": "The (required) 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
                      "unevaluatedProperties": false,
                      "properties": {
                        "EventId": {
                          "type": "string",
                          "description": "Raw form (optional) of the input eventId from the source, used in transforming to 'Xfuze' representations e.g d1d982ef-6dc6-47bb-80fb-2eaaf572deca"
                        },
                        "EventName": {
                          "type": "string",
                          "description": "Raw form (optional) of the input eventName from the source, used in transforming to 'Xfuze' representations e.g ORDER_PARCEL_DELIVERED"
                        },
                        "SourceSystem": {
                          "type": "string",
                          "description": "The (required) Xfuze system code of the external source system that is the genesis of the raw data trigger e.g Hybris"
                        },
                        "SourceSubSystem": {
                          "type": "string",
                          "description": "The (optional) Xfuze subsystem system code of the external (sub) source system that is the genesis of the raw data trigger e.g OrdersAPI"
                        },
                        "SourceFormatType": {
                          "type": "string",
                          "description": "The (required) code of the data interchange format of the raw data e.g JSON",
                          "enum": [
                            "JSON",
                            "CSV",
                            "XML",
                            "YAML",
                            "BINARY",
                            "EXCEL",
                            "Other"
                          ]
                        },
                        "CorrelationId": {
                          "type": "string",
                          "description": "The (optional) external correlation Id as provided by the source (often, but not always, the same as the rawEventId) e.g 3e35cec2-050d-4334-b564-5f1ce704a5f8"
                        }
                      },
                      "required": [
                        "SourceSystem",
                        "SourceFormatType"
                      ]
                    }
                  },
                  "required": [
                    "Xfuze",
                    "Origin"
                  ]
                },
                "EntityAtts": {
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "description": "The (required) Xfuze derived / enriched attributes that define the context of the entity the event is changing / notifying on",
                      "unevaluatedProperties": false,
                      "properties": {
                        "EntityId": {
                          "type": "string",
                          "description": "The (required) globally unique synthetic Xfuze Id for the entity instance this event is related to and whose payload is the subject of change, unique across all entities. Typically of the format [EntityType::EntitySubType]_[SystemCode]_[RawEntityId] where RawEntityId can be composed of 1 or more source fields to create singular uniqueness e.g SalesOrderLine::Return_Hybris_8106008620_RET1"
                        },
                        "EntityType": {
                          "type": "string",
                          "description": "The (required) entity type, allowing for a typing system (top level) for entities, where the type is sourced from the master Xfuze control list e.g SalesOrderLine"
                        },
                        "EntitySubType": {
                          "type": "string",
                          "description": "An (optional) entity subtype, allowing for further, more refined typing of the core type for accuracy of interpretation e.g ReturnLine, CancelLine, VoidLine etc"
                        },
                        "EntityVariation": {
                          "type": "string",
                          "description": "An (optional) instance variation of the type of entity and is contextual to the type of entity under change e.g RetailTransaction"
                        },
                        "EntityDomain": {
                          "type": "string",
                          "description": "The (required) core entity domain, sourced from the master Xfuze control list e.g SalesOrder",
                          "enum": [
                            "Customer",
                            "Product",
                            "Sales",
                            "SupplyChain",
                            "Inventory",
                            "Marketing",
                            "DigitalActivity",
                            "Finance",
                            "Analytics",
                            "Common",
                            "Other"
                          ]
                        },
                        "EntityClass": {
                          "type": "string",
                          "description": "The (required) class of the entity in this event, representing the levelling / granularity of the entity state being transferred and contained e.g Composite (multi entity composite)",
                          "enum": [
                            "Composite",
                            "Base",
                            "Raw",
                            "Analytical",
                            "Notification"
                          ]
                        },
                        "ParentEntityId": {
                          "type": "string",
                          "description": "An (required) canonical Xfuze parent entity Id, where there is a natural 'composition' and containing parent, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
                        },
                        "ParentEntityType": {
                          "type": "string",
                          "description": "An (required) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                        },
                        "CompositeEntityId": {
                          "type": "string",
                          "description": "An (required) canonical Xfuze composite (root) entity Id, where there is a natural 'composition' and containing parent, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
                        },
                        "CompositeEntityType": {
                          "type": "string",
                          "description": "An (required) canonical Xfuze composite (root) entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                        },
                        "EntityStatusCode": {
                          "type": "string",
                          "description": "An (optional) canonical Xfuze entity status, often key for events and the state transition happening with the entity. e.g InProgress"
                        },
                        "EntityStatusDesc": {
                          "type": "string",
                          "description": "An (optional) canonical Xfuze entity status, often key for events and the state transition happening with the entity. e.g Line Processing In-Progress"
                        },
                        "IsSensitive": {
                          "type": "string",
                          "description": "e.g Y",
                          "enum": [
                            "Y",
                            "N",
                            "U"
                          ]
                        }
                      },
                      "required": [
                        "EntityId",
                        "EntityType",
                        "ParentEntityId",
                        "ParentEntityType",
                        "CompositeEntityId",
                        "CompositeEntityType",
                        "EntityDomain",
                        "IsSensitive"
                      ]
                    },
                    "Origin": {
                      "type": "object",
                      "description": "The (required) 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
                      "unevaluatedProperties": false,
                      "properties": {
                        "EntityId": {
                          "type": "string",
                          "description": "Raw form (required) of the input EntityId from the source, used in transforming to 'Xfuze' representations e.g 8106008620_RET1"
                        },
                        "ParentEntityId": {
                          "type": "string",
                          "description": "Raw form (optional) of the input EntityId from the source, used in transforming to 'Xfuze' representations e.g 8106008620"
                        },
                        "EntityStatusCode": {
                          "type": "string",
                          "description": "Raw form (optional) of the input EntityId from the source, used in transforming to 'Xfuze' representations e.g INPROGRESS"
                        }
                      },
                      "required": [
                        "EntityId"
                      ]
                    }
                  },
                  "required": [
                    "Xfuze",
                    "Origin"
                  ]
                },
                "TimeAtts": {
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/TimeAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/TimeAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "description": "The (required) Xfuze derived / enriched attributes that define the context of the time points (external / internal) related to the event is changing / notifying on",
                      "unevaluatedProperties": false,
                      "properties": {
                        "TimeZones": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "HomeTimeZone": {
                              "description": "A TimeZone object (required) representing the main 'home' timezone the client is and reports form",
                              "type": "object",
                              "required": [
                                "TimeZone"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "TimeZone": {
                                  "type": "string",
                                  "description": "The Time Zone e.g Europe/London"
                                },
                                "TimeZoneOffset": {
                                  "type": "string",
                                  "description": "UTC+01:00"
                                },
                                "TimeZoneCountryCode": {
                                  "type": "string",
                                  "description": "The ISO3 country code that is the country this TimeZone is for e.g GBR"
                                }
                              }
                            },
                            "EventTimeZone": {
                              "description": "A TimeZone object (required) representing the main 'event' timezone i.e event source could represent all times in UTC.  Can be same as HomeTimeZone but also different",
                              "type": "object",
                              "required": [
                                "TimeZone"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "TimeZone": {
                                  "type": "string",
                                  "description": "The Time Zone e.g Europe/London"
                                },
                                "TimeZoneOffset": {
                                  "type": "string",
                                  "description": "UTC+01:00"
                                },
                                "TimeZoneCountryCode": {
                                  "type": "string",
                                  "description": "The ISO3 country code that is the country this TimeZone is for e.g GBR"
                                }
                              }
                            },
                            "PartyTimeZone": {
                              "description": "A TimeZone object (optional) representing the contextual 'party' timezone associated with the party (e.b customer) in the context of the event (e.g order placed timezone)",
                              "type": "object",
                              "required": [
                                "TimeZone"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "TimeZone": {
                                  "type": "string",
                                  "description": "The Time Zone e.g Europe/London"
                                },
                                "TimeZoneOffset": {
                                  "type": "string",
                                  "description": "UTC+01:00"
                                },
                                "TimeZoneCountryCode": {
                                  "type": "string",
                                  "description": "The ISO3 country code that is the country this TimeZone is for e.g GBR"
                                }
                              }
                            }
                          },
                          "required": [
                            "HomeTimeZone",
                            "EventTimeZone"
                          ]
                        },
                        "Times": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "EventOccurredTimestamp": {
                              "description": "Time properties (required) representing the 'true' real-world time the event occurred (EOT) e.g orderPlaced time, (typically) sourced from.  If the DQ of the source is poor, fallback on system time (not great).  This should be the timestamp(s) to use for any analysis and operational handling e.g ordering",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "anyOf": [
                                {
                                  "required": [
                                    "DateId",
                                    "UTC",
                                    "Millis"
                                  ]
                                },
                                {
                                  "required": [
                                    "DateId",
                                    "Local",
                                    "TimeZone"
                                  ]
                                }
                              ],
                              "properties": {
                                "DateId": {
                                  "type": "string",
                                  "description": "The Xfuze Date dim Id e.g Dates_20231001"
                                },
                                "HourId": {
                                  "type": "string",
                                  "description": "The Xfuze hour dim Id e.g Hours_2023100112"
                                },
                                "UTC": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in UTC e.g 2023-01-12T12:03:00.000+0000"
                                },
                                "Local": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "PartyLocal": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in party local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "Millis": {
                                  "type": "number",
                                  "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                                },
                                "TimeZone": {
                                  "type": "string",
                                  "description": "The related time zone"
                                }
                              }
                            },
                            "EventOccurredType": {
                              "type": "string",
                              "description": "The (required) type of the EventOccurredTimestamp, indicator of the quality.  TrueTime is if EOT is sourced from correct / best timestamp from the source and is the highest quality.",
                              "enum": [
                                "TrueTime",
                                "ApproximateTime",
                                "SystemTime"
                              ]
                            },
                            "EventSourceSentTimestamp": {
                              "description": "Time properties (optional) representing the time the inbound originating / raw event was originally sent from source leaving its boundary of control e.g time an external client service published the event",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "anyOf": [
                                {
                                  "required": [
                                    "DateId",
                                    "UTC",
                                    "Millis"
                                  ]
                                },
                                {
                                  "required": [
                                    "DateId",
                                    "Local",
                                    "TimeZone"
                                  ]
                                }
                              ],
                              "properties": {
                                "DateId": {
                                  "type": "string",
                                  "description": "The Xfuze Date dim Id e.g Dates_20231001"
                                },
                                "HourId": {
                                  "type": "string",
                                  "description": "The Xfuze hour dim Id e.g Hours_2023100112"
                                },
                                "UTC": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in UTC e.g 2023-01-12T12:03:00.000+0000"
                                },
                                "Local": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "PartyLocal": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in party local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "Millis": {
                                  "type": "number",
                                  "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                                },
                                "TimeZone": {
                                  "type": "string",
                                  "description": "The related time zone"
                                }
                              }
                            },
                            "EventExternalReceivedTimestamp": {
                              "description": "Time properties (optional) representing the time the inbound originating / raw event was received into an interim landing zone, prior to SmartConnector processing e.g time landed in GSC, PubSub prior to the smart connector processing",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "anyOf": [
                                {
                                  "required": [
                                    "DateId",
                                    "UTC",
                                    "Millis"
                                  ]
                                },
                                {
                                  "required": [
                                    "DateId",
                                    "Local",
                                    "TimeZone"
                                  ]
                                }
                              ],
                              "properties": {
                                "DateId": {
                                  "type": "string",
                                  "description": "The Xfuze Date dim Id e.g Dates_20231001"
                                },
                                "HourId": {
                                  "type": "string",
                                  "description": "The Xfuze hour dim Id e.g Hours_2023100112"
                                },
                                "UTC": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in UTC e.g 2023-01-12T12:03:00.000+0000"
                                },
                                "Local": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "PartyLocal": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in party local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "Millis": {
                                  "type": "number",
                                  "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                                },
                                "TimeZone": {
                                  "type": "string",
                                  "description": "The related time zone"
                                }
                              }
                            },
                            "EventExternalLandingZoneType": {
                              "type": "string",
                              "description": "The (optional) type of the EventExternalReceivedTimestamp (should be provided if EventExternalReceivedTimestamp set), indicator of the external landing zone type. e.g GCS",
                              "enum": [
                                "GCS",
                                "S3",
                                "Pub/Sub",
                                "Pulsar",
                                "Kafka",
                                "Kinesis",
                                "SQS",
                                "SNS",
                                "EventBridge",
                                "EventGrid",
                                "WebMethods",
                                "SFTP",
                                "FTP",
                                "MongoDB",
                                "MongoDBStream",
                                "DynamoDB",
                                "DynamoDBStream",
                                "DocumentDB",
                                "DocumentDBStream",
                                "Other"
                              ]
                            },
                            "EventReceivedTimestamp": {
                              "description": "Time properties (required) representing the time at which the SmartConnector received (to process) the inbound originating / raw event",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "anyOf": [
                                {
                                  "required": [
                                    "DateId",
                                    "UTC",
                                    "Millis"
                                  ]
                                },
                                {
                                  "required": [
                                    "DateId",
                                    "Local",
                                    "TimeZone"
                                  ]
                                }
                              ],
                              "properties": {
                                "DateId": {
                                  "type": "string",
                                  "description": "The Xfuze Date dim Id e.g Dates_20231001"
                                },
                                "HourId": {
                                  "type": "string",
                                  "description": "The Xfuze hour dim Id e.g Hours_2023100112"
                                },
                                "UTC": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in UTC e.g 2023-01-12T12:03:00.000+0000"
                                },
                                "Local": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "PartyLocal": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in party local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "Millis": {
                                  "type": "number",
                                  "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                                },
                                "TimeZone": {
                                  "type": "string",
                                  "description": "The related time zone"
                                }
                              }
                            },
                            "EventIngestProcessedTimestamp": {
                              "description": "Time properties (optional) representing when a SmartConnector finished 'processing' the inbound originating / raw event e.g just prior to publishing downstream",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "anyOf": [
                                {
                                  "required": [
                                    "DateId",
                                    "UTC",
                                    "Millis"
                                  ]
                                },
                                {
                                  "required": [
                                    "DateId",
                                    "Local",
                                    "TimeZone"
                                  ]
                                }
                              ],
                              "properties": {
                                "DateId": {
                                  "type": "string",
                                  "description": "The Xfuze Date dim Id e.g Dates_20231001"
                                },
                                "HourId": {
                                  "type": "string",
                                  "description": "The Xfuze hour dim Id e.g Hours_2023100112"
                                },
                                "UTC": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in UTC e.g 2023-01-12T12:03:00.000+0000"
                                },
                                "Local": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "PartyLocal": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in party local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "Millis": {
                                  "type": "number",
                                  "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                                },
                                "TimeZone": {
                                  "type": "string",
                                  "description": "The related time zone"
                                }
                              }
                            },
                            "EventProcessedTimestamp": {
                              "description": "Time properties (optional) representing when an EventProcessor finished 'processing' the trigger event and all changes and enrichments data wise",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "anyOf": [
                                {
                                  "required": [
                                    "DateId",
                                    "UTC",
                                    "Millis"
                                  ]
                                },
                                {
                                  "required": [
                                    "DateId",
                                    "Local",
                                    "TimeZone"
                                  ]
                                }
                              ],
                              "properties": {
                                "DateId": {
                                  "type": "string",
                                  "description": "The Xfuze Date dim Id e.g Dates_20231001"
                                },
                                "HourId": {
                                  "type": "string",
                                  "description": "The Xfuze hour dim Id e.g Hours_2023100112"
                                },
                                "UTC": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in UTC e.g 2023-01-12T12:03:00.000+0000"
                                },
                                "Local": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "PartyLocal": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in party local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "Millis": {
                                  "type": "number",
                                  "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                                },
                                "TimeZone": {
                                  "type": "string",
                                  "description": "The related time zone"
                                }
                              }
                            },
                            "EventPublishedTimestamp": {
                              "description": "Time properties (optional) representing when an EventProcessor, post 'processing' the trigger event and all changes, publishes the event downstream ",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "anyOf": [
                                {
                                  "required": [
                                    "DateId",
                                    "UTC",
                                    "Millis"
                                  ]
                                },
                                {
                                  "required": [
                                    "DateId",
                                    "Local",
                                    "TimeZone"
                                  ]
                                }
                              ],
                              "properties": {
                                "DateId": {
                                  "type": "string",
                                  "description": "The Xfuze Date dim Id e.g Dates_20231001"
                                },
                                "HourId": {
                                  "type": "string",
                                  "description": "The Xfuze hour dim Id e.g Hours_2023100112"
                                },
                                "UTC": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in UTC e.g 2023-01-12T12:03:00.000+0000"
                                },
                                "Local": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "PartyLocal": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in party local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "Millis": {
                                  "type": "number",
                                  "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                                },
                                "TimeZone": {
                                  "type": "string",
                                  "description": "The related time zone"
                                }
                              }
                            },
                            "EventSeq": {
                              "type": "number",
                              "description": "The (optional) sequence number of this event over life of entity, typically explicitly provided or sometimes derived"
                            }
                          },
                          "required": [
                            "EventOccurredTimestamp",
                            "EventOccurredType",
                            "EventReceivedTimestamp"
                          ]
                        }
                      },
                      "required": [
                        "TimeZones",
                        "Times"
                      ]
                    },
                    "Origin": {
                      "type": "object",
                      "unevaluatedProperties": false,
                      "properties": {
                        "Times": {
                          "type": "object",
                          "description": "The Origin (i.e source / raw attributes) input fields provided used in transforming to 'Xfuze' representations",
                          "unevaluatedProperties": false,
                          "properties": {
                            "EventOccurredTimestamp": {
                              "type": "string",
                              "description": "Raw form (as provided) of the input timestamp used in generating Xfuze EventOccurredTimestamp e.g 2023-01-12 12:03:00+00:00"
                            },
                            "EventSourceSentTimestamp": {
                              "type": "string",
                              "description": "Raw form (as provided) of the input timestamp used in generating Xfuze EventSourceSentTimestamp e.g 1673525621103"
                            },
                            "EventExternalReceivedTimestamp": {
                              "type": "string",
                              "description": "Raw form (as provided) of the input timestamp used in generating Xfuze EventExternalReceivedTimestamp e.g 1673525621012"
                            }
                          },
                          "required": [
                            "EventOccurredTimestamp"
                          ]
                        }
                      }
                    }
                  },
                  "required": [
                    "Xfuze",
                    "Origin"
                  ]
                },
                "PartyAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/PartyAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/PartyAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "description": "The (optional) Xfuze derived / enriched attributes that define the context of the (primary) party involved in this particular instance of the event",
                      "unevaluatedProperties": false,
                      "properties": {
                        "PartyId": {
                          "type": "string",
                          "description": "The (optional) canonical top level PartyId, identifying the physical party (e.g person, organisation, group), as the single ID source of truth across systems - typically only derivable by the EventProcessors e.g Party_69a79ae0-1d10-46b3-8dd2-7455c622aae2"
                        },
                        "SystemPartyId": {
                          "type": "string",
                          "description": "The (required) canonical party Id, for a given system, uniquely identifying the party within that specific system (as opposed to across systems which is the case for the above PartyId) e.g Party_SFCC_123456789"
                        },
                        "SystemAccountId": {
                          "type": "string",
                          "description": "The (optional) canonical top level AccountId of the account this event relates to e.g Account_SFCC_987654321"
                        },
                        "PartyRoleTypeCode": {
                          "type": "string",
                          "description": "The (required) type of behavioural role of the party with respect to the involvement in this event e.g Customer.  A party can assume multiple roles, this role is the one WRT this specific event"
                        },
                        "PartyRoleSubTypeCode": {
                          "type": "string",
                          "description": "The (optional) sub type of the top level role of the party with respect to the involvement in this event to further refine the top level role to be more accurate and specific e.g Purchaser, Recipient, DeliveryRecipient etc.  "
                        },
                        "PartyStatusCode": {
                          "type": "string",
                          "description": "The (optional) canonical status of the party as was at the time of this event e.g Registered"
                        },
                        "InvolvedReasonCode": {
                          "type": "string",
                          "description": "The (optional) canonical reason code as to they this party was involved in the event e.g Purchaser"
                        }
                      },
                      "required": [
                        "SystemPartyId"
                      ]
                    },
                    "Origin": {
                      "type": "object",
                      "description": "The 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
                      "unevaluatedProperties": false,
                      "properties": {
                        "SystemPartyId": {
                          "type": "string",
                          "description": "Raw form (as provided) of the input SystemPartyId (e.g CustomerId) from the source, used in transforming to 'Xfuze' representations e.g 123456789"
                        },
                        "SystemAccountId": {
                          "type": "string",
                          "description": "Raw form (as provided) of the input SystemPartyId (e.g CustomerAccountId) from the source, used in transforming to 'Xfuze' representations to e.g Account_SFCC_987654321"
                        },
                        "PartyRoleTypeCode": {
                          "type": "string",
                          "description": "Raw form (as provided) of the input PartyRoleTypeCode (e.g Customer or Employee, but more often derived by Xfuze then supplied as input) from the source, used in transforming to 'Xfuze' representations"
                        },
                        "PartyStatusCode": {
                          "type": "string",
                          "description": "Raw form (as provided) of the input PartyStatusCode (e.g Customer or Employee Status codes)  from the source, used in transforming to 'Xfuze' representations e.g Registered"
                        }
                      }
                    }
                  }
                },
                "ProductAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/ProductAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/ProductAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "anyOf": [
                        {
                          "required": [
                            "ProductId",
                            "ProductKey"
                          ]
                        },
                        {
                          "required": [
                            "ProductIds",
                            "ProductKeys"
                          ]
                        }
                      ],
                      "description": "The (optional) Xfuze derived / enriched attributes that define the context of the product(s) involved in event",
                      "unevaluatedProperties": false,
                      "properties": {
                        "ProductId": {
                          "type": "string",
                          "description": "e.g PRODUCT_APP_DE_de_DE_D20165-7647-D578-XXL"
                        },
                        "ProductKey": {
                          "type": "string",
                          "description": "e.g D20165-7647-D578-XXL"
                        },
                        "ProductIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "e.g [\"PRODUCT_APP_DE_de_DE_D20165-7647-D578-XXL\", \"PRODUCT_APP_DE_de_DE_51001-C909-C762-3834\", \"PRODUCT_APP_DE_de_DE_D22284-D183-D338-3834\"]"
                        },
                        "ProductKeys": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "e.g [\"D20165-7647-D578-XXL\", \"51001-C909-C762-3834\", \"D22284-D183-D338-3834\"]"
                        },
                        "InvolvedReasonCode": {
                          "type": "string",
                          "description": "e.g SoldProduct"
                        }
                      }
                    },
                    "Origin": {
                      "type": "object",
                      "description": "The 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
                      "unevaluatedProperties": false,
                      "properties": {
                        "ProductId": {
                          "type": "string",
                          "description": "Raw form (optional) of the input ProductId from the source, used in transforming to 'Xfuze' representations e.g PRODUCT_APP_DE_de_DE_D20165-7647-D578-XXL"
                        },
                        "ProductKey": {
                          "type": "string",
                          "description": "Raw form (optional) of the input ProductKey from the source, used in transforming to 'Xfuze' representations e.g D20165-7647-D578-XXL"
                        }
                      }
                    }
                  }
                },
                "LocationAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/LocationAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/LocationAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "description": "The Xfuze derived / enriched attributes that define the context of the primary location involved in event",
                      "unevaluatedProperties": false,
                      "properties": {
                        "ChannelCode": {
                          "type": "string",
                          "description": "The (optional) Xfuze channel code e.g App"
                        },
                        "ChannelName": {
                          "type": "string",
                          "description": "The (optional) Xfuze channel name e.g Mobile App"
                        },
                        "LocationId": {
                          "type": "string",
                          "description": "The (optional) Xfuze locationId of the primary location of this event e.g Location_Crew_901"
                        },
                        "LocationNumber": {
                          "type": "string",
                          "description": "The (optional) location type of the primary location of this event e.g 901"
                        },
                        "LocationType": {
                          "type": "string",
                          "description": "The (optional) location type of the primary location of this event e.g Store"
                        },
                        "CountryCode2": {
                          "type": "string",
                          "description": "The (optional) ISO 2 country code of the primary location of this event e.g GB"
                        },
                        "CountryCode3": {
                          "type": "string",
                          "description": "The (optional) ISO 3 country code of the primary location of this event e.g GBR"
                        },
                        "Latitude": {
                          "type": "string",
                          "description": "The (optional) latitude of the event e.g 51.835630"
                        },
                        "Longitude": {
                          "type": "string",
                          "description": "The (optional) longitude of the event e.g 6.700172"
                        },
                        "InvolvedReasonCode": {
                          "type": "string",
                          "description": "The (optional) reason that this channel/location was involved in the event e.g SoldLocation"
                        }
                      }
                    },
                    "Origin": {
                      "type": "object",
                      "description": "The 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
                      "unevaluatedProperties": false,
                      "properties": {
                        "ChannelCode": {
                          "type": "string",
                          "description": "Raw form (optional) of the input ChannelCode from the source, used in transforming to 'Xfuze' representations e.g APP"
                        },
                        "ChannelName": {
                          "type": "string",
                          "description": "Raw form (optional) of the input ChannelName from the source, used in transforming to 'Xfuze' representations e.g MOBILEAPP"
                        },
                        "LocationId": {
                          "type": "string",
                          "description": "Raw form (optional) of the input LocationId from the source, used in transforming to 'Xfuze' representations e.g Location_Hybris_f37f4592-da7e-4e59-bddc-6f6f2e17d3eb"
                        },
                        "LocationNumber": {
                          "type": "string",
                          "description": "Raw form (optional) of the input LocationNumber from the source, used in transforming to 'Xfuze' representations e.g 189"
                        },
                        "LocationType": {
                          "type": "string",
                          "description": "Raw form (optional) of the input LocationType from the source, used in transforming to 'Xfuze' representations e.g STORE"
                        },
                        "CountryCode": {
                          "type": "string",
                          "description": "Raw form (optional) of the input CountryCode from the source, used in transforming to 'Xfuze' representations e.g GB"
                        }
                      }
                    }
                  }
                },
                "MeasuresAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/MeasuresAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/MeasuresAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "TriggerEntity": {
                      "type": "object",
                      "description": "The Xfuze key contextual 'measures' (numerical values) contained in the event that contextualise the change itself (e.g for SalesOrderItemsCancelled event, the QtyCancelled)",
                      "unevaluatedProperties": false,
                      "properties": {
                        "Value1": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 232.98"
                        },
                        "Value1Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Totals.GrandTotal.BCY.IncTax"
                        },
                        "Value2": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 50.15"
                        },
                        "Value2Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Totals.FinalMargin.BCY.Percent"
                        },
                        "Value3": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 0.0"
                        },
                        "Value3Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Totals.DiscountsTotal.BCY.IncTax"
                        },
                        "Value4": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 50.15"
                        },
                        "Value4Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Totals.FinalMargin.BCY.Percent"
                        },
                        "Value5": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 0.0"
                        },
                        "Value5Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Totals.DiscountsTotal.BCY.IncTax"
                        },
                        "Value6": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 3"
                        },
                        "Value6Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Qtys.QtySold"
                        },
                        "Value7": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 3"
                        },
                        "Value7Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Qtys.QtySold"
                        }
                      }
                    },
                    "LatestEntity": {
                      "type": "object",
                      "description": "The Xfuze key contextual 'measures' (numerical values) contained in the event that contextualise the latest entity state itself (e.g stateful view - for SalesOrderItemsCancelled event, the QtyCancelled, QtyNet & QtySold)",
                      "unevaluatedProperties": false,
                      "properties": {
                        "Value1": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 232.98"
                        },
                        "Value1Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Totals.GrandTotal.BCY.IncTax"
                        },
                        "Value2": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 50.15"
                        },
                        "Value2Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Totals.FinalMargin.BCY.Percent"
                        },
                        "Value3": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 0.0"
                        },
                        "Value3Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Totals.DiscountsTotal.BCY.IncTax"
                        },
                        "Value4": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 50.15"
                        },
                        "Value4Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Totals.FinalMargin.BCY.Percent"
                        },
                        "Value5": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 0.0"
                        },
                        "Value5Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Totals.DiscountsTotal.BCY.IncTax"
                        },
                        "Value6": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 3"
                        },
                        "Value6Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Qtys.QtySold"
                        },
                        "Value7": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 3"
                        },
                        "Value7Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Qtys.QtySold"
                        }
                      }
                    }
                  }
                },
                "ReferenceAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/ReferenceAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/ReferenceAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "ReferenceAtts": {
                      "type": "object",
                      "unevaluatedProperties": false,
                      "description": "The Xfuze derived / enriched attributes that define core reference data / lookup data fields to enrich other structs/fields with in the event",
                      "properties": {
                        "Atts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "required": [
                                "Code",
                                "Value"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                                },
                                "CodeShort": {
                                  "type": "string",
                                  "description": "The leaf element of 'Code'"
                                },
                                "Name": {
                                  "type": "string",
                                  "description": "The name of the att"
                                },
                                "Value": {
                                  "type": "string",
                                  "description": "The value of the att"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The desc of the att"
                                },
                                "SourceSystem": {
                                  "type": "string",
                                  "description": "The source system this att is from"
                                },
                                "EventId": {
                                  "type": "string",
                                  "description": "The Xfuze EventId that was the source of this data"
                                },
                                "AsOf": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The timestamp at which the status was valid 'as of', if known and applicable"
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "Atts"
                      ]
                    }
                  },
                  "required": [
                    "ReferenceAtts"
                  ]
                },
                "PrivacyAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/PrivacyAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/PrivacyAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "description": "The (required)  Xfuze derived / enriched attributes that define the context of the privacy of the data involved in event",
                      "unevaluatedProperties": false,
                      "properties": {
                        "IsSensitiveEntity": {
                          "type": "string",
                          "description": "Is this a sensitive entity that needs sensitive handling for GDRP / PII? etc e.g Y",
                          "enum": [
                            "Y",
                            "N",
                            "U"
                          ]
                        },
                        "IsEncrypted": {
                          "type": "string",
                          "description": "Is this entities sensitive fields encrypted by Xfuze in this event? e.g N",
                          "enum": [
                            "Y",
                            "N",
                            "U"
                          ]
                        },
                        "EncryptionKeyId": {
                          "type": "string",
                          "description": "The ID (typically a cloud Id) of the key used in encryption e.g 1234abcd-12ab-34cd-56ef-1234567890ab"
                        },
                        "EncryptionKeyURI": {
                          "type": "string",
                          "description": "The URI (typically a cloud Id) of the key used in encryption  e.g arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"
                        },
                        "EncryptionKeyName": {
                          "type": "string",
                          "description": "e.g The name (typically a cloud Id) of the key used in encryption xfuze-default-key"
                        },
                        "EncryptionKeyHost": {
                          "type": "string",
                          "description": "The encryption key host provider e.g AWS::KMS"
                        },
                        "SensitiveFieldPaths": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The array of canonical codes of those sensitive fields contained in this event e.g Party.Profile.Name.FirstName"
                        }
                      },
                      "required": [
                        "IsSensitiveEntity",
                        "IsEncrypted"
                      ]
                    },
                    "Origin": {
                      "type": "object",
                      "description": "The (optional) 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
                      "unevaluatedProperties": false,
                      "properties": {
                        "IsEncrypted": {
                          "type": "string",
                          "description": "Raw form (optional) of the input ProductId from the source, used in transforming to 'Xfuze' representations e.g 1"
                        }
                      },
                      "required": [
                        "IsEncrypted"
                      ]
                    }
                  }
                },
                "IngestAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/IngestAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/IngestAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "title": "Xfuze IngestAtts",
                      "description": "The (required) Xfuze derived / enriched attributes that define the context of the external trigger system and full ingest path for lineage and auditability",
                      "unevaluatedProperties": false,
                      "oneOf": [
                        {
                          "required": [
                            "File"
                          ]
                        },
                        {
                          "required": [
                            "Stream"
                          ]
                        },
                        {
                          "required": [
                            "Api"
                          ]
                        },
                        {
                          "required": [
                            "Table"
                          ]
                        }
                      ],
                      "properties": {
                        "File": {
                          "type": "object",
                          "properties": {
                            "SystemCode": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The (required) system code of the provider of the file e.g GCS"
                            },
                            "URI": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The (optional) URI of the file if a cloud file being processed that this event was derived from e.g gcs://xfuze-file-ingest/clientA/prod/dt=20230810/SalesDaily.csv"
                            },
                            "Path": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The (required) URI of the file if a cloud file being processed that this event was derived from e.g xfuze-file-ingest/clientA/prod/dt=20230810"
                            },
                            "Name": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The (required) name of the file if a cloud file being processed that this event was derived from e.g SalesDaily.csv"
                            },
                            "BatchId": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The (optional) batch ID if processing is being batched e.g BT1001"
                            },
                            "BatchNumber": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The (optional) batch Number if processing is being batched e.g BT1001-004"
                            },
                            "LineNumber": {
                              "type": "number",
                              "description": "The (optional) line number within a batch, as a key way to track lineage of event to source row e.g 234"
                            },
                            "TotalBatchLines": {
                              "type": "number",
                              "description": "The (optional) total number of lines within the batch, as a tracker of batch completion e.g 500 "
                            },
                            "OriginalFileSizeBytes": {
                              "type": "number",
                              "description": "The (required) original file size in bytes, key to reconciliation in chunked/streaming mode e.g 25000 "
                            },
                            "OriginalRowSizeBytes": {
                              "type": "number",
                              "description": "The (optional) original file size in bytes, key to reconciliation in chunked/streaming mode e.g 500 "
                            },
                            "BytesOffsetInOriginalFile": {
                              "type": "number",
                              "description": "The (optional) original file size in bytes, key to reconciliation in chunked/streaming mode e.g 500 "
                            },
                            "FormatType": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The (required) source format type",
                              "enum": [
                                "CSV",
                                "TXT",
                                "JSON",
                                "XML",
                                "Binary",
                                "Other"
                              ]
                            },
                            "PatternType": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The (optional) type of File ingest pattern e.g Cloud Object Notification",
                              "enum": [
                                "CloudObjectNotification",
                                "SFTP",
                                "FTP",
                                "CloudObjectScan",
                                "Other"
                              ]
                            },
                            "ChangeTimestampUTC": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "format": "date-time",
                              "description": "The  (optional) time at which the file object changed state and triggered a notification, often in cloud metadata e.g GCS metadata"
                            },
                            "ObjectNotificationPayload": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The (optional) raw JSON string of the cloud object notification payload e.g GCS file notification"
                            }
                          }
                        },
                        "Stream": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "SystemCode": {
                              "type": "string"
                            },
                            "ChannelURI": {
                              "type": "string"
                            },
                            "ChannelName": {
                              "type": "string"
                            },
                            "ChannelType": {
                              "type": "string"
                            },
                            "Partition": {
                              "type": "string"
                            },
                            "Offset": {
                              "type": "number"
                            },
                            "ExternalMessageId": {
                              "type": "string"
                            },
                            "FormatType": {
                              "type": "string"
                            },
                            "PatternType": {
                              "type": "string"
                            },
                            "PublishTimestampUTC": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "format": "date-time"
                            }
                          }
                        },
                        "Api": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "SystemCode": {
                              "type": "string"
                            },
                            "URI": {
                              "type": "string"
                            },
                            "Name": {
                              "type": "string"
                            },
                            "Resource": {
                              "type": "string"
                            },
                            "HttpMethod": {
                              "type": "string"
                            },
                            "QueryString": {
                              "type": "string"
                            },
                            "FormatType": {
                              "type": "string"
                            },
                            "PatternType": {
                              "type": "string"
                            },
                            "InvokeTimestampUTC": {
                              "type": "string"
                            }
                          }
                        },
                        "Table": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "SystemCode": {
                              "type": "string"
                            },
                            "DatabaseURI": {
                              "type": "string"
                            },
                            "DatabaseName": {
                              "type": "string"
                            },
                            "SchemaName": {
                              "type": "string"
                            },
                            "TableName": {
                              "type": "string"
                            },
                            "RowKey": {
                              "type": "string"
                            },
                            "Method": {
                              "type": "string"
                            },
                            "PatternType": {
                              "type": "string"
                            },
                            "ReceiveTimestampUTC": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "Xfuze"
                  ]
                },
                "PayloadAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/PayloadAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/PayloadAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "description": "The Xfuze derived / enriched attributes that define various hashing values of the payloads, for deduping and change detection",
                      "unevaluatedProperties": false,
                      "properties": {
                        "DataPayloadHash": {
                          "type": "string",
                          "description": "The hash of the 'Data / Domain Objects' part of the Xfuze payload only, excluding EventHeader details e.g ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad"
                        },
                        "EventPayloadHash": {
                          "type": "string",
                          "description": "The hash of the 'Full Event' of the Xfuze payload, including EventHeader e.g cd5453f8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad"
                        },
                        "HashScheme": {
                          "type": "string",
                          "description": "The hash scheme used to hash the payload partse.g SHA256, MD5",
                          "enum": [
                            "SHA256",
                            "MD5",
                            "BASE64"
                          ]
                        }
                      }
                    },
                    "Origin": {
                      "type": "object",
                      "description": "The 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
                      "required": [
                        "DataPayloadHash"
                      ],
                      "unevaluatedProperties": false,
                      "properties": {
                        "DataPayloadHash": {
                          "type": "string",
                          "description": "The hash of the Origins 'Data / Domain Objects' part of the Xfuze payload only, excluding EventHeader details e.g ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad"
                        },
                        "EventPayloadHash": {
                          "type": "string",
                          "description": "The hash of the Origins 'Full Event' payload, if applicable e.g cd5453f8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad"
                        },
                        "HashScheme": {
                          "type": "string",
                          "description": "The hash scheme used to hash the origin payload partse.g SHA256, MD5",
                          "enum": [
                            "SHA256",
                            "MD5",
                            "BASE64",
                            "Other"
                          ]
                        }
                      }
                    }
                  }
                },
                "LabelAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/LabelAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/LabelAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "LabelAtts": {
                      "type": "object",
                      "description": "The Xfuze derived / enriched customer extension atts as a generic placeholder for new values not in the core schema of the XDM event",
                      "unevaluatedProperties": false,
                      "properties": {
                        "Atts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "required": [
                                "Code",
                                "Value"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                                },
                                "CodeShort": {
                                  "type": "string",
                                  "description": "The leaf element of 'Code'"
                                },
                                "Name": {
                                  "type": "string",
                                  "description": "The name of the att"
                                },
                                "Value": {
                                  "type": "string",
                                  "description": "The value of the att"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The desc of the att"
                                },
                                "SourceSystem": {
                                  "type": "string",
                                  "description": "The source system this att is from"
                                },
                                "EventId": {
                                  "type": "string",
                                  "description": "The Xfuze EventId that was the source of this data"
                                },
                                "AsOf": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The timestamp at which the status was valid 'as of', if known and applicable"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "LabelAtts"
                  ]
                },
                "DqTestAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/DqTestAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/DqTestAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "description": "The Xfuze derived / enriched attributes that define the schema and transforms and metadata used in generating this transform",
                      "unevaluatedProperties": false,
                      "properties": {
                        "DqTestAtts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "unevaluatedProperties": false,
                            "properties": {
                              "TestId": {
                                "type": "null"
                              },
                              "TestName": {
                                "type": "null"
                              },
                              "TestType": {
                                "type": "null"
                              },
                              "TestVersion": {
                                "type": "null"
                              },
                              "ActualResultCode": {
                                "type": "null"
                              },
                              "ActualResultValue": {
                                "type": "null"
                              },
                              "ExpectedResultCode": {
                                "type": "null"
                              },
                              "ExpectedResultValue": {
                                "type": "null"
                              },
                              "Note": {
                                "type": "null"
                              },
                              "SeverityCode": {
                                "type": "null"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "DqTestAtts"
                  ]
                },
                "ReplayAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/ReplayAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/ReplayAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "description": "The Xfuze derived / enriched attributes that define the schema and transforms and metadata used in generating this transform",
                      "unevaluatedProperties": false,
                      "properties": {
                        "IsReplayed": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "ReplayStatusCode": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "ReplayStatusReason": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "ReplayCount": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "LastEventId": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "LastEventOccurredTimestampUTC": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "Origin": {
                      "type": "object",
                      "description": "The 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
                      "unevaluatedProperties": false,
                      "properties": {
                        "IsReplayed": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "ReplayStatusCode": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "ReplayStatusReason": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "ReplayCount": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "LastEventId": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "LastEventOccurredTimestampUTC": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                },
                "ExtensionAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/ExtensionAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/ExtensionAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "ExtensionAtts": {
                      "type": "object",
                      "description": "The Xfuze derived / enriched customer extension atts as a generic placeholder for new values not in the core schema of the XDM event",
                      "unevaluatedProperties": false,
                      "properties": {
                        "Atts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "required": [
                                "Code",
                                "Value"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                                },
                                "CodeShort": {
                                  "type": "string",
                                  "description": "The leaf element of 'Code'"
                                },
                                "Name": {
                                  "type": "string",
                                  "description": "The name of the att"
                                },
                                "Value": {
                                  "type": "string",
                                  "description": "The value of the att"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The desc of the att"
                                },
                                "SourceSystem": {
                                  "type": "string",
                                  "description": "The source system this att is from"
                                },
                                "EventId": {
                                  "type": "string",
                                  "description": "The Xfuze EventId that was the source of this data"
                                },
                                "AsOf": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The timestamp at which the status was valid 'as of', if known and applicable"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "ExtensionAtts"
                  ]
                }
              },
              "required": [
                "EventAtts",
                "EntityAtts",
                "TimeAtts",
                "IngestAtts",
                "PrivacyAtts",
                "PayloadAtts"
              ]
            }
          }
        },
        {
          "required": [
            "EventId",
            "EventName",
            "EventOccurredTimestampUTC",
            "EventOccurredTimestampLocal",
            "EventMetadata"
          ]
        }
      ]
    },
    {
      "properties": {
        "DomainEvent": {
          "type": "object",
          "required": [
            "TriggerEntity"
          ],
          "unevaluatedProperties": false,
          "properties": {
            "TriggerEntity": {
              "type": "object",
              "unevaluatedProperties": false,
              "allOf": [
                {
                  "properties": {
                    "EntityId": {
                      "type": "string",
                      "description": "The (required) globally unique synthetic Xfuze Id for the entity instance this event is related to and whose payload is the subject of change, unique across all entities. Typically of the format [EntityType::EntitySubType]_[SystemCode]_[RawEntityId] where RawEntityId can be composed of 1 or more source fields to create singular uniqueness e.g SalesOrderLine::Return_Hybris_8106008620_RET1"
                    },
                    "EntityType": {
                      "type": "string",
                      "description": "The (required) entity type, allowing for a typing system (top level) for entities, where the type is sourced from the master Xfuze control list e.g SalesOrderLine"
                    },
                    "EntitySubType": {
                      "type": "string",
                      "description": "An (optional) entity subtype, allowing for further, more refined typing of the core type for accuracy of interpretation e.g ReturnLine, CancelLine, VoidLine etc"
                    },
                    "ParentEntityId": {
                      "type": "string",
                      "description": "An (required) canonical Xfuze parent entity Id, where there is a natural parent a level above, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
                    },
                    "ParentEntityType": {
                      "type": "string",
                      "description": "An (required) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                    },
                    "CompositeEntityId": {
                      "type": "string",
                      "description": "An (optional) canonical Xfuze parent entity Id, where there is a natural 'composition' and containing parent, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
                    },
                    "CompositeEntityType": {
                      "type": "string",
                      "description": "An (optional) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                    }
                  },
                  "required": [
                    "EntityId",
                    "EntityType",
                    "ParentEntityId",
                    "ParentEntityType",
                    "CompositeEntityId",
                    "CompositeEntityType"
                  ]
                },
                {
                  "properties": {
                    "SalesOrder": {
                      "type": "object",
                      "unevaluatedProperties": false,
                      "allOf": [
                        {
                          "type": "object",
                          "allOf": [
                            {
                              "properties": {
                                "EntityId": {
                                  "type": "string",
                                  "description": "The (required) globally unique synthetic Xfuze Id for the entity instance this event is related to and whose payload is the subject of change, unique across all entities. Typically of the format [EntityType::EntitySubType]_[SystemCode]_[RawEntityId] where RawEntityId can be composed of 1 or more source fields to create singular uniqueness e.g SalesOrderLine::Return_Hybris_8106008620_RET1"
                                },
                                "EntityType": {
                                  "type": "string",
                                  "description": "The (required) entity type, allowing for a typing system (top level) for entities, where the type is sourced from the master Xfuze control list e.g SalesOrderLine"
                                },
                                "EntitySubType": {
                                  "type": "string",
                                  "description": "An (optional) entity subtype, allowing for further, more refined typing of the core type for accuracy of interpretation e.g ReturnLine, CancelLine, VoidLine etc"
                                },
                                "ParentEntityId": {
                                  "type": "string",
                                  "description": "An (required) canonical Xfuze parent entity Id, where there is a natural parent a level above, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
                                },
                                "ParentEntityType": {
                                  "type": "string",
                                  "description": "An (required) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                                },
                                "CompositeEntityId": {
                                  "type": "string",
                                  "description": "An (optional) canonical Xfuze parent entity Id, where there is a natural 'composition' and containing parent, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
                                },
                                "CompositeEntityType": {
                                  "type": "string",
                                  "description": "An (optional) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                                }
                              },
                              "required": [
                                "EntityId",
                                "EntityType",
                                "ParentEntityId",
                                "ParentEntityType",
                                "CompositeEntityId",
                                "CompositeEntityType"
                              ]
                            },
                            {
                              "properties": {
                                "XRefIds": {
                                  "description": "The list of cross reference lookups, i.e all the ways to look up this entity by the various data points, both in canonical Ids and system specific ones",
                                  "type": "array",
                                  "minItems": 1,
                                  "items": {
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "Id": {
                                        "type": "string"
                                      },
                                      "SystemCode": {
                                        "type": "string"
                                      },
                                      "Code": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "Times": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "anyOf": [
                                      {
                                        "required": [
                                          "DateId",
                                          "UTC",
                                          "Millis"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "DateId",
                                          "Local",
                                          "TimeZone"
                                        ]
                                      }
                                    ],
                                    "properties": {
                                      "DateId": {
                                        "type": "string",
                                        "description": "The Xfuze Date dim Id e.g Dates_20231001"
                                      },
                                      "HourId": {
                                        "type": "string",
                                        "description": "The Xfuze hour dim Id e.g Hours_2023100112"
                                      },
                                      "UTC": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "An Xfuze timestamp represented in UTC e.g 2023-01-12T12:03:00.000+0000"
                                      },
                                      "Local": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "An Xfuze timestamp represented in local time e.g 2023-01-12T13:03:00.000+0100"
                                      },
                                      "PartyLocal": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "An Xfuze timestamp represented in party local time e.g 2023-01-12T13:03:00.000+0100"
                                      },
                                      "Millis": {
                                        "type": "number",
                                        "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                                      },
                                      "TimeZone": {
                                        "type": "string",
                                        "description": "The related time zone"
                                      }
                                    }
                                  }
                                },
                                "Status": {
                                  "type": "object",
                                  "required": [
                                    "Code"
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "Class": {
                                      "type": "string",
                                      "description": "The class of the status e.g Retail, Hire, TailorMe"
                                    },
                                    "Code": {
                                      "type": "string",
                                      "description": "The unique code for the status e.g ProcessingStatus"
                                    },
                                    "Desc": {
                                      "type": "string",
                                      "description": "The description for the status e.g ProcessingStatus"
                                    },
                                    "SeqNo": {
                                      "type": "number",
                                      "description": "The sequence number of this status in relation to all the possible values in terms of time order e.g 2"
                                    },
                                    "ReasonCode": {
                                      "type": "string",
                                      "description": "A reason code for the status being in this state e.g Faulty Product"
                                    },
                                    "ReasonDesc": {
                                      "type": "string",
                                      "description": "A reason description for the status being in this state"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of this data"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp at which the price was valid 'as of', if known and applicable"
                                    }
                                  }
                                },
                                "Type": {
                                  "type": "object",
                                  "required": [
                                    "Code"
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "Class": {
                                      "type": "string"
                                    },
                                    "Code": {
                                      "type": "string"
                                    },
                                    "Desc": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "required": [
                                "XRefIds",
                                "Times",
                                "Status",
                                "Type"
                              ]
                            }
                          ]
                        },
                        {
                          "properties": {
                            "Lines": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "unevaluatedProperties": false,
                                "allOf": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "properties": {
                                          "EntityId": {
                                            "type": "string",
                                            "description": "The (required) globally unique synthetic Xfuze Id for the entity instance this event is related to and whose payload is the subject of change, unique across all entities. Typically of the format [EntityType::EntitySubType]_[SystemCode]_[RawEntityId] where RawEntityId can be composed of 1 or more source fields to create singular uniqueness e.g SalesOrderLine::Return_Hybris_8106008620_RET1"
                                          },
                                          "EntityType": {
                                            "type": "string",
                                            "description": "The (required) entity type, allowing for a typing system (top level) for entities, where the type is sourced from the master Xfuze control list e.g SalesOrderLine"
                                          },
                                          "EntitySubType": {
                                            "type": "string",
                                            "description": "An (optional) entity subtype, allowing for further, more refined typing of the core type for accuracy of interpretation e.g ReturnLine, CancelLine, VoidLine etc"
                                          },
                                          "ParentEntityId": {
                                            "type": "string",
                                            "description": "An (required) canonical Xfuze parent entity Id, where there is a natural parent a level above, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
                                          },
                                          "ParentEntityType": {
                                            "type": "string",
                                            "description": "An (required) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                                          },
                                          "CompositeEntityId": {
                                            "type": "string",
                                            "description": "An (optional) canonical Xfuze parent entity Id, where there is a natural 'composition' and containing parent, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
                                          },
                                          "CompositeEntityType": {
                                            "type": "string",
                                            "description": "An (optional) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                                          }
                                        },
                                        "required": [
                                          "EntityId",
                                          "EntityType",
                                          "ParentEntityId",
                                          "ParentEntityType",
                                          "CompositeEntityId",
                                          "CompositeEntityType"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "XRefIds": {
                                            "description": "The list of cross reference lookups, i.e all the ways to look up this entity by the various data points, both in canonical Ids and system specific ones",
                                            "type": "array",
                                            "minItems": 1,
                                            "items": {
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "Id": {
                                                  "type": "string"
                                                },
                                                "SystemCode": {
                                                  "type": "string"
                                                },
                                                "Code": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "Times": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "anyOf": [
                                                {
                                                  "required": [
                                                    "DateId",
                                                    "UTC",
                                                    "Millis"
                                                  ]
                                                },
                                                {
                                                  "required": [
                                                    "DateId",
                                                    "Local",
                                                    "TimeZone"
                                                  ]
                                                }
                                              ],
                                              "properties": {
                                                "DateId": {
                                                  "type": "string",
                                                  "description": "The Xfuze Date dim Id e.g Dates_20231001"
                                                },
                                                "HourId": {
                                                  "type": "string",
                                                  "description": "The Xfuze hour dim Id e.g Hours_2023100112"
                                                },
                                                "UTC": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "An Xfuze timestamp represented in UTC e.g 2023-01-12T12:03:00.000+0000"
                                                },
                                                "Local": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "An Xfuze timestamp represented in local time e.g 2023-01-12T13:03:00.000+0100"
                                                },
                                                "PartyLocal": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "An Xfuze timestamp represented in party local time e.g 2023-01-12T13:03:00.000+0100"
                                                },
                                                "Millis": {
                                                  "type": "number",
                                                  "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                                                },
                                                "TimeZone": {
                                                  "type": "string",
                                                  "description": "The related time zone"
                                                }
                                              }
                                            }
                                          },
                                          "Status": {
                                            "type": "object",
                                            "required": [
                                              "Code"
                                            ],
                                            "unevaluatedProperties": false,
                                            "properties": {
                                              "Class": {
                                                "type": "string",
                                                "description": "The class of the status e.g Retail, Hire, TailorMe"
                                              },
                                              "Code": {
                                                "type": "string",
                                                "description": "The unique code for the status e.g ProcessingStatus"
                                              },
                                              "Desc": {
                                                "type": "string",
                                                "description": "The description for the status e.g ProcessingStatus"
                                              },
                                              "SeqNo": {
                                                "type": "number",
                                                "description": "The sequence number of this status in relation to all the possible values in terms of time order e.g 2"
                                              },
                                              "ReasonCode": {
                                                "type": "string",
                                                "description": "A reason code for the status being in this state e.g Faulty Product"
                                              },
                                              "ReasonDesc": {
                                                "type": "string",
                                                "description": "A reason description for the status being in this state"
                                              },
                                              "EventId": {
                                                "type": "string",
                                                "description": "The Xfuze EventId that was the source of this data"
                                              },
                                              "AsOf": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "The timestamp at which the price was valid 'as of', if known and applicable"
                                              }
                                            }
                                          },
                                          "Type": {
                                            "type": "object",
                                            "required": [
                                              "Code"
                                            ],
                                            "unevaluatedProperties": false,
                                            "properties": {
                                              "Class": {
                                                "type": "string"
                                              },
                                              "Code": {
                                                "type": "string"
                                              },
                                              "Desc": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "XRefIds",
                                          "Times",
                                          "Status",
                                          "Type"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "properties": {
                                      "SalesOrderNumber": {
                                        "type": "string"
                                      },
                                      "SalesOrderLineNumber": {
                                        "type": "string"
                                      },
                                      "SalesOrderLineProductNumber": {
                                        "type": "string"
                                      },
                                      "Channels": {
                                        "type": "object",
                                        "unevaluatedProperties": false,
                                        "properties": {
                                          "SalesChannel": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "object",
                                              "required": [
                                                "ChannelCode"
                                              ],
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "ChannelId": {
                                                  "type": "string",
                                                  "description": "The canonical (synthetic) SDV channel id (top level STRING for CK) e.g Channel_[TYPE]_[ChannelCode]"
                                                },
                                                "ChannelCode": {
                                                  "type": "string",
                                                  "description": "The unique code of the channel e.g Online, Retail"
                                                },
                                                "ChannelPurpose": {
                                                  "type": "string",
                                                  "description": "The purpose of the channel usage e.g Sales, Return, Collection, Support"
                                                },
                                                "ChannelType": {
                                                  "type": "string",
                                                  "description": "The class e.g Selling and type e.g Digital, Retail, Partner of the channel"
                                                },
                                                "ChannelName": {
                                                  "type": "string",
                                                  "description": "The name of the channel e.g John Lewis Concession"
                                                },
                                                "ChannelInstanceId": {
                                                  "type": "string",
                                                  "description": "The id of the channel instance e.g store number"
                                                },
                                                "CountryCode2": {
                                                  "type": "string",
                                                  "description": "The country where the channel was consumed through ISO 2 country code"
                                                },
                                                "CountryCode3": {
                                                  "type": "string",
                                                  "description": "The country where the channel was consumed through ISO 3 country code"
                                                },
                                                "ReasonCode": {
                                                  "type": "string",
                                                  "description": "The reason for this channel"
                                                },
                                                "ReasonDesc": {
                                                  "type": "string",
                                                  "description": "The desc for this channel"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of this data"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp at which the status was valid 'as of', if known and applicable"
                                                }
                                              }
                                            }
                                          },
                                          "ReturnChannel": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "object",
                                              "required": [
                                                "ChannelCode"
                                              ],
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "ChannelId": {
                                                  "type": "string",
                                                  "description": "The canonical (synthetic) SDV channel id (top level STRING for CK) e.g Channel_[TYPE]_[ChannelCode]"
                                                },
                                                "ChannelCode": {
                                                  "type": "string",
                                                  "description": "The unique code of the channel e.g Online, Retail"
                                                },
                                                "ChannelPurpose": {
                                                  "type": "string",
                                                  "description": "The purpose of the channel usage e.g Sales, Return, Collection, Support"
                                                },
                                                "ChannelType": {
                                                  "type": "string",
                                                  "description": "The class e.g Selling and type e.g Digital, Retail, Partner of the channel"
                                                },
                                                "ChannelName": {
                                                  "type": "string",
                                                  "description": "The name of the channel e.g John Lewis Concession"
                                                },
                                                "ChannelInstanceId": {
                                                  "type": "string",
                                                  "description": "The id of the channel instance e.g store number"
                                                },
                                                "CountryCode2": {
                                                  "type": "string",
                                                  "description": "The country where the channel was consumed through ISO 2 country code"
                                                },
                                                "CountryCode3": {
                                                  "type": "string",
                                                  "description": "The country where the channel was consumed through ISO 3 country code"
                                                },
                                                "ReasonCode": {
                                                  "type": "string",
                                                  "description": "The reason for this channel"
                                                },
                                                "ReasonDesc": {
                                                  "type": "string",
                                                  "description": "The desc for this channel"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of this data"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp at which the status was valid 'as of', if known and applicable"
                                                }
                                              }
                                            }
                                          },
                                          "ExchangeChannel": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "object",
                                              "required": [
                                                "ChannelCode"
                                              ],
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "ChannelId": {
                                                  "type": "string",
                                                  "description": "The canonical (synthetic) SDV channel id (top level STRING for CK) e.g Channel_[TYPE]_[ChannelCode]"
                                                },
                                                "ChannelCode": {
                                                  "type": "string",
                                                  "description": "The unique code of the channel e.g Online, Retail"
                                                },
                                                "ChannelPurpose": {
                                                  "type": "string",
                                                  "description": "The purpose of the channel usage e.g Sales, Return, Collection, Support"
                                                },
                                                "ChannelType": {
                                                  "type": "string",
                                                  "description": "The class e.g Selling and type e.g Digital, Retail, Partner of the channel"
                                                },
                                                "ChannelName": {
                                                  "type": "string",
                                                  "description": "The name of the channel e.g John Lewis Concession"
                                                },
                                                "ChannelInstanceId": {
                                                  "type": "string",
                                                  "description": "The id of the channel instance e.g store number"
                                                },
                                                "CountryCode2": {
                                                  "type": "string",
                                                  "description": "The country where the channel was consumed through ISO 2 country code"
                                                },
                                                "CountryCode3": {
                                                  "type": "string",
                                                  "description": "The country where the channel was consumed through ISO 3 country code"
                                                },
                                                "ReasonCode": {
                                                  "type": "string",
                                                  "description": "The reason for this channel"
                                                },
                                                "ReasonDesc": {
                                                  "type": "string",
                                                  "description": "The desc for this channel"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of this data"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp at which the status was valid 'as of', if known and applicable"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "Prices": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "anyOf": [
                                            {
                                              "required": [
                                                "BCY"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "LCY"
                                              ]
                                            }
                                          ],
                                          "properties": {
                                            "BCY": {
                                              "type": "object",
                                              "anyOf": [
                                                {
                                                  "required": [
                                                    "ExTax"
                                                  ]
                                                },
                                                {
                                                  "required": [
                                                    "IncTax"
                                                  ]
                                                }
                                              ],
                                              "properties": {
                                                "ExTax": {
                                                  "type": [
                                                    "number",
                                                    "null"
                                                  ]
                                                },
                                                "IncTax": {
                                                  "type": [
                                                    "number",
                                                    "null"
                                                  ]
                                                },
                                                "Tax": {
                                                  "type": [
                                                    "number",
                                                    "null"
                                                  ]
                                                },
                                                "Localisation": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "Currency": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of this data"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp at which the price was valid 'as of', if known and applicable"
                                                }
                                              }
                                            },
                                            "LCY": {
                                              "type": "object",
                                              "anyOf": [
                                                {
                                                  "required": [
                                                    "ExTax"
                                                  ]
                                                },
                                                {
                                                  "required": [
                                                    "IncTax"
                                                  ]
                                                }
                                              ],
                                              "properties": {
                                                "ExTax": {
                                                  "type": [
                                                    "number",
                                                    "null"
                                                  ]
                                                },
                                                "IncTax": {
                                                  "type": [
                                                    "number",
                                                    "null"
                                                  ]
                                                },
                                                "Tax": {
                                                  "type": [
                                                    "number",
                                                    "null"
                                                  ]
                                                },
                                                "Localisation": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "Currency": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of this data"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp at which the price was valid 'as of', if known and applicable"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "Totals": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "anyOf": [
                                            {
                                              "required": [
                                                "BCY"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "LCY"
                                              ]
                                            }
                                          ],
                                          "properties": {
                                            "BCY": {
                                              "type": "object",
                                              "anyOf": [
                                                {
                                                  "required": [
                                                    "ExTax"
                                                  ]
                                                },
                                                {
                                                  "required": [
                                                    "IncTax"
                                                  ]
                                                }
                                              ],
                                              "properties": {
                                                "ExTax": {
                                                  "type": [
                                                    "number",
                                                    "null"
                                                  ]
                                                },
                                                "IncTax": {
                                                  "type": [
                                                    "number",
                                                    "null"
                                                  ]
                                                },
                                                "Tax": {
                                                  "type": [
                                                    "number",
                                                    "null"
                                                  ]
                                                },
                                                "Localisation": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "Currency": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of this data"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp at which the price was valid 'as of', if known and applicable"
                                                }
                                              }
                                            },
                                            "LCY": {
                                              "type": "object",
                                              "anyOf": [
                                                {
                                                  "required": [
                                                    "ExTax"
                                                  ]
                                                },
                                                {
                                                  "required": [
                                                    "IncTax"
                                                  ]
                                                }
                                              ],
                                              "properties": {
                                                "ExTax": {
                                                  "type": [
                                                    "number",
                                                    "null"
                                                  ]
                                                },
                                                "IncTax": {
                                                  "type": [
                                                    "number",
                                                    "null"
                                                  ]
                                                },
                                                "Tax": {
                                                  "type": [
                                                    "number",
                                                    "null"
                                                  ]
                                                },
                                                "Localisation": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "Currency": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of this data"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp at which the price was valid 'as of', if known and applicable"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "Taxes": {
                                        "type": "object",
                                        "properties": {
                                          "SalesTax": {
                                            "type": "object",
                                            "unevaluatedProperties": false,
                                            "properties": {
                                              "TaxType": {
                                                "type": "object",
                                                "properties": {
                                                  "Code": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "Tax": {
                                                "type": "object",
                                                "properties": {
                                                  "Code": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "required": [
        "DomainEvent"
      ]
    }
  ]
}