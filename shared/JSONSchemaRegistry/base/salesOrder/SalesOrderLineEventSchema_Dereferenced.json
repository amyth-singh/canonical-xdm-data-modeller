{
  "type": "object",
  "unevaluatedProperties": false,
  "allOf": [
    {
      "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader",
      "title": "EventHeader",
      "description": "XDM Schema for the common event component 'EventHeader'",
      "type": "object",
      "allOf": [
        {
          "properties": {
            "EntityId": {
              "type": "string",
              "description": "The (required) globally unique synthetic Xfuze Id for the entity instance this event is related to and whose payload is the subject of change, unique across all entities. Typically of the format [EntityType::EntitySubType]_[SystemCode]_[RawEntityId] where RawEntityId can be composed of 1 or more source fields to create singular uniqueness e.g SalesOrderLine::Return_Hybris_8106008620_RET1"
            },
            "EntityType": {
              "type": "string",
              "description": "The (required) entity type, allowing for a typing system (top level) for entities, where the type is sourced from the master Xfuze control list e.g SalesOrderLine"
            },
            "EntitySubType": {
              "type": "string",
              "description": "An (optional) entity subtype, allowing for further, more refined typing of the core type for accuracy of interpretation e.g ReturnLine, CancelLine, VoidLine etc"
            },
            "ParentEntityId": {
              "type": "string",
              "description": "An (required) canonical Xfuze parent entity Id, where there is a natural parent a level above, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
            },
            "ParentEntityType": {
              "type": "string",
              "description": "An (required) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
            },
            "CompositeEntityId": {
              "type": "string",
              "description": "An (optional) canonical Xfuze parent entity Id, where there is a natural 'composition' and containing parent, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
            },
            "CompositeEntityType": {
              "type": "string",
              "description": "An (optional) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
            }
          },
          "required": [
            "EntityId",
            "EntityType",
            "ParentEntityId",
            "ParentEntityType",
            "CompositeEntityId",
            "CompositeEntityType"
          ]
        },
        {
          "properties": {
            "EventId": {
              "type": "string",
              "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata for business definition"
            },
            "EventName": {
              "type": "string",
              "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata for business definition"
            },
            "EventOccurredDateUTC": {
              "type": "string",
              "format": "date-time",
              "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata for business definition"
            },
            "EventOccurredDateLocal": {
              "type": "string",
              "format": "date-time",
              "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata for business definition"
            },
            "EventOccurredTimestampUTC": {
              "type": "string",
              "format": "date-time",
              "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata for business definition"
            },
            "EventOccurredTimestampLocal": {
              "type": "string",
              "format": "date-time",
              "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata for business definition"
            },
            "EventOccurredTimestampPartyLocal": {
              "type": "string",
              "format": "date-time",
              "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata for business definition"
            },
            "EventMetadata": {
              "description": "Core event fields at top level to enable storage and query optimisations in physical systems (e.g PK/CK/ and various indexes for access patterns) that require these to be top level only (e.g BQ) - refer core definition from EventMetadata for business definition",
              "$id": "https://xfuze.io/xdm/schema/components/event/common/EventMetadata",
              "title": "EventMetadata",
              "type": "object",
              "unevaluatedProperties": false,
              "properties": {
                "EventAtts": {
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/EventAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/EventAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "description": "The (required) Xfuze derived / enriched attributes that define the context of the event itself",
                      "unevaluatedProperties": false,
                      "properties": {
                        "EventId": {
                          "type": "string",
                          "description": "The (required) globally unique synthetic Xfuze ID for this event instance, unique across all events. Typically of the format [EventName]_[EntityId]_[EventUniqueWatermark] e.g SalesOrderItemsDelivered_SalesOrderDelivery_Hybris_8106008620_JVGL06053_2023-01-12T12:03:00+00:00"
                        },
                        "EventCategory": {
                          "type": "string",
                          "description": "The (required) event category of this domain event (refer controlled list of allowed values) e.g SalesOrder"
                        },
                        "EventName": {
                          "type": "string",
                          "description": "The (required) event name defines the 'type' of the event (in business terms) and key for routing to specific event handlers (refer to controlled list of allowed values per entity type).  Format is [EntityType][VerbPastTense] e.g SalesOrderItemsDelivered"
                        },
                        "EventClass": {
                          "type": "string",
                          "description": "The class of the event as defined by where this event instance was generated e.g TriggerEvent",
                          "enum": [
                            "RawDataEvent",
                            "TriggerEvent",
                            "ProcessedEvent",
                            "DerivedEvent"
                          ]
                        },
                        "EventChangePattern": {
                          "type": "string",
                          "description": "The type of triggering data/change pattern of the source that resulted in this event e.g BusinessEvent",
                          "enum": [
                            "CDCEvent",
                            "FullSnapshot",
                            "BusinessEvent",
                            "NotificationEvent"
                          ]
                        },
                        "EventValueStream": {
                          "type": "string",
                          "description": "The retail value stream this event is related to e.g Order2Cash",
                          "enum": [
                            "Order2Cash",
                            "Return2Refund",
                            "Product2Offer",
                            "Purchase2Pay",
                            "Forecast2Stock",
                            "Issue2Resolution",
                            "Concept2Customer",
                            "Hire2Retire",
                            "Market2Lead",
                            "Lead2Conversion"
                          ]
                        },
                        "BizCapabilityL0": {
                          "type": "string",
                          "description": "The Level 0 (top) of Xiatech's Industry Specific Business Capability Model (i.e Retail BCM Model) e.g Sell"
                        },
                        "BizCapabilityL1": {
                          "type": "string",
                          "description": "The Level 1 (top) of Xiatech's Industry Specific Business Capability Model (i.e Retail BCM Model) e.g Sell & Serve"
                        },
                        "BizCapabilityL2": {
                          "type": "string",
                          "description": "The Level 2 (top) of Xiatech's Industry Specific Business Capability Model (i.e Retail BCM Model) e.g Process Returns & Exchanges"
                        },
                        "ClientCode": {
                          "type": "string",
                          "description": "An (required) client code used for event ownership and billing attribution where required e.g GSR"
                        },
                        "EnvCode": {
                          "type": "string",
                          "description": "The Xfuze env this event was generated in e.g prd",
                          "enum": [
                            "dev",
                            "test",
                            "uat",
                            "staging",
                            "pre-prd",
                            "prd"
                          ]
                        },
                        "Note": {
                          "type": "string",
                          "description": "An (optional) free form test field to add some comment to the note, typically for testing purposes e.g (Test case name, or a prod smoke test)"
                        },
                        "IsDerivedEvent": {
                          "type": "string",
                          "description": "String bool indicator for whether this event is a derived one (i.e derived from a processedEvent such as 'CustomerLastNameChanged' derived off 'CustomerProfileUpdated' e.g 'N'",
                          "enum": [
                            "Y",
                            "N",
                            "U"
                          ]
                        }
                      },
                      "required": [
                        "EventId",
                        "EventCategory",
                        "EventName",
                        "EventClass",
                        "EventChangePattern",
                        "ClientCode",
                        "EnvCode"
                      ]
                    },
                    "Origin": {
                      "type": "object",
                      "description": "The (required) 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
                      "unevaluatedProperties": false,
                      "properties": {
                        "EventId": {
                          "type": "string",
                          "description": "Raw form (optional) of the input eventId from the source, used in transforming to 'Xfuze' representations e.g d1d982ef-6dc6-47bb-80fb-2eaaf572deca"
                        },
                        "EventName": {
                          "type": "string",
                          "description": "Raw form (optional) of the input eventName from the source, used in transforming to 'Xfuze' representations e.g ORDER_PARCEL_DELIVERED"
                        },
                        "SourceSystem": {
                          "type": "string",
                          "description": "The (required) Xfuze system code of the external source system that is the genesis of the raw data trigger e.g Hybris"
                        },
                        "SourceSubSystem": {
                          "type": "string",
                          "description": "The (optional) Xfuze subsystem system code of the external (sub) source system that is the genesis of the raw data trigger e.g OrdersAPI"
                        },
                        "SourceFormatType": {
                          "type": "string",
                          "description": "The (required) code of the data interchange format of the raw data e.g JSON",
                          "enum": [
                            "JSON",
                            "CSV",
                            "XML",
                            "YAML",
                            "BINARY",
                            "EXCEL",
                            "Other"
                          ]
                        },
                        "CorrelationId": {
                          "type": "string",
                          "description": "The (optional) external correlation Id as provided by the source (often, but not always, the same as the rawEventId) e.g 3e35cec2-050d-4334-b564-5f1ce704a5f8"
                        },
                        "EnvCode": {
                          "type": "string",
                          "description": "The external client env the raw data was generated from in e.g production"
                        }
                      },
                      "required": [
                        "SourceSystem",
                        "SourceFormatType"
                      ]
                    }
                  },
                  "required": [
                    "Xfuze",
                    "Origin"
                  ]
                },
                "EntityAtts": {
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "description": "The (required) Xfuze derived / enriched attributes that define the context of the entity the event is changing / notifying on",
                      "unevaluatedProperties": false,
                      "properties": {
                        "EntityId": {
                          "type": "string",
                          "description": "The (required) globally unique synthetic Xfuze Id for the entity instance this event is related to and whose payload is the subject of change, unique across all entities. Typically of the format [EntityType::EntitySubType]_[SystemCode]_[RawEntityId] where RawEntityId can be composed of 1 or more source fields to create singular uniqueness e.g SalesOrderLine::Return_Hybris_8106008620_RET1"
                        },
                        "EntityType": {
                          "type": "string",
                          "description": "The (required) entity type, allowing for a typing system (top level) for entities, where the type is sourced from the master Xfuze control list e.g SalesOrderLine"
                        },
                        "EntitySubType": {
                          "type": "string",
                          "description": "An (optional) entity subtype, allowing for further, more refined typing of the core type for accuracy of interpretation e.g ReturnLine, CancelLine, VoidLine etc"
                        },
                        "EntityVariation": {
                          "type": "string",
                          "description": "An (optional) instance variation of the type of entity and is contextual to the type of entity under change e.g RetailTransaction"
                        },
                        "EntityDomain": {
                          "type": "string",
                          "description": "The (required) core entity domain, sourced from the master Xfuze control list e.g SalesOrder",
                          "enum": [
                            "Customer",
                            "Product",
                            "Sales",
                            "SupplyChain",
                            "Inventory",
                            "Marketing",
                            "DigitalActivity",
                            "Finance",
                            "Analytics",
                            "Common",
                            "Other"
                          ]
                        },
                        "EntityClass": {
                          "type": "string",
                          "description": "The (required) class of the entity in this event, representing the levelling / granularity of the entity state being transferred and contained e.g Composite (multi entity composite)",
                          "enum": [
                            "Composite",
                            "Base",
                            "Raw",
                            "Analytical",
                            "Notification"
                          ]
                        },
                        "ParentEntityId": {
                          "type": "string",
                          "description": "An (required) canonical Xfuze parent entity Id, where there is a natural 'composition' and containing parent, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
                        },
                        "ParentEntityType": {
                          "type": "string",
                          "description": "An (required) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                        },
                        "CompositeEntityId": {
                          "type": "string",
                          "description": "An (required) canonical Xfuze composite (root) entity Id, where there is a natural 'composition' and containing parent, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
                        },
                        "CompositeEntityType": {
                          "type": "string",
                          "description": "An (required) canonical Xfuze composite (root) entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                        },
                        "EntityStatusCode": {
                          "type": "string",
                          "description": "An (optional) canonical Xfuze entity status, often key for events and the state transition happening with the entity. e.g InProgress"
                        },
                        "EntityStatusDesc": {
                          "type": "string",
                          "description": "An (optional) canonical Xfuze entity status, often key for events and the state transition happening with the entity. e.g Line Processing In-Progress"
                        },
                        "IsSensitive": {
                          "type": "string",
                          "description": "e.g Y",
                          "enum": [
                            "Y",
                            "N",
                            "U"
                          ]
                        }
                      },
                      "required": [
                        "EntityId",
                        "EntityType",
                        "ParentEntityId",
                        "ParentEntityType",
                        "CompositeEntityId",
                        "CompositeEntityType",
                        "EntityDomain",
                        "IsSensitive"
                      ]
                    },
                    "Origin": {
                      "type": "object",
                      "description": "The (required) 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
                      "unevaluatedProperties": false,
                      "properties": {
                        "EntityId": {
                          "type": "string",
                          "description": "Raw form (required) of the input EntityId from the source, used in transforming to 'Xfuze' representations e.g 8106008620_RET1"
                        },
                        "ParentEntityId": {
                          "type": "string",
                          "description": "Raw form (optional) of the input EntityId from the source, used in transforming to 'Xfuze' representations e.g 8106008620"
                        },
                        "EntityStatusCode": {
                          "type": "string",
                          "description": "Raw form (optional) of the input EntityId from the source, used in transforming to 'Xfuze' representations e.g INPROGRESS"
                        }
                      },
                      "required": [
                        "EntityId"
                      ]
                    }
                  },
                  "required": [
                    "Xfuze",
                    "Origin"
                  ]
                },
                "TimeAtts": {
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/TimeAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/TimeAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "description": "The (required) Xfuze derived / enriched attributes that define the context of the time points (external / internal) related to the event is changing / notifying on",
                      "unevaluatedProperties": false,
                      "properties": {
                        "TimeZones": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "HomeTimeZone": {
                              "description": "A TimeZone object (required) representing the main 'home' timezone the client is and reports form",
                              "type": "object",
                              "required": [
                                "TimeZone"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "TimeZone": {
                                  "type": "string",
                                  "description": "The Time Zone e.g Europe/London"
                                },
                                "TimeZoneOffset": {
                                  "type": "string",
                                  "description": "UTC+01:00"
                                },
                                "TimeZoneExplicitCode": {
                                  "type": "string",
                                  "description": "Indicates whether the timeZone offset is explicit in the source (e.g +01:00) or implicit (e.g assumed to be +01:00, and thus reformatting work is needed to make explicit)",
                                  "enum": [
                                    "ExplicitOffsetInSource",
                                    "ImplicitOffsetNotInSource"
                                  ]
                                },
                                "Country": {
                                  "description": "The country of the timezone",
                                  "type": "object",
                                  "anyOf": [
                                    {
                                      "required": [
                                        "ISO2"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "ISO3"
                                      ]
                                    }
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "ISO2": {
                                      "type": "string",
                                      "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                    },
                                    "ISO3": {
                                      "type": "string",
                                      "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                    },
                                    "CountryCode": {
                                      "type": "string",
                                      "description": "The canonical CountryCode (country-code) country code e.g 036"
                                    },
                                    "Name": {
                                      "type": "string",
                                      "description": "The canonical (official) 'Name' of the country e.g Australia"
                                    },
                                    "AltName": {
                                      "type": "string",
                                      "description": "An alternate name for the country"
                                    },
                                    "RegionCode": {
                                      "type": "string",
                                      "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                    },
                                    "RegionName": {
                                      "type": "string",
                                      "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                    },
                                    "SubRegionCode": {
                                      "type": "string",
                                      "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                    },
                                    "SubRegionName": {
                                      "type": "string",
                                      "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                    },
                                    "IntermediateRegionCode": {
                                      "type": "string",
                                      "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                    },
                                    "IntermediateRegionName": {
                                      "type": "string",
                                      "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                    },
                                    "Coordinates": {
                                      "description": "The canonical Coordinates of the country (canonical from google)",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Latitude": {
                                          "type": "number",
                                          "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                          "minimum": -90,
                                          "maximum": 90
                                        },
                                        "Longitude": {
                                          "type": "number",
                                          "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                          "minimum": -180,
                                          "maximum": 180
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "Latitude",
                                        "Longitude"
                                      ]
                                    },
                                    "PrimaryLanguage": {
                                      "type": "string",
                                      "description": "The canonical Primary Language of the country"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency Code of the country (canonical from google)",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "IsEuropeanCountry": {
                                      "type": "string",
                                      "description": "Is this country an european one? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "EventTimeZone": {
                              "description": "A TimeZone object (required) representing the main 'event' timezone i.e event source could represent all times in UTC.  Can be same as HomeTimeZone but also different",
                              "type": "object",
                              "required": [
                                "TimeZone"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "TimeZone": {
                                  "type": "string",
                                  "description": "The Time Zone e.g Europe/London"
                                },
                                "TimeZoneOffset": {
                                  "type": "string",
                                  "description": "UTC+01:00"
                                },
                                "TimeZoneExplicitCode": {
                                  "type": "string",
                                  "description": "Indicates whether the timeZone offset is explicit in the source (e.g +01:00) or implicit (e.g assumed to be +01:00, and thus reformatting work is needed to make explicit)",
                                  "enum": [
                                    "ExplicitOffsetInSource",
                                    "ImplicitOffsetNotInSource"
                                  ]
                                },
                                "Country": {
                                  "description": "The country of the timezone",
                                  "type": "object",
                                  "anyOf": [
                                    {
                                      "required": [
                                        "ISO2"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "ISO3"
                                      ]
                                    }
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "ISO2": {
                                      "type": "string",
                                      "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                    },
                                    "ISO3": {
                                      "type": "string",
                                      "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                    },
                                    "CountryCode": {
                                      "type": "string",
                                      "description": "The canonical CountryCode (country-code) country code e.g 036"
                                    },
                                    "Name": {
                                      "type": "string",
                                      "description": "The canonical (official) 'Name' of the country e.g Australia"
                                    },
                                    "AltName": {
                                      "type": "string",
                                      "description": "An alternate name for the country"
                                    },
                                    "RegionCode": {
                                      "type": "string",
                                      "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                    },
                                    "RegionName": {
                                      "type": "string",
                                      "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                    },
                                    "SubRegionCode": {
                                      "type": "string",
                                      "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                    },
                                    "SubRegionName": {
                                      "type": "string",
                                      "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                    },
                                    "IntermediateRegionCode": {
                                      "type": "string",
                                      "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                    },
                                    "IntermediateRegionName": {
                                      "type": "string",
                                      "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                    },
                                    "Coordinates": {
                                      "description": "The canonical Coordinates of the country (canonical from google)",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Latitude": {
                                          "type": "number",
                                          "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                          "minimum": -90,
                                          "maximum": 90
                                        },
                                        "Longitude": {
                                          "type": "number",
                                          "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                          "minimum": -180,
                                          "maximum": 180
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "Latitude",
                                        "Longitude"
                                      ]
                                    },
                                    "PrimaryLanguage": {
                                      "type": "string",
                                      "description": "The canonical Primary Language of the country"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency Code of the country (canonical from google)",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "IsEuropeanCountry": {
                                      "type": "string",
                                      "description": "Is this country an european one? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "PartyTimeZone": {
                              "description": "A TimeZone object (optional) representing the contextual 'party' timezone associated with the party (e.b customer) in the context of the event (e.g order placed timezone)",
                              "type": "object",
                              "required": [
                                "TimeZone"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "TimeZone": {
                                  "type": "string",
                                  "description": "The Time Zone e.g Europe/London"
                                },
                                "TimeZoneOffset": {
                                  "type": "string",
                                  "description": "UTC+01:00"
                                },
                                "TimeZoneExplicitCode": {
                                  "type": "string",
                                  "description": "Indicates whether the timeZone offset is explicit in the source (e.g +01:00) or implicit (e.g assumed to be +01:00, and thus reformatting work is needed to make explicit)",
                                  "enum": [
                                    "ExplicitOffsetInSource",
                                    "ImplicitOffsetNotInSource"
                                  ]
                                },
                                "Country": {
                                  "description": "The country of the timezone",
                                  "type": "object",
                                  "anyOf": [
                                    {
                                      "required": [
                                        "ISO2"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "ISO3"
                                      ]
                                    }
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "ISO2": {
                                      "type": "string",
                                      "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                    },
                                    "ISO3": {
                                      "type": "string",
                                      "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                    },
                                    "CountryCode": {
                                      "type": "string",
                                      "description": "The canonical CountryCode (country-code) country code e.g 036"
                                    },
                                    "Name": {
                                      "type": "string",
                                      "description": "The canonical (official) 'Name' of the country e.g Australia"
                                    },
                                    "AltName": {
                                      "type": "string",
                                      "description": "An alternate name for the country"
                                    },
                                    "RegionCode": {
                                      "type": "string",
                                      "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                    },
                                    "RegionName": {
                                      "type": "string",
                                      "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                    },
                                    "SubRegionCode": {
                                      "type": "string",
                                      "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                    },
                                    "SubRegionName": {
                                      "type": "string",
                                      "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                    },
                                    "IntermediateRegionCode": {
                                      "type": "string",
                                      "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                    },
                                    "IntermediateRegionName": {
                                      "type": "string",
                                      "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                    },
                                    "Coordinates": {
                                      "description": "The canonical Coordinates of the country (canonical from google)",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Latitude": {
                                          "type": "number",
                                          "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                          "minimum": -90,
                                          "maximum": 90
                                        },
                                        "Longitude": {
                                          "type": "number",
                                          "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                          "minimum": -180,
                                          "maximum": 180
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "Latitude",
                                        "Longitude"
                                      ]
                                    },
                                    "PrimaryLanguage": {
                                      "type": "string",
                                      "description": "The canonical Primary Language of the country"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency Code of the country (canonical from google)",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "IsEuropeanCountry": {
                                      "type": "string",
                                      "description": "Is this country an european one? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            }
                          },
                          "required": [
                            "HomeTimeZone",
                            "EventTimeZone"
                          ]
                        },
                        "Times": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "EventOccurredTimestamp": {
                              "description": "Time properties (required) representing the 'true' real-world time the event occurred (EOT) e.g orderPlaced time, (typically) sourced from.  If the DQ of the source is poor, fallback on system time (not great).  This should be the timestamp(s) to use for any analysis and operational handling e.g ordering",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "anyOf": [
                                {
                                  "required": [
                                    "DateId",
                                    "UTC",
                                    "Millis"
                                  ]
                                },
                                {
                                  "required": [
                                    "DateId",
                                    "Local",
                                    "TimeZone"
                                  ]
                                }
                              ],
                              "properties": {
                                "DateId": {
                                  "type": "string",
                                  "description": "The Xfuze Date dim Id e.g Date_20231001"
                                },
                                "HourId": {
                                  "type": "string",
                                  "description": "The Xfuze hour dim Id e.g Hour_2023100112"
                                },
                                "UTC": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in UTC e.g 2023-01-12T12:03:00.000+0000"
                                },
                                "Local": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "PartyLocal": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in party local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "Millis": {
                                  "type": "number",
                                  "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                                },
                                "TimeZone": {
                                  "type": "string",
                                  "description": "The related time zone"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "EventOccurredType": {
                              "type": "string",
                              "description": "The (required) type of the EventOccurredTimestamp, indicator of the quality.  TrueTime is if EOT is sourced from correct / best timestamp from the source and is the highest quality.",
                              "enum": [
                                "TrueTime",
                                "ApproximateTime",
                                "SystemTime"
                              ]
                            },
                            "EventSourceSentTimestamp": {
                              "description": "Time properties (optional) representing the time the inbound originating / raw event was originally sent from source leaving its boundary of control e.g time an external client service published the event",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "anyOf": [
                                {
                                  "required": [
                                    "DateId",
                                    "UTC",
                                    "Millis"
                                  ]
                                },
                                {
                                  "required": [
                                    "DateId",
                                    "Local",
                                    "TimeZone"
                                  ]
                                }
                              ],
                              "properties": {
                                "DateId": {
                                  "type": "string",
                                  "description": "The Xfuze Date dim Id e.g Date_20231001"
                                },
                                "HourId": {
                                  "type": "string",
                                  "description": "The Xfuze hour dim Id e.g Hour_2023100112"
                                },
                                "UTC": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in UTC e.g 2023-01-12T12:03:00.000+0000"
                                },
                                "Local": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "PartyLocal": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in party local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "Millis": {
                                  "type": "number",
                                  "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                                },
                                "TimeZone": {
                                  "type": "string",
                                  "description": "The related time zone"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "EventExternalReceivedTimestamp": {
                              "description": "Time properties (optional) representing the time the inbound originating / raw event was received into an interim landing zone, prior to SmartConnector processing e.g time landed in GSC, PubSub prior to the smart connector processing",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "anyOf": [
                                {
                                  "required": [
                                    "DateId",
                                    "UTC",
                                    "Millis"
                                  ]
                                },
                                {
                                  "required": [
                                    "DateId",
                                    "Local",
                                    "TimeZone"
                                  ]
                                }
                              ],
                              "properties": {
                                "DateId": {
                                  "type": "string",
                                  "description": "The Xfuze Date dim Id e.g Date_20231001"
                                },
                                "HourId": {
                                  "type": "string",
                                  "description": "The Xfuze hour dim Id e.g Hour_2023100112"
                                },
                                "UTC": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in UTC e.g 2023-01-12T12:03:00.000+0000"
                                },
                                "Local": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "PartyLocal": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in party local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "Millis": {
                                  "type": "number",
                                  "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                                },
                                "TimeZone": {
                                  "type": "string",
                                  "description": "The related time zone"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "EventExternalLandingZoneType": {
                              "type": "string",
                              "description": "The (optional) type of the EventExternalReceivedTimestamp (should be provided if EventExternalReceivedTimestamp set), indicator of the external landing zone type. e.g GCS",
                              "enum": [
                                "GCS",
                                "S3",
                                "Pub/Sub",
                                "Pulsar",
                                "Kafka",
                                "Kinesis",
                                "SQS",
                                "SNS",
                                "EventBridge",
                                "EventGrid",
                                "WebMethods",
                                "SFTP",
                                "FTP",
                                "MongoDB",
                                "MongoDBStream",
                                "DynamoDB",
                                "DynamoDBStream",
                                "DocumentDB",
                                "DocumentDBStream",
                                "Other"
                              ]
                            },
                            "EventReceivedTimestamp": {
                              "description": "Time properties (required) representing the time at which the SmartConnector received (to process) the inbound originating / raw event",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "anyOf": [
                                {
                                  "required": [
                                    "DateId",
                                    "UTC",
                                    "Millis"
                                  ]
                                },
                                {
                                  "required": [
                                    "DateId",
                                    "Local",
                                    "TimeZone"
                                  ]
                                }
                              ],
                              "properties": {
                                "DateId": {
                                  "type": "string",
                                  "description": "The Xfuze Date dim Id e.g Date_20231001"
                                },
                                "HourId": {
                                  "type": "string",
                                  "description": "The Xfuze hour dim Id e.g Hour_2023100112"
                                },
                                "UTC": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in UTC e.g 2023-01-12T12:03:00.000+0000"
                                },
                                "Local": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "PartyLocal": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in party local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "Millis": {
                                  "type": "number",
                                  "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                                },
                                "TimeZone": {
                                  "type": "string",
                                  "description": "The related time zone"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "EventIngestProcessedTimestamp": {
                              "description": "Time properties (optional) representing when a SmartConnector finished 'processing' the inbound originating / raw event e.g just prior to publishing downstream",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "anyOf": [
                                {
                                  "required": [
                                    "DateId",
                                    "UTC",
                                    "Millis"
                                  ]
                                },
                                {
                                  "required": [
                                    "DateId",
                                    "Local",
                                    "TimeZone"
                                  ]
                                }
                              ],
                              "properties": {
                                "DateId": {
                                  "type": "string",
                                  "description": "The Xfuze Date dim Id e.g Date_20231001"
                                },
                                "HourId": {
                                  "type": "string",
                                  "description": "The Xfuze hour dim Id e.g Hour_2023100112"
                                },
                                "UTC": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in UTC e.g 2023-01-12T12:03:00.000+0000"
                                },
                                "Local": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "PartyLocal": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in party local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "Millis": {
                                  "type": "number",
                                  "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                                },
                                "TimeZone": {
                                  "type": "string",
                                  "description": "The related time zone"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "EventProcessedTimestamp": {
                              "description": "Time properties (optional) representing when an EventProcessor finished 'processing' the trigger event and all changes and enrichments data wise",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "anyOf": [
                                {
                                  "required": [
                                    "DateId",
                                    "UTC",
                                    "Millis"
                                  ]
                                },
                                {
                                  "required": [
                                    "DateId",
                                    "Local",
                                    "TimeZone"
                                  ]
                                }
                              ],
                              "properties": {
                                "DateId": {
                                  "type": "string",
                                  "description": "The Xfuze Date dim Id e.g Date_20231001"
                                },
                                "HourId": {
                                  "type": "string",
                                  "description": "The Xfuze hour dim Id e.g Hour_2023100112"
                                },
                                "UTC": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in UTC e.g 2023-01-12T12:03:00.000+0000"
                                },
                                "Local": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "PartyLocal": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in party local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "Millis": {
                                  "type": "number",
                                  "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                                },
                                "TimeZone": {
                                  "type": "string",
                                  "description": "The related time zone"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "EventPublishedTimestamp": {
                              "description": "Time properties (optional) representing when an EventProcessor, post 'processing' the trigger event and all changes, publishes the event downstream ",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "anyOf": [
                                {
                                  "required": [
                                    "DateId",
                                    "UTC",
                                    "Millis"
                                  ]
                                },
                                {
                                  "required": [
                                    "DateId",
                                    "Local",
                                    "TimeZone"
                                  ]
                                }
                              ],
                              "properties": {
                                "DateId": {
                                  "type": "string",
                                  "description": "The Xfuze Date dim Id e.g Date_20231001"
                                },
                                "HourId": {
                                  "type": "string",
                                  "description": "The Xfuze hour dim Id e.g Hour_2023100112"
                                },
                                "UTC": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in UTC e.g 2023-01-12T12:03:00.000+0000"
                                },
                                "Local": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "PartyLocal": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "An Xfuze timestamp represented in party local time e.g 2023-01-12T13:03:00.000+0100"
                                },
                                "Millis": {
                                  "type": "number",
                                  "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                                },
                                "TimeZone": {
                                  "type": "string",
                                  "description": "The related time zone"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "EventSeq": {
                              "type": "number",
                              "description": "The (optional) sequence number of this event over life of entity, typically explicitly provided or sometimes derived"
                            }
                          },
                          "required": [
                            "EventOccurredTimestamp",
                            "EventOccurredType",
                            "EventReceivedTimestamp"
                          ]
                        }
                      },
                      "required": [
                        "TimeZones",
                        "Times"
                      ]
                    },
                    "Origin": {
                      "type": "object",
                      "unevaluatedProperties": false,
                      "properties": {
                        "Times": {
                          "type": "object",
                          "description": "The Origin (i.e source / raw attributes) input fields provided used in transforming to 'Xfuze' representations",
                          "unevaluatedProperties": false,
                          "properties": {
                            "EventOccurredTimestamp": {
                              "type": "string",
                              "description": "Raw form (as provided) of the input timestamp used in generating Xfuze EventOccurredTimestamp e.g 2023-01-12 12:03:00+00:00"
                            },
                            "EventSourceSentTimestamp": {
                              "type": "string",
                              "description": "Raw form (as provided) of the input timestamp used in generating Xfuze EventSourceSentTimestamp e.g 1673525621103"
                            },
                            "EventExternalReceivedTimestamp": {
                              "type": "string",
                              "description": "Raw form (as provided) of the input timestamp used in generating Xfuze EventExternalReceivedTimestamp e.g 1673525621012"
                            }
                          },
                          "required": [
                            "EventOccurredTimestamp"
                          ]
                        }
                      }
                    }
                  },
                  "required": [
                    "Xfuze",
                    "Origin"
                  ]
                },
                "PartyAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/PartyAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/PartyAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "description": "The (optional) Xfuze derived / enriched attributes that define the context of the (primary) party involved in this particular instance of the event",
                      "unevaluatedProperties": false,
                      "properties": {
                        "PartyId": {
                          "type": "string",
                          "description": "The (optional) canonical top level PartyId, identifying the physical party (e.g person, organisation, group), as the single ID source of truth across systems - typically only derivable by the EventProcessors e.g Party_69a79ae0-1d10-46b3-8dd2-7455c622aae2"
                        },
                        "SystemPartyId": {
                          "type": "string",
                          "description": "The (required) canonical party Id, for a given system, uniquely identifying the party within that specific system (as opposed to across systems which is the case for the above PartyId) e.g Party_SFCC_123456789"
                        },
                        "SystemAccountId": {
                          "type": "string",
                          "description": "The (optional) canonical top level AccountId of the account this event relates to e.g Account_SFCC_987654321"
                        },
                        "PartyRoleTypeCode": {
                          "type": "string",
                          "description": "The (required) type of behavioural role of the party with respect to the involvement in this event e.g Customer.  A party can assume multiple roles, this role is the one WRT this specific event"
                        },
                        "PartyRoleSubTypeCode": {
                          "type": "string",
                          "description": "The (optional) sub type of the top level role of the party with respect to the involvement in this event to further refine the top level role to be more accurate and specific e.g Purchaser, Recipient, DeliveryRecipient etc.  "
                        },
                        "PartyStatusCode": {
                          "type": "string",
                          "description": "The (optional) canonical status of the party as was at the time of this event e.g Registered"
                        },
                        "InvolvedReasonCode": {
                          "type": "string",
                          "description": "The (optional) canonical reason code as to they this party was involved in the event e.g Purchaser"
                        }
                      },
                      "required": [
                        "SystemPartyId"
                      ]
                    },
                    "Origin": {
                      "type": "object",
                      "description": "The 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
                      "unevaluatedProperties": false,
                      "properties": {
                        "SystemPartyId": {
                          "type": "string",
                          "description": "Raw form (as provided) of the input SystemPartyId (e.g CustomerId) from the source, used in transforming to 'Xfuze' representations e.g 123456789"
                        },
                        "SystemAccountId": {
                          "type": "string",
                          "description": "Raw form (as provided) of the input SystemPartyId (e.g CustomerAccountId) from the source, used in transforming to 'Xfuze' representations to e.g Account_SFCC_987654321"
                        },
                        "PartyRoleTypeCode": {
                          "type": "string",
                          "description": "Raw form (as provided) of the input PartyRoleTypeCode (e.g Customer or Employee, but more often derived by Xfuze then supplied as input) from the source, used in transforming to 'Xfuze' representations"
                        },
                        "PartyStatusCode": {
                          "type": "string",
                          "description": "Raw form (as provided) of the input PartyStatusCode (e.g Customer or Employee Status codes)  from the source, used in transforming to 'Xfuze' representations e.g Registered"
                        }
                      }
                    }
                  }
                },
                "ProductAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/ProductAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/ProductAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "anyOf": [
                        {
                          "required": [
                            "ProductId",
                            "ProductKey"
                          ]
                        },
                        {
                          "required": [
                            "ProductIds",
                            "ProductKeys"
                          ]
                        }
                      ],
                      "description": "The (optional) Xfuze derived / enriched attributes that define the context of the product(s) involved in event",
                      "unevaluatedProperties": false,
                      "properties": {
                        "ProductId": {
                          "type": "string",
                          "description": "e.g PRODUCT_APP_DE_de_DE_D20165-7647-D578-XXL"
                        },
                        "ProductKey": {
                          "type": "string",
                          "description": "e.g D20165-7647-D578-XXL"
                        },
                        "ProductIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "e.g [\"PRODUCT_APP_DE_de_DE_D20165-7647-D578-XXL\", \"PRODUCT_APP_DE_de_DE_51001-C909-C762-3834\", \"PRODUCT_APP_DE_de_DE_D22284-D183-D338-3834\"]"
                        },
                        "ProductKeys": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "e.g [\"D20165-7647-D578-XXL\", \"51001-C909-C762-3834\", \"D22284-D183-D338-3834\"]"
                        },
                        "InvolvedReasonCode": {
                          "type": "string",
                          "description": "e.g SoldProduct"
                        }
                      }
                    },
                    "Origin": {
                      "type": "object",
                      "description": "The 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
                      "unevaluatedProperties": false,
                      "properties": {
                        "ProductId": {
                          "type": "string",
                          "description": "Raw form (optional) of the input ProductId from the source, used in transforming to 'Xfuze' representations e.g PRODUCT_APP_DE_de_DE_D20165-7647-D578-XXL"
                        },
                        "ProductKey": {
                          "type": "string",
                          "description": "Raw form (optional) of the input ProductKey from the source, used in transforming to 'Xfuze' representations e.g D20165-7647-D578-XXL"
                        }
                      }
                    }
                  }
                },
                "LocationAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/LocationAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/LocationAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "description": "The Xfuze derived / enriched attributes that define the context of the primary location involved in event",
                      "unevaluatedProperties": false,
                      "properties": {
                        "ChannelCode": {
                          "type": "string",
                          "description": "The (optional) Xfuze channel code e.g App"
                        },
                        "ChannelName": {
                          "type": "string",
                          "description": "The (optional) Xfuze channel name e.g Mobile App"
                        },
                        "LocationId": {
                          "type": "string",
                          "description": "The (optional) Xfuze locationId of the primary location of this event e.g Location_Crew_901"
                        },
                        "LocationNumber": {
                          "type": "string",
                          "description": "The (optional) location type of the primary location of this event e.g 901"
                        },
                        "LocationType": {
                          "type": "string",
                          "description": "The (optional) location type of the primary location of this event e.g Store"
                        },
                        "Country": {
                          "description": "The country of the event",
                          "type": "object",
                          "anyOf": [
                            {
                              "required": [
                                "ISO2"
                              ]
                            },
                            {
                              "required": [
                                "ISO3"
                              ]
                            }
                          ],
                          "unevaluatedProperties": false,
                          "properties": {
                            "ISO2": {
                              "type": "string",
                              "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                            },
                            "ISO3": {
                              "type": "string",
                              "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                            },
                            "CountryCode": {
                              "type": "string",
                              "description": "The canonical CountryCode (country-code) country code e.g 036"
                            },
                            "Name": {
                              "type": "string",
                              "description": "The canonical (official) 'Name' of the country e.g Australia"
                            },
                            "AltName": {
                              "type": "string",
                              "description": "An alternate name for the country"
                            },
                            "RegionCode": {
                              "type": "string",
                              "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                            },
                            "RegionName": {
                              "type": "string",
                              "description": "The canonical RegionName (region) for the country code e.g Oceania"
                            },
                            "SubRegionCode": {
                              "type": "string",
                              "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                            },
                            "SubRegionName": {
                              "type": "string",
                              "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                            },
                            "IntermediateRegionCode": {
                              "type": "string",
                              "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                            },
                            "IntermediateRegionName": {
                              "type": "string",
                              "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                            },
                            "Coordinates": {
                              "description": "The canonical Coordinates of the country (canonical from google)",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "Latitude": {
                                  "type": "number",
                                  "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                  "minimum": -90,
                                  "maximum": 90
                                },
                                "Longitude": {
                                  "type": "number",
                                  "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                  "minimum": -180,
                                  "maximum": 180
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              },
                              "required": [
                                "Latitude",
                                "Longitude"
                              ]
                            },
                            "PrimaryLanguage": {
                              "type": "string",
                              "description": "The canonical Primary Language of the country"
                            },
                            "Currency": {
                              "description": "The canonical Currency Code of the country (canonical from google)",
                              "type": "object",
                              "anyOf": [
                                {
                                  "required": [
                                    "ISO2"
                                  ]
                                },
                                {
                                  "required": [
                                    "ISO3"
                                  ]
                                }
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "ISO2": {
                                  "type": "string",
                                  "description": "The canonical ISO2 currency code"
                                },
                                "ISO3": {
                                  "type": "string",
                                  "description": "The canonical ISO3 currency code"
                                },
                                "Number": {
                                  "type": "string",
                                  "description": "The canonical currency number"
                                },
                                "DecimalPlaces": {
                                  "type": "string",
                                  "description": "The canonical number of decimal places for the currency"
                                },
                                "CountryCodes": {
                                  "type": "array",
                                  "description": "The canonical array of ISO3 country codes officially using this currency",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "Symbol": {
                                  "type": "string",
                                  "description": "The canonical symbol for the currency"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "IsEuropeanCountry": {
                              "type": "string",
                              "description": "Is this country an european one? e.g Y",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "Lineage": {
                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "EntityId": {
                                  "type": "string",
                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                },
                                "EventId": {
                                  "type": "string",
                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                },
                                "AsOf": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                }
                              },
                              "required": [
                                "EventId,AsOf"
                              ]
                            }
                          }
                        },
                        "Coordinates": {
                          "description": "The country of the channel",
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "Latitude": {
                              "type": "number",
                              "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                              "minimum": -90,
                              "maximum": 90
                            },
                            "Longitude": {
                              "type": "number",
                              "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                              "minimum": -180,
                              "maximum": 180
                            },
                            "Lineage": {
                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "EntityId": {
                                  "type": "string",
                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                },
                                "EventId": {
                                  "type": "string",
                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                },
                                "AsOf": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                }
                              },
                              "required": [
                                "EventId,AsOf"
                              ]
                            }
                          },
                          "required": [
                            "Latitude",
                            "Longitude"
                          ]
                        },
                        "InvolvedReasonCode": {
                          "type": "string",
                          "description": "The (optional) reason that this channel/location was involved in the event e.g SoldLocation"
                        }
                      }
                    },
                    "Origin": {
                      "type": "object",
                      "description": "The 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
                      "unevaluatedProperties": false,
                      "properties": {
                        "ChannelCode": {
                          "type": "string",
                          "description": "Raw form (optional) of the input ChannelCode from the source, used in transforming to 'Xfuze' representations e.g APP"
                        },
                        "ChannelName": {
                          "type": "string",
                          "description": "Raw form (optional) of the input ChannelName from the source, used in transforming to 'Xfuze' representations e.g MOBILEAPP"
                        },
                        "LocationId": {
                          "type": "string",
                          "description": "Raw form (optional) of the input LocationId from the source, used in transforming to 'Xfuze' representations e.g Location_Hybris_f37f4592-da7e-4e59-bddc-6f6f2e17d3eb"
                        },
                        "LocationNumber": {
                          "type": "string",
                          "description": "Raw form (optional) of the input LocationNumber from the source, used in transforming to 'Xfuze' representations e.g 189"
                        },
                        "LocationType": {
                          "type": "string",
                          "description": "Raw form (optional) of the input LocationType from the source, used in transforming to 'Xfuze' representations e.g STORE"
                        },
                        "CountryCode": {
                          "type": "string",
                          "description": "Raw form (optional) of the input CountryCode from the source, used in transforming to 'Xfuze' representations e.g GB"
                        }
                      }
                    }
                  }
                },
                "MeasuresAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/MeasuresAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/MeasuresAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "TriggerEntity": {
                      "type": "object",
                      "description": "The Xfuze key contextual 'measures' (numerical values) contained in the event that contextualise the change itself (e.g for SalesOrderItemsCancelled event, the QtyCancelled)",
                      "unevaluatedProperties": false,
                      "properties": {
                        "Value1": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 232.98"
                        },
                        "Value1Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Totals.GrandTotal.BCY.IncTax"
                        },
                        "Value2": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 50.15"
                        },
                        "Value2Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Totals.FinalMargin.BCY.Percent"
                        },
                        "Value3": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 0.0"
                        },
                        "Value3Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Totals.DiscountsTotal.BCY.IncTax"
                        },
                        "Value4": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 50.15"
                        },
                        "Value4Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Totals.FinalMargin.BCY.Percent"
                        },
                        "Value5": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 0.0"
                        },
                        "Value5Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Totals.DiscountsTotal.BCY.IncTax"
                        },
                        "Value6": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 3"
                        },
                        "Value6Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Qtys.QtySold"
                        },
                        "Value7": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 3"
                        },
                        "Value7Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Qtys.QtySold"
                        }
                      }
                    },
                    "LatestEntity": {
                      "type": "object",
                      "description": "The Xfuze key contextual 'measures' (numerical values) contained in the event that contextualise the latest entity state itself (e.g stateful view - for SalesOrderItemsCancelled event, the QtyCancelled, QtyNet & QtySold)",
                      "unevaluatedProperties": false,
                      "properties": {
                        "Value1": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 232.98"
                        },
                        "Value1Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Totals.GrandTotal.BCY.IncTax"
                        },
                        "Value2": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 50.15"
                        },
                        "Value2Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Totals.FinalMargin.BCY.Percent"
                        },
                        "Value3": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 0.0"
                        },
                        "Value3Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Totals.DiscountsTotal.BCY.IncTax"
                        },
                        "Value4": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 50.15"
                        },
                        "Value4Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Totals.FinalMargin.BCY.Percent"
                        },
                        "Value5": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 0.0"
                        },
                        "Value5Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Totals.DiscountsTotal.BCY.IncTax"
                        },
                        "Value6": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 3"
                        },
                        "Value6Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Qtys.QtySold"
                        },
                        "Value7": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g 3"
                        },
                        "Value7Code": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "e.g SalesOrder.Header.Qtys.QtySold"
                        }
                      }
                    }
                  }
                },
                "ReferenceAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/ReferenceAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/ReferenceAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "ReferenceAtts": {
                      "type": "object",
                      "unevaluatedProperties": false,
                      "description": "The Xfuze derived / enriched attributes that define core reference data / lookup data fields to enrich other structs/fields with in the event",
                      "properties": {
                        "Atts": {
                          "type": "array",
                          "items": {
                            "CustomAttObject": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "A custom att object, a generic extension object",
                                "required": [
                                  "Code",
                                  "Value"
                                ],
                                "unevaluatedProperties": false,
                                "properties": {
                                  "Code": {
                                    "type": "string",
                                    "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                                  },
                                  "CodeShort": {
                                    "type": "string",
                                    "description": "The short version of the code in the leaf element of 'Code'"
                                  },
                                  "Name": {
                                    "type": "string",
                                    "description": "The name of the att"
                                  },
                                  "Value": {
                                    "type": "string",
                                    "description": "The value of the att"
                                  },
                                  "Desc": {
                                    "type": "string",
                                    "description": "The desc of the att"
                                  },
                                  "SourceSystem": {
                                    "type": "string",
                                    "description": "The source system this att is from"
                                  },
                                  "Lineage": {
                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "EntityId": {
                                        "type": "string",
                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                      },
                                      "EventId": {
                                        "type": "string",
                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                      },
                                      "AsOf": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                      }
                                    },
                                    "required": [
                                      "EventId,AsOf"
                                    ]
                                  }
                                }
                              }
                            },
                            "CustomAttProperties": {
                              "type": "object",
                              "description": "A custom att object, a generic extension object",
                              "required": [
                                "Code",
                                "Value"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                                },
                                "CodeShort": {
                                  "type": "string",
                                  "description": "The short version of the code in the leaf element of 'Code'"
                                },
                                "Name": {
                                  "type": "string",
                                  "description": "The name of the att"
                                },
                                "Value": {
                                  "type": "string",
                                  "description": "The value of the att"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The desc of the att"
                                },
                                "SourceSystem": {
                                  "type": "string",
                                  "description": "The source system this att is from"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "Atts"
                      ]
                    }
                  },
                  "required": [
                    "ReferenceAtts"
                  ]
                },
                "PrivacyAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/PrivacyAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/PrivacyAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "description": "The (required)  Xfuze derived / enriched attributes that define the context of the privacy of the data involved in event",
                      "unevaluatedProperties": false,
                      "properties": {
                        "IsSensitiveEntity": {
                          "type": "string",
                          "description": "Is this a sensitive entity that needs sensitive handling for GDRP / PII? etc e.g Y",
                          "enum": [
                            "Y",
                            "N",
                            "U"
                          ]
                        },
                        "IsEncrypted": {
                          "type": "string",
                          "description": "Is this entities sensitive fields encrypted by Xfuze in this event? e.g N",
                          "enum": [
                            "Y",
                            "N",
                            "U"
                          ]
                        },
                        "EncryptionKeyId": {
                          "type": "string",
                          "description": "The ID (typically a cloud Id) of the key used in encryption e.g 1234abcd-12ab-34cd-56ef-1234567890ab"
                        },
                        "EncryptionKeyURI": {
                          "type": "string",
                          "description": "The URI (typically a cloud Id) of the key used in encryption  e.g arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"
                        },
                        "EncryptionKeyName": {
                          "type": "string",
                          "description": "e.g The name (typically a cloud Id) of the key used in encryption xfuze-default-key"
                        },
                        "EncryptionKeyHost": {
                          "type": "string",
                          "description": "The encryption key host provider e.g AWS::KMS"
                        },
                        "SensitiveFieldPaths": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The array of canonical codes of those sensitive fields contained in this event e.g Party.Profile.Name.FirstName"
                        }
                      },
                      "required": [
                        "IsSensitiveEntity",
                        "IsEncrypted"
                      ]
                    },
                    "Origin": {
                      "type": "object",
                      "description": "The (optional) 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
                      "unevaluatedProperties": false,
                      "properties": {
                        "IsEncrypted": {
                          "type": "string",
                          "description": "Raw form (optional) of the input ProductId from the source, used in transforming to 'Xfuze' representations e.g 1"
                        }
                      },
                      "required": [
                        "IsEncrypted"
                      ]
                    }
                  }
                },
                "IngestAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/IngestAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/IngestAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "title": "Xfuze IngestAtts",
                      "description": "The (required) Xfuze derived / enriched attributes that define the context of the external trigger system and full ingest path for lineage and auditability",
                      "unevaluatedProperties": false,
                      "oneOf": [
                        {
                          "required": [
                            "File"
                          ]
                        },
                        {
                          "required": [
                            "Stream"
                          ]
                        },
                        {
                          "required": [
                            "Api"
                          ]
                        },
                        {
                          "required": [
                            "Table"
                          ]
                        }
                      ],
                      "properties": {
                        "File": {
                          "type": "object",
                          "properties": {
                            "SystemCode": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The (required) system code of the provider of the file e.g GCS"
                            },
                            "URI": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The (optional) URI of the file if a cloud file being processed that this event was derived from e.g gcs://xfuze-file-ingest/clientA/prod/dt=20230810/SalesDaily.csv"
                            },
                            "Path": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The (required) URI of the file if a cloud file being processed that this event was derived from e.g xfuze-file-ingest/clientA/prod/dt=20230810"
                            },
                            "Name": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The (required) name of the file if a cloud file being processed that this event was derived from e.g SalesDaily.csv"
                            },
                            "BatchId": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The (optional) batch ID if processing is being batched e.g BT1001"
                            },
                            "BatchNumber": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The (optional) batch Number if processing is being batched e.g BT1001-004"
                            },
                            "LineNumber": {
                              "type": "number",
                              "description": "The (optional) line number within a batch, as a key way to track lineage of event to source row e.g 234"
                            },
                            "TotalBatchLines": {
                              "type": "number",
                              "description": "The (optional) total number of lines within the batch, as a tracker of batch completion e.g 500 "
                            },
                            "OriginalFileSizeBytes": {
                              "type": "number",
                              "description": "The (required) original file size in bytes, key to reconciliation in chunked/streaming mode e.g 25000 "
                            },
                            "OriginalRowSizeBytes": {
                              "type": "number",
                              "description": "The (optional) original file size in bytes, key to reconciliation in chunked/streaming mode e.g 500 "
                            },
                            "BytesOffsetInOriginalFile": {
                              "type": "number",
                              "description": "The (optional) original file size in bytes, key to reconciliation in chunked/streaming mode e.g 500 "
                            },
                            "FormatType": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The (required) source format type",
                              "enum": [
                                "CSV",
                                "TCSV",
                                "INI",
                                "TXT",
                                "JSON",
                                "BSON",
                                "XML",
                                "YAML",
                                "Protobuf",
                                "Binary",
                                "MessagePack",
                                "Avro",
                                "Thrift",
                                "Parquet",
                                "Arrow",
                                "Other"
                              ]
                            },
                            "PatternType": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The (optional) type of File ingest pattern e.g Cloud Object Notification",
                              "enum": [
                                "CloudObjectNotification",
                                "SFTP",
                                "FTP",
                                "CloudObjectScan",
                                "Other"
                              ]
                            },
                            "ChangeTimestampUTC": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "format": "date-time",
                              "description": "The  (optional) time at which the file object changed state and triggered a notification, often in cloud metadata e.g GCS metadata"
                            },
                            "ObjectNotificationPayload": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The (optional) raw JSON string of the cloud object notification payload e.g GCS file notification"
                            }
                          }
                        },
                        "Stream": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "SystemCode": {
                              "type": "string"
                            },
                            "ChannelURI": {
                              "type": "string"
                            },
                            "ChannelName": {
                              "type": "string"
                            },
                            "ChannelType": {
                              "type": "string"
                            },
                            "Partition": {
                              "type": "string"
                            },
                            "Offset": {
                              "type": "number"
                            },
                            "ExternalMessageId": {
                              "type": "string"
                            },
                            "FormatType": {
                              "type": "string"
                            },
                            "PatternType": {
                              "type": "string"
                            },
                            "PublishTimestampUTC": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "format": "date-time"
                            }
                          }
                        },
                        "Api": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "SystemCode": {
                              "type": "string"
                            },
                            "URI": {
                              "type": "string"
                            },
                            "Name": {
                              "type": "string"
                            },
                            "Resource": {
                              "type": "string"
                            },
                            "HttpMethod": {
                              "type": "string"
                            },
                            "QueryString": {
                              "type": "string"
                            },
                            "FormatType": {
                              "type": "string"
                            },
                            "PatternType": {
                              "type": "string"
                            },
                            "InvokeTimestampUTC": {
                              "type": "string"
                            }
                          }
                        },
                        "Table": {
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "SystemCode": {
                              "type": "string"
                            },
                            "DatabaseURI": {
                              "type": "string"
                            },
                            "DatabaseName": {
                              "type": "string"
                            },
                            "SchemaName": {
                              "type": "string"
                            },
                            "TableName": {
                              "type": "string"
                            },
                            "RowKey": {
                              "type": "string"
                            },
                            "Method": {
                              "type": "string"
                            },
                            "PatternType": {
                              "type": "string"
                            },
                            "ReceiveTimestampUTC": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "Xfuze"
                  ]
                },
                "PayloadAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/PayloadAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/PayloadAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "description": "The Xfuze derived / enriched attributes that define various hashing values of the payloads, for deduping and change detection",
                      "unevaluatedProperties": false,
                      "properties": {
                        "DataPayloadHash": {
                          "type": "string",
                          "description": "The hash of the 'Data / Domain Objects' part of the Xfuze payload only, excluding EventHeader details e.g ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad"
                        },
                        "EventPayloadHash": {
                          "type": "string",
                          "description": "The hash of the 'Full Event' of the Xfuze payload, including EventHeader e.g cd5453f8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad"
                        },
                        "HashScheme": {
                          "type": "string",
                          "description": "The hash scheme used to hash the payload partse.g SHA256, MD5",
                          "enum": [
                            "SHA256",
                            "MD5",
                            "BASE64"
                          ]
                        }
                      }
                    },
                    "Origin": {
                      "type": "object",
                      "description": "The 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
                      "required": [
                        "DataPayloadHash"
                      ],
                      "unevaluatedProperties": false,
                      "properties": {
                        "DataPayloadHash": {
                          "type": "string",
                          "description": "The hash of the Origins 'Data / Domain Objects' part of the Xfuze payload only, excluding EventHeader details e.g ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad"
                        },
                        "EventPayloadHash": {
                          "type": "string",
                          "description": "The hash of the Origins 'Full Event' payload, if applicable e.g cd5453f8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad"
                        },
                        "HashScheme": {
                          "type": "string",
                          "description": "The hash scheme used to hash the origin payload partse.g SHA256, MD5",
                          "enum": [
                            "SHA256",
                            "MD5",
                            "BASE64",
                            "Other"
                          ]
                        }
                      }
                    }
                  }
                },
                "LabelAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/LabelAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/LabelAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "LabelAtts": {
                      "type": "object",
                      "description": "The Xfuze derived / enriched customer extension atts as a generic placeholder for new values not in the core schema of the XDM event",
                      "unevaluatedProperties": false,
                      "properties": {
                        "Atts": {
                          "type": "array",
                          "items": {
                            "CustomAttObject": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "A custom att object, a generic extension object",
                                "required": [
                                  "Code",
                                  "Value"
                                ],
                                "unevaluatedProperties": false,
                                "properties": {
                                  "Code": {
                                    "type": "string",
                                    "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                                  },
                                  "CodeShort": {
                                    "type": "string",
                                    "description": "The short version of the code in the leaf element of 'Code'"
                                  },
                                  "Name": {
                                    "type": "string",
                                    "description": "The name of the att"
                                  },
                                  "Value": {
                                    "type": "string",
                                    "description": "The value of the att"
                                  },
                                  "Desc": {
                                    "type": "string",
                                    "description": "The desc of the att"
                                  },
                                  "SourceSystem": {
                                    "type": "string",
                                    "description": "The source system this att is from"
                                  },
                                  "Lineage": {
                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "EntityId": {
                                        "type": "string",
                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                      },
                                      "EventId": {
                                        "type": "string",
                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                      },
                                      "AsOf": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                      }
                                    },
                                    "required": [
                                      "EventId,AsOf"
                                    ]
                                  }
                                }
                              }
                            },
                            "CustomAttProperties": {
                              "type": "object",
                              "description": "A custom att object, a generic extension object",
                              "required": [
                                "Code",
                                "Value"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                                },
                                "CodeShort": {
                                  "type": "string",
                                  "description": "The short version of the code in the leaf element of 'Code'"
                                },
                                "Name": {
                                  "type": "string",
                                  "description": "The name of the att"
                                },
                                "Value": {
                                  "type": "string",
                                  "description": "The value of the att"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The desc of the att"
                                },
                                "SourceSystem": {
                                  "type": "string",
                                  "description": "The source system this att is from"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "LabelAtts"
                  ]
                },
                "DqTestAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/DqTestAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/DqTestAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "description": "The Xfuze derived / enriched attributes that define the schema and transforms and metadata used in generating this transform",
                      "unevaluatedProperties": false,
                      "properties": {
                        "DqTestAtts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "unevaluatedProperties": false,
                            "properties": {
                              "TestId": {
                                "type": "null"
                              },
                              "TestName": {
                                "type": "null"
                              },
                              "TestType": {
                                "type": "null"
                              },
                              "TestVersion": {
                                "type": "null"
                              },
                              "ActualResultCode": {
                                "type": "null"
                              },
                              "ActualResultValue": {
                                "type": "null"
                              },
                              "ExpectedResultCode": {
                                "type": "null"
                              },
                              "ExpectedResultValue": {
                                "type": "null"
                              },
                              "Note": {
                                "type": "null"
                              },
                              "SeverityCode": {
                                "type": "null"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "DqTestAtts"
                  ]
                },
                "ReplayAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/ReplayAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/ReplayAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "description": "The Xfuze derived / enriched attributes that define the schema and transforms and metadata used in generating this transform",
                      "unevaluatedProperties": false,
                      "properties": {
                        "IsReplayed": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "ReplayStatusCode": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "ReplayStatusReason": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "ReplayCount": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "LastEventId": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "LastEventOccurredTimestampUTC": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "Origin": {
                      "type": "object",
                      "description": "The 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
                      "unevaluatedProperties": false,
                      "properties": {
                        "IsReplayed": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "ReplayStatusCode": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "ReplayStatusReason": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "ReplayCount": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "LastEventId": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "LastEventOccurredTimestampUTC": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                },
                "ErrorAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/ErrorAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/ErrorAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "Xfuze": {
                      "type": "object",
                      "description": "The Xfuze derived / enriched error attributes for capturing error info related to any part of the event tlifecycle of this event",
                      "unevaluatedProperties": false,
                      "properties": {
                        "ServiceId": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "(TODO)"
                        },
                        "ErrorId": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "(TODO)"
                        },
                        "ErrorType": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "(TODO)",
                          "enum": [
                            "Ingress Source - Source Connectivity",
                            "Ingress Source - Source Data Quality",
                            "Ingress Connector - Network",
                            "Ingress Connector - Storage",
                            "Ingress Connector - Database",
                            "Ingress Connector - Security",
                            "Ingress Connector - XDM - Bad Raw Input",
                            "Ingress Connector - XDM - Schema Validation Error",
                            "Ingress Connector - XDM - Transformation Execution Error",
                            "Ingress Connector - Distribution - Publication Error",
                            "(Other)"
                          ]
                        },
                        "ErrorCode": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "(TODO)"
                        },
                        "ErrorDesc": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "(TODO)"
                        },
                        "ErrorPriority": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "enum": [
                            "Critical",
                            "VeryHigh",
                            "High",
                            "Medium",
                            "Low"
                          ]
                        },
                        "ErrorSourceSystem": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "(TODO)"
                        },
                        "ErrorSourceSubSystem": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "(TODO)"
                        },
                        "ErrorSourceEventId": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "(TODO)"
                        },
                        "ErrorEventId": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "(TODO)"
                        },
                        "ErrorTimestampUTC": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "(TODO)"
                        },
                        "ErrorEntityId": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "(TODO)"
                        },
                        "StackTrace": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "(TODO)"
                        },
                        "HttpStatusCode": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "(TODO)"
                        },
                        "LogHint": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "(TODO)"
                        },
                        "RemedyType": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "enum": [
                            "XiatechToResolve",
                            "ClientToResolve",
                            "ThirdPartyToResolve",
                            "Unknown"
                          ]
                        }
                      }
                    },
                    "Origin": {
                      "type": "object",
                      "description": "The 'origin' source / raw attributes provided as input and that were consumed as part of producing the companion 'Xfuze' representations",
                      "unevaluatedProperties": false,
                      "properties": {
                        "ErrorCode": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "ErrorDesc": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "HttpStatusCode": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "ReplayCount": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "LastEventId": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "LastEventOccurredTimestampUTC": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                },
                "ExtensionAtts": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$id": "https://xfuze.io/xdm/schema/components/event/common/EventHeader/EventMetadata/ExtensionAtts",
                  "description": "XDM Schema for the common event component 'EventHeader/EventMetadata/ExtensionAtts'",
                  "type": "object",
                  "unevaluatedProperties": false,
                  "properties": {
                    "ExtensionAtts": {
                      "type": "object",
                      "description": "The Xfuze derived / enriched customer extension atts as a generic placeholder for new values not in the core schema of the XDM event",
                      "unevaluatedProperties": false,
                      "properties": {
                        "Atts": {
                          "type": "array",
                          "items": {
                            "CustomAttObject": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "A custom att object, a generic extension object",
                                "required": [
                                  "Code",
                                  "Value"
                                ],
                                "unevaluatedProperties": false,
                                "properties": {
                                  "Code": {
                                    "type": "string",
                                    "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                                  },
                                  "CodeShort": {
                                    "type": "string",
                                    "description": "The short version of the code in the leaf element of 'Code'"
                                  },
                                  "Name": {
                                    "type": "string",
                                    "description": "The name of the att"
                                  },
                                  "Value": {
                                    "type": "string",
                                    "description": "The value of the att"
                                  },
                                  "Desc": {
                                    "type": "string",
                                    "description": "The desc of the att"
                                  },
                                  "SourceSystem": {
                                    "type": "string",
                                    "description": "The source system this att is from"
                                  },
                                  "Lineage": {
                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "EntityId": {
                                        "type": "string",
                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                      },
                                      "EventId": {
                                        "type": "string",
                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                      },
                                      "AsOf": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                      }
                                    },
                                    "required": [
                                      "EventId,AsOf"
                                    ]
                                  }
                                }
                              }
                            },
                            "CustomAttProperties": {
                              "type": "object",
                              "description": "A custom att object, a generic extension object",
                              "required": [
                                "Code",
                                "Value"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                                },
                                "CodeShort": {
                                  "type": "string",
                                  "description": "The short version of the code in the leaf element of 'Code'"
                                },
                                "Name": {
                                  "type": "string",
                                  "description": "The name of the att"
                                },
                                "Value": {
                                  "type": "string",
                                  "description": "The value of the att"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The desc of the att"
                                },
                                "SourceSystem": {
                                  "type": "string",
                                  "description": "The source system this att is from"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "ExtensionAtts"
                  ]
                }
              },
              "required": [
                "EventAtts",
                "EntityAtts",
                "TimeAtts",
                "IngestAtts",
                "PrivacyAtts",
                "PayloadAtts"
              ]
            }
          }
        },
        {
          "required": [
            "EventId",
            "EventName",
            "EventOccurredTimestampUTC",
            "EventOccurredTimestampLocal",
            "EventMetadata"
          ]
        }
      ]
    },
    {
      "properties": {
        "DomainEvent": {
          "type": "object",
          "required": [
            "TriggerEntity"
          ],
          "unevaluatedProperties": false,
          "properties": {
            "TriggerEntity": {
              "type": "object",
              "unevaluatedProperties": false,
              "properties": {
                "Line": {
                  "type": "object",
                  "description": "The core line details associated with the composed line entity",
                  "unevaluatedProperties": false,
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "properties": {
                            "EntityId": {
                              "type": "string",
                              "description": "The (required) globally unique synthetic Xfuze Id for the entity instance this event is related to and whose payload is the subject of change, unique across all entities. Typically of the format [EntityType::EntitySubType]_[SystemCode]_[RawEntityId] where RawEntityId can be composed of 1 or more source fields to create singular uniqueness e.g SalesOrderLine::Return_Hybris_8106008620_RET1"
                            },
                            "EntityType": {
                              "type": "string",
                              "description": "The (required) entity type, allowing for a typing system (top level) for entities, where the type is sourced from the master Xfuze control list e.g SalesOrderLine"
                            },
                            "EntitySubType": {
                              "type": "string",
                              "description": "An (optional) entity subtype, allowing for further, more refined typing of the core type for accuracy of interpretation e.g ReturnLine, CancelLine, VoidLine etc"
                            },
                            "ParentEntityId": {
                              "type": "string",
                              "description": "An (required) canonical Xfuze parent entity Id, where there is a natural parent a level above, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
                            },
                            "ParentEntityType": {
                              "type": "string",
                              "description": "An (required) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                            },
                            "CompositeEntityId": {
                              "type": "string",
                              "description": "An (optional) canonical Xfuze parent entity Id, where there is a natural 'composition' and containing parent, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
                            },
                            "CompositeEntityType": {
                              "type": "string",
                              "description": "An (optional) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                            }
                          },
                          "required": [
                            "EntityId",
                            "EntityType",
                            "ParentEntityId",
                            "ParentEntityType",
                            "CompositeEntityId",
                            "CompositeEntityType"
                          ]
                        },
                        {
                          "properties": {
                            "XRefIds": {
                              "description": "The list of cross reference lookups, i.e all the ways to look up this entity by the various data points, both in canonical Ids and system specific ones",
                              "type": "array",
                              "minItems": 1,
                              "items": {
                                "type": "object",
                                "description": "An object to capture cross referencing fields to support entity lookups by various surrogate keys spanning systems",
                                "unevaluatedProperties": false,
                                "properties": {
                                  "Id": {
                                    "type": "string",
                                    "description": "The value of the id/key to lookup using (i.e surrogate key 'value') e.g TRAN123456"
                                  },
                                  "SystemCode": {
                                    "type": "string",
                                    "description": "The system mastering the 'Code' field and its 'Id' value e.g PMC"
                                  },
                                  "Code": {
                                    "type": "string",
                                    "description": "The name of the id/key to lookup using (i.e surrogate key 'value') as is its exact name from source e.g transId"
                                  },
                                  "EntityId": {
                                    "type": "string",
                                    "description": "The Xfuze EntityId this cross referencing lookup resolves to e.g SalesOrder_PMC_TRAN123456"
                                  },
                                  "Lineage": {
                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "EntityId": {
                                        "type": "string",
                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                      },
                                      "EventId": {
                                        "type": "string",
                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                      },
                                      "AsOf": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                      }
                                    },
                                    "required": [
                                      "EventId,AsOf"
                                    ]
                                  }
                                }
                              }
                            },
                            "TimeZones": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "required": [
                                  "TimeZone"
                                ],
                                "unevaluatedProperties": false,
                                "properties": {
                                  "TimeZone": {
                                    "type": "string",
                                    "description": "The Time Zone e.g Europe/London"
                                  },
                                  "TimeZoneOffset": {
                                    "type": "string",
                                    "description": "UTC+01:00"
                                  },
                                  "TimeZoneExplicitCode": {
                                    "type": "string",
                                    "description": "Indicates whether the timeZone offset is explicit in the source (e.g +01:00) or implicit (e.g assumed to be +01:00, and thus reformatting work is needed to make explicit)",
                                    "enum": [
                                      "ExplicitOffsetInSource",
                                      "ImplicitOffsetNotInSource"
                                    ]
                                  },
                                  "Country": {
                                    "description": "The country of the timezone",
                                    "type": "object",
                                    "anyOf": [
                                      {
                                        "required": [
                                          "ISO2"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "ISO3"
                                        ]
                                      }
                                    ],
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "ISO2": {
                                        "type": "string",
                                        "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                      },
                                      "ISO3": {
                                        "type": "string",
                                        "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                      },
                                      "CountryCode": {
                                        "type": "string",
                                        "description": "The canonical CountryCode (country-code) country code e.g 036"
                                      },
                                      "Name": {
                                        "type": "string",
                                        "description": "The canonical (official) 'Name' of the country e.g Australia"
                                      },
                                      "AltName": {
                                        "type": "string",
                                        "description": "An alternate name for the country"
                                      },
                                      "RegionCode": {
                                        "type": "string",
                                        "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                      },
                                      "RegionName": {
                                        "type": "string",
                                        "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                      },
                                      "SubRegionCode": {
                                        "type": "string",
                                        "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                      },
                                      "SubRegionName": {
                                        "type": "string",
                                        "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                      },
                                      "IntermediateRegionCode": {
                                        "type": "string",
                                        "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                      },
                                      "IntermediateRegionName": {
                                        "type": "string",
                                        "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                      },
                                      "Coordinates": {
                                        "description": "The canonical Coordinates of the country (canonical from google)",
                                        "type": "object",
                                        "unevaluatedProperties": false,
                                        "properties": {
                                          "Latitude": {
                                            "type": "number",
                                            "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                            "minimum": -90,
                                            "maximum": 90
                                          },
                                          "Longitude": {
                                            "type": "number",
                                            "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                            "minimum": -180,
                                            "maximum": 180
                                          },
                                          "Lineage": {
                                            "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                            "type": "object",
                                            "unevaluatedProperties": false,
                                            "properties": {
                                              "EntityId": {
                                                "type": "string",
                                                "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                              },
                                              "EventId": {
                                                "type": "string",
                                                "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                              },
                                              "AsOf": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                              }
                                            },
                                            "required": [
                                              "EventId,AsOf"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "Latitude",
                                          "Longitude"
                                        ]
                                      },
                                      "PrimaryLanguage": {
                                        "type": "string",
                                        "description": "The canonical Primary Language of the country"
                                      },
                                      "Currency": {
                                        "description": "The canonical Currency Code of the country (canonical from google)",
                                        "type": "object",
                                        "anyOf": [
                                          {
                                            "required": [
                                              "ISO2"
                                            ]
                                          },
                                          {
                                            "required": [
                                              "ISO3"
                                            ]
                                          }
                                        ],
                                        "unevaluatedProperties": false,
                                        "properties": {
                                          "ISO2": {
                                            "type": "string",
                                            "description": "The canonical ISO2 currency code"
                                          },
                                          "ISO3": {
                                            "type": "string",
                                            "description": "The canonical ISO3 currency code"
                                          },
                                          "Number": {
                                            "type": "string",
                                            "description": "The canonical currency number"
                                          },
                                          "DecimalPlaces": {
                                            "type": "string",
                                            "description": "The canonical number of decimal places for the currency"
                                          },
                                          "CountryCodes": {
                                            "type": "array",
                                            "description": "The canonical array of ISO3 country codes officially using this currency",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "Symbol": {
                                            "type": "string",
                                            "description": "The canonical symbol for the currency"
                                          },
                                          "Lineage": {
                                            "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                            "type": "object",
                                            "unevaluatedProperties": false,
                                            "properties": {
                                              "EntityId": {
                                                "type": "string",
                                                "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                              },
                                              "EventId": {
                                                "type": "string",
                                                "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                              },
                                              "AsOf": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                              }
                                            },
                                            "required": [
                                              "EventId,AsOf"
                                            ]
                                          }
                                        }
                                      },
                                      "IsEuropeanCountry": {
                                        "type": "string",
                                        "description": "Is this country an european one? e.g Y",
                                        "enum": [
                                          "Y",
                                          "N",
                                          "U"
                                        ]
                                      },
                                      "Lineage": {
                                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                        "type": "object",
                                        "unevaluatedProperties": false,
                                        "properties": {
                                          "EntityId": {
                                            "type": "string",
                                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                          },
                                          "EventId": {
                                            "type": "string",
                                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                          },
                                          "AsOf": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                          }
                                        },
                                        "required": [
                                          "EventId,AsOf"
                                        ]
                                      }
                                    }
                                  },
                                  "Lineage": {
                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "EntityId": {
                                        "type": "string",
                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                      },
                                      "EventId": {
                                        "type": "string",
                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                      },
                                      "AsOf": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                      }
                                    },
                                    "required": [
                                      "EventId,AsOf"
                                    ]
                                  }
                                }
                              }
                            },
                            "Times": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "unevaluatedProperties": false,
                                "anyOf": [
                                  {
                                    "required": [
                                      "DateId",
                                      "UTC",
                                      "Millis"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "DateId",
                                      "Local",
                                      "TimeZone"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "DateId": {
                                    "type": "string",
                                    "description": "The Xfuze Date dim Id e.g Date_20231001"
                                  },
                                  "HourId": {
                                    "type": "string",
                                    "description": "The Xfuze hour dim Id e.g Hour_2023100112"
                                  },
                                  "UTC": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "An Xfuze timestamp represented in UTC e.g 2023-01-12T12:03:00.000+0000"
                                  },
                                  "Local": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "An Xfuze timestamp represented in local time e.g 2023-01-12T13:03:00.000+0100"
                                  },
                                  "PartyLocal": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "An Xfuze timestamp represented in party local time e.g 2023-01-12T13:03:00.000+0100"
                                  },
                                  "Millis": {
                                    "type": "number",
                                    "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                                  },
                                  "TimeZone": {
                                    "type": "string",
                                    "description": "The related time zone"
                                  },
                                  "Lineage": {
                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "EntityId": {
                                        "type": "string",
                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                      },
                                      "EventId": {
                                        "type": "string",
                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                      },
                                      "AsOf": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                      }
                                    },
                                    "required": [
                                      "EventId,AsOf"
                                    ]
                                  }
                                }
                              }
                            },
                            "Status": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "required": [
                                  "StatusCode"
                                ],
                                "unevaluatedProperties": false,
                                "properties": {
                                  "StatusClass": {
                                    "type": "string",
                                    "description": "The class of the status e.g Retail, Hire, TailorMe"
                                  },
                                  "StatusCode": {
                                    "type": "string",
                                    "description": "The (required) unique code for the status e.g ProcessingStatus"
                                  },
                                  "StatusDesc": {
                                    "type": "string",
                                    "description": "The description for the status e.g ProcessingStatus"
                                  },
                                  "SeqNo": {
                                    "type": "number",
                                    "description": "The sequence number of this status in relation to all the possible values in terms of time order e.g 2"
                                  },
                                  "ReasonCode": {
                                    "type": "string",
                                    "description": "A reason code for the status being in this state e.g Faulty Product"
                                  },
                                  "ReasonDesc": {
                                    "type": "string",
                                    "description": "A reason description for the status being in this state"
                                  },
                                  "Lineage": {
                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "EntityId": {
                                        "type": "string",
                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                      },
                                      "EventId": {
                                        "type": "string",
                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                      },
                                      "AsOf": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                      }
                                    },
                                    "required": [
                                      "EventId,AsOf"
                                    ]
                                  }
                                }
                              }
                            },
                            "Type": {
                              "type": "object",
                              "required": [
                                "TypeCode"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "TypeClass": {
                                  "type": "string",
                                  "description": "The class of the type e.g Concession, Hire"
                                },
                                "TypeCode": {
                                  "type": "string",
                                  "description": "The canonical code of the type e.g Sale"
                                },
                                "TypeDesc": {
                                  "type": "string",
                                  "description": "The description of the type e.g Sale Order Line"
                                },
                                "SubTypeCode": {
                                  "type": "string",
                                  "description": "The canonical code of the sub type e.g Sale"
                                },
                                "SubTypeDesc": {
                                  "type": "string",
                                  "description": "The description of the sub type e.g Sale Order Line"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            }
                          },
                          "required": [
                            "XRefIds",
                            "Times",
                            "Status",
                            "Type"
                          ]
                        }
                      ]
                    },
                    {
                      "properties": {
                        "LineIds": {
                          "description": "The (required) common set of order line Ids for this order line, not all a required individually, only what can be mapped & derived",
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "SalesOrderLineId": {
                              "type": "string",
                              "description": "The (required) SalesOrderLineId Id, in Xfuze canonical form, identifying this sales order line amongst other lines, in the form of SalesOrderLine::[type]_[sourceSystem]_[SalesOrderLineKey] e.g SalesOrder::Sale_PMC_123456789_1"
                            },
                            "SalesOrderLineNumberKey": {
                              "type": "string",
                              "description": "The 'natural' sales order line number key, typically either a combination of SalesOrderNumber & a 'sequence number' (derived) OR explicitly supplied unique Id from source - also used to construct the synthetic SOL Xfuze Ids. e.g 123456789_1"
                            },
                            "SalesOrderLineProductKey": {
                              "type": "string",
                              "description": "The 'natural' sales order line product key, typically either a combination of SalesOrderNumber & a 'product id' (e.g SKU, EAN) OR explicitly supplied unique Id from source - also used to construct the synthetic SOL Xfuze Ids. e.g 123456789_1201764"
                            },
                            "SalesOrderLineProductKeyType": {
                              "type": "string",
                              "description": "The type of the product part of SalesOrderLineProductKey e.g Sku, EAN"
                            },
                            "SalesOrderLineSeq": {
                              "type": "number",
                              "description": "The ordinal line sequence number e.g 2"
                            },
                            "OriginalSalesOrderLineId": {
                              "type": "string",
                              "description": "The SalesOrderLineId Id, in Xfuze canonical form, identifying an 'original' sales order, in the form of SalesOrder::[type]_[sourceSystem]_[OriginalSalesOrderKey] e.g SalesOrder::Sale_PMC_987654321"
                            },
                            "OriginalSalesOrderLineNumberKey": {
                              "type": "string",
                              "description": "The original 'natural' sales order 'key' / 'number', typically as a way to link related orders together the can be physically seperate and need a linking e.g Return,Exchange,"
                            },
                            "OriginalSalesOrderLineSeq": {
                              "type": "number",
                              "description": "The original ordinal line sequence number e.g 1"
                            },
                            "SalesOrderIds": {
                              "description": "The (required) common set of order Ids for this order, not all a required individually, only what can be mapped & derived",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "SalesOrderId": {
                                  "type": "string",
                                  "description": "The (required) SalesOrderId Id, in Xfuze canonical form, identifying this sales order, in the form of SalesOrder::[type]_[sourceSystem]_[SalesOrderKey] e.g SalesOrder::Return_PMC_RET123456789"
                                },
                                "SalesOrderKey": {
                                  "type": "string",
                                  "description": "The (required) 'natural' sales order key/number, typically as the system of entry defines (online or retail), and also used to construct the synthetic SO Xfuze Ids. e.g RET123456789"
                                },
                                "OriginalSalesOrderId": {
                                  "type": "string",
                                  "description": "The SalesOrderId Id, in Xfuze canonical form, identifying an 'original' sales order, in the form of SalesOrder::[type]_[sourceSystem]_[OriginalSalesOrderKey] e.g SalesOrder::Sale_PMC_987654321"
                                },
                                "OriginalSalesOrderKey": {
                                  "type": "string",
                                  "description": "The original 'natural' sales order key/number, typically as a way to link related orders together the can be physically separate and need a linking (Return,Exchange etc) e.g 987654321"
                                },
                                "ParentSalesOrderId": {
                                  "type": "string",
                                  "description": "The SalesOrderId Id, in Xfuze canonical form, identifying an 'original' sales order, in the form of SalesOrder::[type]_[sourceSystem]_[OriginalSalesOrderKey] e.g SalesOrder::Sale_PMC_987654321"
                                },
                                "ParentSalesOrderKey": {
                                  "type": "string",
                                  "description": "The parent 'natural' sales order key/number, typically as a way to link to parent orders in an order hierarchy, where one child order has a single parent e.g HireOrder parent order sits above individual hire orders for formal wear hire. NOTE: SalesOrderId should contain a parent part if this is the case in its ID construction "
                                },
                                "SalesOrderReferenceNumber": {
                                  "type": "string",
                                  "description": "The customer facing reference number/code, as a customer would see externally, as opposed to an internal key e.g ORD-RET-2044534"
                                },
                                "OriginalSalesOrderReferenceNumber": {
                                  "type": "string",
                                  "description": "The original 'natural' customer facing reference number/code, typically as a way to link related order together (Return,Exchange) e.g ORD-2044534"
                                },
                                "ReceiptNumber": {
                                  "type": "string",
                                  "description": "The customer facing receipt number/code, as a customer would see externally, as opposed to an internal key e.g ORD-RET-2044534"
                                },
                                "OriginalReceiptNumber": {
                                  "type": "string",
                                  "description": "The original 'natural' customer facing receipt number/code, typically as a way to link related order together (Return,Exchange) e.g ORD-2044534"
                                }
                              },
                              "required": [
                                "SalesOrderId",
                                "SalesOrderNumber"
                              ]
                            }
                          },
                          "required": [
                            "SalesOrderId",
                            "SalesOrderNumber",
                            "SalesOrderLineId",
                            "SalesOrderLineKey"
                          ]
                        },
                        "Channels": {
                          "type": "object",
                          "description": "The collection of channels related to the line.  Typically explicitly defined at header level, however, not always and thus sometimes occurs on this level",
                          "unevaluatedProperties": false,
                          "properties": {
                            "SalesChannel": {
                              "description": "The channel/touchpoint of the original sale/purchase of the line",
                              "type": "object",
                              "required": [
                                "ChannelCode"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "ChannelId": {
                                  "type": "string",
                                  "description": "The canonical (synthetic) Xfuze channel id, if the channel is identifiable, format Channel_[sourceSystem]_[ChannelNumber] e.g Channel_D365_012"
                                },
                                "ChannelNumber": {
                                  "type": "string",
                                  "description": "The native channel number from source, if the channel is identifiable e.g 012"
                                },
                                "ChannelNumberType": {
                                  "type": "string",
                                  "description": "The type of the channel number e.g Store, DC etc"
                                },
                                "ChannelClass": {
                                  "type": "string",
                                  "description": "The native channel number from source, if the channel is identifiable e.g Concessions",
                                  "enum": [
                                    "Digital",
                                    "Retail",
                                    "Concession",
                                    "Marketplace",
                                    "Direct",
                                    "Wholesale",
                                    "Outlet",
                                    "Other"
                                  ]
                                },
                                "ChannelCode": {
                                  "type": "string",
                                  "description": "The unique code of the channel where the transaction occurred e.g Web, Retail",
                                  "enum": [
                                    "Retail",
                                    "Online",
                                    "Mobile",
                                    "Outlet",
                                    "Kiosk",
                                    "VendingMachine",
                                    "Social",
                                    "Printed",
                                    "Subscription",
                                    "Employee",
                                    "Speciality",
                                    "Other"
                                  ]
                                },
                                "ChannelPurpose": {
                                  "type": "string",
                                  "description": "The purpose of the channel usage e.g Sales, Return, Collection",
                                  "enum": [
                                    "Sale",
                                    "Return",
                                    "Exchange",
                                    "Collection",
                                    "Distribution",
                                    "Support",
                                    "Other"
                                  ]
                                },
                                "ChannelType": {
                                  "type": "string",
                                  "description": "The class e.g Selling and type e.g B2B, B2C, Partner of the channel",
                                  "enum": [
                                    "B2C",
                                    "B2B",
                                    "Partner",
                                    "Wholesale",
                                    "Franchise",
                                    "Other"
                                  ]
                                },
                                "ChannelName": {
                                  "type": "string",
                                  "description": "The name of the channel e.g John Lewis Concession"
                                },
                                "Country": {
                                  "description": "The country of the channel",
                                  "type": "object",
                                  "anyOf": [
                                    {
                                      "required": [
                                        "ISO2"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "ISO3"
                                      ]
                                    }
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "ISO2": {
                                      "type": "string",
                                      "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                    },
                                    "ISO3": {
                                      "type": "string",
                                      "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                    },
                                    "CountryCode": {
                                      "type": "string",
                                      "description": "The canonical CountryCode (country-code) country code e.g 036"
                                    },
                                    "Name": {
                                      "type": "string",
                                      "description": "The canonical (official) 'Name' of the country e.g Australia"
                                    },
                                    "AltName": {
                                      "type": "string",
                                      "description": "An alternate name for the country"
                                    },
                                    "RegionCode": {
                                      "type": "string",
                                      "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                    },
                                    "RegionName": {
                                      "type": "string",
                                      "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                    },
                                    "SubRegionCode": {
                                      "type": "string",
                                      "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                    },
                                    "SubRegionName": {
                                      "type": "string",
                                      "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                    },
                                    "IntermediateRegionCode": {
                                      "type": "string",
                                      "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                    },
                                    "IntermediateRegionName": {
                                      "type": "string",
                                      "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                    },
                                    "Coordinates": {
                                      "description": "The canonical Coordinates of the country (canonical from google)",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Latitude": {
                                          "type": "number",
                                          "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                          "minimum": -90,
                                          "maximum": 90
                                        },
                                        "Longitude": {
                                          "type": "number",
                                          "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                          "minimum": -180,
                                          "maximum": 180
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "Latitude",
                                        "Longitude"
                                      ]
                                    },
                                    "PrimaryLanguage": {
                                      "type": "string",
                                      "description": "The canonical Primary Language of the country"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency Code of the country (canonical from google)",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "IsEuropeanCountry": {
                                      "type": "string",
                                      "description": "Is this country an european one? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "TouchPoint": {
                                  "description": "The touch-point 'system' details of the channel interaction",
                                  "type": "object",
                                  "required": [
                                    "TouchPointCode"
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "TouchPointId": {
                                      "type": "string",
                                      "description": "The canonical (synthetic) Xfuze touch point id, if the touch point is identifiable, format TouchPoint_[sourceSystem]_[TouchPointNumber] e.g TouchPoint_D365_012"
                                    },
                                    "TouchPointNumber": {
                                      "type": "string",
                                      "description": "The native touch point number from source, if the touch point is identifiable e.g 012"
                                    },
                                    "TouchPointClass": {
                                      "type": "string",
                                      "description": "The class of the touch-point device used for the transaction e.g ConsumerDigital",
                                      "enum": [
                                        "ConsumerDigital",
                                        "RetailerDigital",
                                        "RetailerPhysical",
                                        "Other"
                                      ]
                                    },
                                    "TouchPointDeviceType": {
                                      "type": "string",
                                      "description": "The class of the touch-point device used for the transaction e.g Tablet",
                                      "enum": [
                                        "Tablet",
                                        "Mobile",
                                        "Kiosk",
                                        "POS",
                                        "mPOS",
                                        "VendingMachine",
                                        "Wearable",
                                        "QRCodeReader",
                                        "TV",
                                        "Scanner",
                                        "PaymentDevice",
                                        "Other"
                                      ]
                                    },
                                    "TouchPointSystem": {
                                      "type": "string",
                                      "description": "The touch-point system the transaction originated from, if it has a name e.g eBasket, EndlessAisle"
                                    },
                                    "TerminalId": {
                                      "type": "string",
                                      "description": "The terminal Id if identifiable"
                                    },
                                    "ExternalTerminalId": {
                                      "type": "string",
                                      "description": "The external terminal id ifidentifiable"
                                    },
                                    "Device": {
                                      "description": "The devive details of the device used in the context of this touch point",
                                      "type": "object",
                                      "required": [
                                        "DeviceType"
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "DeviceId": {
                                          "type": "string",
                                          "description": "The canonical (synthetic) Xfuze device id, if the touch point is identifiable, format Device_[sourceSystem]_[DeviceNumber] e.g Device_D365_012"
                                        },
                                        "DeviceNumber": {
                                          "type": "string",
                                          "description": "The native device number from source, if identifiable e.g 012"
                                        },
                                        "DeviceClass": {
                                          "type": "string",
                                          "description": "The class of the device e.g ConsumerDigital",
                                          "enum": [
                                            "ConsumerDigital",
                                            "RetailerDigital",
                                            "RetailerPhysical",
                                            "Other"
                                          ]
                                        },
                                        "DeviceType": {
                                          "type": "string",
                                          "description": "The type of the device e.g Tablet",
                                          "enum": [
                                            "Tablet",
                                            "Mobile",
                                            "Kiosk",
                                            "POS",
                                            "mPOS",
                                            "VendingMachine",
                                            "Wearable",
                                            "QRCodeReader",
                                            "TV",
                                            "Scanner",
                                            "PaymentDevice",
                                            "Other"
                                          ]
                                        },
                                        "ExternalDeviceId": {
                                          "type": "string",
                                          "description": "The external device id if the device is identifiable"
                                        },
                                        "OS": {
                                          "type": "string",
                                          "description": "The operating system of the device"
                                        },
                                        "OSVersion": {
                                          "type": "string",
                                          "description": "The operating system version of the device"
                                        },
                                        "Model": {
                                          "type": "string",
                                          "description": "The model of the device"
                                        },
                                        "Brand": {
                                          "type": "string",
                                          "description": "The brand of the device"
                                        },
                                        "UserAgent": {
                                          "type": "string",
                                          "description": "The user agent of the device"
                                        },
                                        "Browser": {
                                          "type": "string",
                                          "description": "The browser of the device"
                                        },
                                        "BrowserType": {
                                          "type": "string",
                                          "description": "The browser type of the device"
                                        },
                                        "BrowserVersion": {
                                          "type": "string",
                                          "description": "The browser version of the device"
                                        },
                                        "BrowserWidth": {
                                          "type": "string",
                                          "description": "The browser screen width of the device"
                                        },
                                        "BrowserHeight": {
                                          "type": "string",
                                          "description": "The browser screen height of the device"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "IPAddress": {
                                      "type": "string",
                                      "description": "The IP address of the touch-point device"
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "ReasonCode": {
                                  "type": "string",
                                  "description": "The reason for this channel"
                                },
                                "ReasonDesc": {
                                  "type": "string",
                                  "description": "The reason desc for this channel"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "ReturnChannel": {
                              "description": "The channel/touchpoint of the return/refund of the line",
                              "type": "object",
                              "required": [
                                "ChannelCode"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "ChannelId": {
                                  "type": "string",
                                  "description": "The canonical (synthetic) Xfuze channel id, if the channel is identifiable, format Channel_[sourceSystem]_[ChannelNumber] e.g Channel_D365_012"
                                },
                                "ChannelNumber": {
                                  "type": "string",
                                  "description": "The native channel number from source, if the channel is identifiable e.g 012"
                                },
                                "ChannelNumberType": {
                                  "type": "string",
                                  "description": "The type of the channel number e.g Store, DC etc"
                                },
                                "ChannelClass": {
                                  "type": "string",
                                  "description": "The native channel number from source, if the channel is identifiable e.g Concessions",
                                  "enum": [
                                    "Digital",
                                    "Retail",
                                    "Concession",
                                    "Marketplace",
                                    "Direct",
                                    "Wholesale",
                                    "Outlet",
                                    "Other"
                                  ]
                                },
                                "ChannelCode": {
                                  "type": "string",
                                  "description": "The unique code of the channel where the transaction occurred e.g Web, Retail",
                                  "enum": [
                                    "Retail",
                                    "Online",
                                    "Mobile",
                                    "Outlet",
                                    "Kiosk",
                                    "VendingMachine",
                                    "Social",
                                    "Printed",
                                    "Subscription",
                                    "Employee",
                                    "Speciality",
                                    "Other"
                                  ]
                                },
                                "ChannelPurpose": {
                                  "type": "string",
                                  "description": "The purpose of the channel usage e.g Sales, Return, Collection",
                                  "enum": [
                                    "Sale",
                                    "Return",
                                    "Exchange",
                                    "Collection",
                                    "Distribution",
                                    "Support",
                                    "Other"
                                  ]
                                },
                                "ChannelType": {
                                  "type": "string",
                                  "description": "The class e.g Selling and type e.g B2B, B2C, Partner of the channel",
                                  "enum": [
                                    "B2C",
                                    "B2B",
                                    "Partner",
                                    "Wholesale",
                                    "Franchise",
                                    "Other"
                                  ]
                                },
                                "ChannelName": {
                                  "type": "string",
                                  "description": "The name of the channel e.g John Lewis Concession"
                                },
                                "Country": {
                                  "description": "The country of the channel",
                                  "type": "object",
                                  "anyOf": [
                                    {
                                      "required": [
                                        "ISO2"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "ISO3"
                                      ]
                                    }
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "ISO2": {
                                      "type": "string",
                                      "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                    },
                                    "ISO3": {
                                      "type": "string",
                                      "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                    },
                                    "CountryCode": {
                                      "type": "string",
                                      "description": "The canonical CountryCode (country-code) country code e.g 036"
                                    },
                                    "Name": {
                                      "type": "string",
                                      "description": "The canonical (official) 'Name' of the country e.g Australia"
                                    },
                                    "AltName": {
                                      "type": "string",
                                      "description": "An alternate name for the country"
                                    },
                                    "RegionCode": {
                                      "type": "string",
                                      "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                    },
                                    "RegionName": {
                                      "type": "string",
                                      "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                    },
                                    "SubRegionCode": {
                                      "type": "string",
                                      "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                    },
                                    "SubRegionName": {
                                      "type": "string",
                                      "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                    },
                                    "IntermediateRegionCode": {
                                      "type": "string",
                                      "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                    },
                                    "IntermediateRegionName": {
                                      "type": "string",
                                      "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                    },
                                    "Coordinates": {
                                      "description": "The canonical Coordinates of the country (canonical from google)",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Latitude": {
                                          "type": "number",
                                          "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                          "minimum": -90,
                                          "maximum": 90
                                        },
                                        "Longitude": {
                                          "type": "number",
                                          "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                          "minimum": -180,
                                          "maximum": 180
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "Latitude",
                                        "Longitude"
                                      ]
                                    },
                                    "PrimaryLanguage": {
                                      "type": "string",
                                      "description": "The canonical Primary Language of the country"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency Code of the country (canonical from google)",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "IsEuropeanCountry": {
                                      "type": "string",
                                      "description": "Is this country an european one? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "TouchPoint": {
                                  "description": "The touch-point 'system' details of the channel interaction",
                                  "type": "object",
                                  "required": [
                                    "TouchPointCode"
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "TouchPointId": {
                                      "type": "string",
                                      "description": "The canonical (synthetic) Xfuze touch point id, if the touch point is identifiable, format TouchPoint_[sourceSystem]_[TouchPointNumber] e.g TouchPoint_D365_012"
                                    },
                                    "TouchPointNumber": {
                                      "type": "string",
                                      "description": "The native touch point number from source, if the touch point is identifiable e.g 012"
                                    },
                                    "TouchPointClass": {
                                      "type": "string",
                                      "description": "The class of the touch-point device used for the transaction e.g ConsumerDigital",
                                      "enum": [
                                        "ConsumerDigital",
                                        "RetailerDigital",
                                        "RetailerPhysical",
                                        "Other"
                                      ]
                                    },
                                    "TouchPointDeviceType": {
                                      "type": "string",
                                      "description": "The class of the touch-point device used for the transaction e.g Tablet",
                                      "enum": [
                                        "Tablet",
                                        "Mobile",
                                        "Kiosk",
                                        "POS",
                                        "mPOS",
                                        "VendingMachine",
                                        "Wearable",
                                        "QRCodeReader",
                                        "TV",
                                        "Scanner",
                                        "PaymentDevice",
                                        "Other"
                                      ]
                                    },
                                    "TouchPointSystem": {
                                      "type": "string",
                                      "description": "The touch-point system the transaction originated from, if it has a name e.g eBasket, EndlessAisle"
                                    },
                                    "TerminalId": {
                                      "type": "string",
                                      "description": "The terminal Id if identifiable"
                                    },
                                    "ExternalTerminalId": {
                                      "type": "string",
                                      "description": "The external terminal id ifidentifiable"
                                    },
                                    "Device": {
                                      "description": "The devive details of the device used in the context of this touch point",
                                      "type": "object",
                                      "required": [
                                        "DeviceType"
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "DeviceId": {
                                          "type": "string",
                                          "description": "The canonical (synthetic) Xfuze device id, if the touch point is identifiable, format Device_[sourceSystem]_[DeviceNumber] e.g Device_D365_012"
                                        },
                                        "DeviceNumber": {
                                          "type": "string",
                                          "description": "The native device number from source, if identifiable e.g 012"
                                        },
                                        "DeviceClass": {
                                          "type": "string",
                                          "description": "The class of the device e.g ConsumerDigital",
                                          "enum": [
                                            "ConsumerDigital",
                                            "RetailerDigital",
                                            "RetailerPhysical",
                                            "Other"
                                          ]
                                        },
                                        "DeviceType": {
                                          "type": "string",
                                          "description": "The type of the device e.g Tablet",
                                          "enum": [
                                            "Tablet",
                                            "Mobile",
                                            "Kiosk",
                                            "POS",
                                            "mPOS",
                                            "VendingMachine",
                                            "Wearable",
                                            "QRCodeReader",
                                            "TV",
                                            "Scanner",
                                            "PaymentDevice",
                                            "Other"
                                          ]
                                        },
                                        "ExternalDeviceId": {
                                          "type": "string",
                                          "description": "The external device id if the device is identifiable"
                                        },
                                        "OS": {
                                          "type": "string",
                                          "description": "The operating system of the device"
                                        },
                                        "OSVersion": {
                                          "type": "string",
                                          "description": "The operating system version of the device"
                                        },
                                        "Model": {
                                          "type": "string",
                                          "description": "The model of the device"
                                        },
                                        "Brand": {
                                          "type": "string",
                                          "description": "The brand of the device"
                                        },
                                        "UserAgent": {
                                          "type": "string",
                                          "description": "The user agent of the device"
                                        },
                                        "Browser": {
                                          "type": "string",
                                          "description": "The browser of the device"
                                        },
                                        "BrowserType": {
                                          "type": "string",
                                          "description": "The browser type of the device"
                                        },
                                        "BrowserVersion": {
                                          "type": "string",
                                          "description": "The browser version of the device"
                                        },
                                        "BrowserWidth": {
                                          "type": "string",
                                          "description": "The browser screen width of the device"
                                        },
                                        "BrowserHeight": {
                                          "type": "string",
                                          "description": "The browser screen height of the device"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "IPAddress": {
                                      "type": "string",
                                      "description": "The IP address of the touch-point device"
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "ReasonCode": {
                                  "type": "string",
                                  "description": "The reason for this channel"
                                },
                                "ReasonDesc": {
                                  "type": "string",
                                  "description": "The reason desc for this channel"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "ExchangeChannel": {
                              "description": "The channel/touchpoint of the exchange of the line",
                              "type": "object",
                              "required": [
                                "ChannelCode"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "ChannelId": {
                                  "type": "string",
                                  "description": "The canonical (synthetic) Xfuze channel id, if the channel is identifiable, format Channel_[sourceSystem]_[ChannelNumber] e.g Channel_D365_012"
                                },
                                "ChannelNumber": {
                                  "type": "string",
                                  "description": "The native channel number from source, if the channel is identifiable e.g 012"
                                },
                                "ChannelNumberType": {
                                  "type": "string",
                                  "description": "The type of the channel number e.g Store, DC etc"
                                },
                                "ChannelClass": {
                                  "type": "string",
                                  "description": "The native channel number from source, if the channel is identifiable e.g Concessions",
                                  "enum": [
                                    "Digital",
                                    "Retail",
                                    "Concession",
                                    "Marketplace",
                                    "Direct",
                                    "Wholesale",
                                    "Outlet",
                                    "Other"
                                  ]
                                },
                                "ChannelCode": {
                                  "type": "string",
                                  "description": "The unique code of the channel where the transaction occurred e.g Web, Retail",
                                  "enum": [
                                    "Retail",
                                    "Online",
                                    "Mobile",
                                    "Outlet",
                                    "Kiosk",
                                    "VendingMachine",
                                    "Social",
                                    "Printed",
                                    "Subscription",
                                    "Employee",
                                    "Speciality",
                                    "Other"
                                  ]
                                },
                                "ChannelPurpose": {
                                  "type": "string",
                                  "description": "The purpose of the channel usage e.g Sales, Return, Collection",
                                  "enum": [
                                    "Sale",
                                    "Return",
                                    "Exchange",
                                    "Collection",
                                    "Distribution",
                                    "Support",
                                    "Other"
                                  ]
                                },
                                "ChannelType": {
                                  "type": "string",
                                  "description": "The class e.g Selling and type e.g B2B, B2C, Partner of the channel",
                                  "enum": [
                                    "B2C",
                                    "B2B",
                                    "Partner",
                                    "Wholesale",
                                    "Franchise",
                                    "Other"
                                  ]
                                },
                                "ChannelName": {
                                  "type": "string",
                                  "description": "The name of the channel e.g John Lewis Concession"
                                },
                                "Country": {
                                  "description": "The country of the channel",
                                  "type": "object",
                                  "anyOf": [
                                    {
                                      "required": [
                                        "ISO2"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "ISO3"
                                      ]
                                    }
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "ISO2": {
                                      "type": "string",
                                      "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                    },
                                    "ISO3": {
                                      "type": "string",
                                      "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                    },
                                    "CountryCode": {
                                      "type": "string",
                                      "description": "The canonical CountryCode (country-code) country code e.g 036"
                                    },
                                    "Name": {
                                      "type": "string",
                                      "description": "The canonical (official) 'Name' of the country e.g Australia"
                                    },
                                    "AltName": {
                                      "type": "string",
                                      "description": "An alternate name for the country"
                                    },
                                    "RegionCode": {
                                      "type": "string",
                                      "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                    },
                                    "RegionName": {
                                      "type": "string",
                                      "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                    },
                                    "SubRegionCode": {
                                      "type": "string",
                                      "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                    },
                                    "SubRegionName": {
                                      "type": "string",
                                      "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                    },
                                    "IntermediateRegionCode": {
                                      "type": "string",
                                      "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                    },
                                    "IntermediateRegionName": {
                                      "type": "string",
                                      "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                    },
                                    "Coordinates": {
                                      "description": "The canonical Coordinates of the country (canonical from google)",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Latitude": {
                                          "type": "number",
                                          "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                          "minimum": -90,
                                          "maximum": 90
                                        },
                                        "Longitude": {
                                          "type": "number",
                                          "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                          "minimum": -180,
                                          "maximum": 180
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "Latitude",
                                        "Longitude"
                                      ]
                                    },
                                    "PrimaryLanguage": {
                                      "type": "string",
                                      "description": "The canonical Primary Language of the country"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency Code of the country (canonical from google)",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "IsEuropeanCountry": {
                                      "type": "string",
                                      "description": "Is this country an european one? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "TouchPoint": {
                                  "description": "The touch-point 'system' details of the channel interaction",
                                  "type": "object",
                                  "required": [
                                    "TouchPointCode"
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "TouchPointId": {
                                      "type": "string",
                                      "description": "The canonical (synthetic) Xfuze touch point id, if the touch point is identifiable, format TouchPoint_[sourceSystem]_[TouchPointNumber] e.g TouchPoint_D365_012"
                                    },
                                    "TouchPointNumber": {
                                      "type": "string",
                                      "description": "The native touch point number from source, if the touch point is identifiable e.g 012"
                                    },
                                    "TouchPointClass": {
                                      "type": "string",
                                      "description": "The class of the touch-point device used for the transaction e.g ConsumerDigital",
                                      "enum": [
                                        "ConsumerDigital",
                                        "RetailerDigital",
                                        "RetailerPhysical",
                                        "Other"
                                      ]
                                    },
                                    "TouchPointDeviceType": {
                                      "type": "string",
                                      "description": "The class of the touch-point device used for the transaction e.g Tablet",
                                      "enum": [
                                        "Tablet",
                                        "Mobile",
                                        "Kiosk",
                                        "POS",
                                        "mPOS",
                                        "VendingMachine",
                                        "Wearable",
                                        "QRCodeReader",
                                        "TV",
                                        "Scanner",
                                        "PaymentDevice",
                                        "Other"
                                      ]
                                    },
                                    "TouchPointSystem": {
                                      "type": "string",
                                      "description": "The touch-point system the transaction originated from, if it has a name e.g eBasket, EndlessAisle"
                                    },
                                    "TerminalId": {
                                      "type": "string",
                                      "description": "The terminal Id if identifiable"
                                    },
                                    "ExternalTerminalId": {
                                      "type": "string",
                                      "description": "The external terminal id ifidentifiable"
                                    },
                                    "Device": {
                                      "description": "The devive details of the device used in the context of this touch point",
                                      "type": "object",
                                      "required": [
                                        "DeviceType"
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "DeviceId": {
                                          "type": "string",
                                          "description": "The canonical (synthetic) Xfuze device id, if the touch point is identifiable, format Device_[sourceSystem]_[DeviceNumber] e.g Device_D365_012"
                                        },
                                        "DeviceNumber": {
                                          "type": "string",
                                          "description": "The native device number from source, if identifiable e.g 012"
                                        },
                                        "DeviceClass": {
                                          "type": "string",
                                          "description": "The class of the device e.g ConsumerDigital",
                                          "enum": [
                                            "ConsumerDigital",
                                            "RetailerDigital",
                                            "RetailerPhysical",
                                            "Other"
                                          ]
                                        },
                                        "DeviceType": {
                                          "type": "string",
                                          "description": "The type of the device e.g Tablet",
                                          "enum": [
                                            "Tablet",
                                            "Mobile",
                                            "Kiosk",
                                            "POS",
                                            "mPOS",
                                            "VendingMachine",
                                            "Wearable",
                                            "QRCodeReader",
                                            "TV",
                                            "Scanner",
                                            "PaymentDevice",
                                            "Other"
                                          ]
                                        },
                                        "ExternalDeviceId": {
                                          "type": "string",
                                          "description": "The external device id if the device is identifiable"
                                        },
                                        "OS": {
                                          "type": "string",
                                          "description": "The operating system of the device"
                                        },
                                        "OSVersion": {
                                          "type": "string",
                                          "description": "The operating system version of the device"
                                        },
                                        "Model": {
                                          "type": "string",
                                          "description": "The model of the device"
                                        },
                                        "Brand": {
                                          "type": "string",
                                          "description": "The brand of the device"
                                        },
                                        "UserAgent": {
                                          "type": "string",
                                          "description": "The user agent of the device"
                                        },
                                        "Browser": {
                                          "type": "string",
                                          "description": "The browser of the device"
                                        },
                                        "BrowserType": {
                                          "type": "string",
                                          "description": "The browser type of the device"
                                        },
                                        "BrowserVersion": {
                                          "type": "string",
                                          "description": "The browser version of the device"
                                        },
                                        "BrowserWidth": {
                                          "type": "string",
                                          "description": "The browser screen width of the device"
                                        },
                                        "BrowserHeight": {
                                          "type": "string",
                                          "description": "The browser screen height of the device"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "IPAddress": {
                                      "type": "string",
                                      "description": "The IP address of the touch-point device"
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "ReasonCode": {
                                  "type": "string",
                                  "description": "The reason for this channel"
                                },
                                "ReasonDesc": {
                                  "type": "string",
                                  "description": "The reason desc for this channel"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "FulfilmentChannel": {
                              "description": "The channel/touchpoint of the fulfilment of the line",
                              "type": "object",
                              "required": [
                                "ChannelCode"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "ChannelId": {
                                  "type": "string",
                                  "description": "The canonical (synthetic) Xfuze channel id, if the channel is identifiable, format Channel_[sourceSystem]_[ChannelNumber] e.g Channel_D365_012"
                                },
                                "ChannelNumber": {
                                  "type": "string",
                                  "description": "The native channel number from source, if the channel is identifiable e.g 012"
                                },
                                "ChannelNumberType": {
                                  "type": "string",
                                  "description": "The type of the channel number e.g Store, DC etc"
                                },
                                "ChannelClass": {
                                  "type": "string",
                                  "description": "The native channel number from source, if the channel is identifiable e.g Concessions",
                                  "enum": [
                                    "Digital",
                                    "Retail",
                                    "Concession",
                                    "Marketplace",
                                    "Direct",
                                    "Wholesale",
                                    "Outlet",
                                    "Other"
                                  ]
                                },
                                "ChannelCode": {
                                  "type": "string",
                                  "description": "The unique code of the channel where the transaction occurred e.g Web, Retail",
                                  "enum": [
                                    "Retail",
                                    "Online",
                                    "Mobile",
                                    "Outlet",
                                    "Kiosk",
                                    "VendingMachine",
                                    "Social",
                                    "Printed",
                                    "Subscription",
                                    "Employee",
                                    "Speciality",
                                    "Other"
                                  ]
                                },
                                "ChannelPurpose": {
                                  "type": "string",
                                  "description": "The purpose of the channel usage e.g Sales, Return, Collection",
                                  "enum": [
                                    "Sale",
                                    "Return",
                                    "Exchange",
                                    "Collection",
                                    "Distribution",
                                    "Support",
                                    "Other"
                                  ]
                                },
                                "ChannelType": {
                                  "type": "string",
                                  "description": "The class e.g Selling and type e.g B2B, B2C, Partner of the channel",
                                  "enum": [
                                    "B2C",
                                    "B2B",
                                    "Partner",
                                    "Wholesale",
                                    "Franchise",
                                    "Other"
                                  ]
                                },
                                "ChannelName": {
                                  "type": "string",
                                  "description": "The name of the channel e.g John Lewis Concession"
                                },
                                "Country": {
                                  "description": "The country of the channel",
                                  "type": "object",
                                  "anyOf": [
                                    {
                                      "required": [
                                        "ISO2"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "ISO3"
                                      ]
                                    }
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "ISO2": {
                                      "type": "string",
                                      "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                    },
                                    "ISO3": {
                                      "type": "string",
                                      "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                    },
                                    "CountryCode": {
                                      "type": "string",
                                      "description": "The canonical CountryCode (country-code) country code e.g 036"
                                    },
                                    "Name": {
                                      "type": "string",
                                      "description": "The canonical (official) 'Name' of the country e.g Australia"
                                    },
                                    "AltName": {
                                      "type": "string",
                                      "description": "An alternate name for the country"
                                    },
                                    "RegionCode": {
                                      "type": "string",
                                      "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                    },
                                    "RegionName": {
                                      "type": "string",
                                      "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                    },
                                    "SubRegionCode": {
                                      "type": "string",
                                      "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                    },
                                    "SubRegionName": {
                                      "type": "string",
                                      "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                    },
                                    "IntermediateRegionCode": {
                                      "type": "string",
                                      "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                    },
                                    "IntermediateRegionName": {
                                      "type": "string",
                                      "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                    },
                                    "Coordinates": {
                                      "description": "The canonical Coordinates of the country (canonical from google)",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Latitude": {
                                          "type": "number",
                                          "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                          "minimum": -90,
                                          "maximum": 90
                                        },
                                        "Longitude": {
                                          "type": "number",
                                          "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                          "minimum": -180,
                                          "maximum": 180
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "Latitude",
                                        "Longitude"
                                      ]
                                    },
                                    "PrimaryLanguage": {
                                      "type": "string",
                                      "description": "The canonical Primary Language of the country"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency Code of the country (canonical from google)",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "IsEuropeanCountry": {
                                      "type": "string",
                                      "description": "Is this country an european one? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "TouchPoint": {
                                  "description": "The touch-point 'system' details of the channel interaction",
                                  "type": "object",
                                  "required": [
                                    "TouchPointCode"
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "TouchPointId": {
                                      "type": "string",
                                      "description": "The canonical (synthetic) Xfuze touch point id, if the touch point is identifiable, format TouchPoint_[sourceSystem]_[TouchPointNumber] e.g TouchPoint_D365_012"
                                    },
                                    "TouchPointNumber": {
                                      "type": "string",
                                      "description": "The native touch point number from source, if the touch point is identifiable e.g 012"
                                    },
                                    "TouchPointClass": {
                                      "type": "string",
                                      "description": "The class of the touch-point device used for the transaction e.g ConsumerDigital",
                                      "enum": [
                                        "ConsumerDigital",
                                        "RetailerDigital",
                                        "RetailerPhysical",
                                        "Other"
                                      ]
                                    },
                                    "TouchPointDeviceType": {
                                      "type": "string",
                                      "description": "The class of the touch-point device used for the transaction e.g Tablet",
                                      "enum": [
                                        "Tablet",
                                        "Mobile",
                                        "Kiosk",
                                        "POS",
                                        "mPOS",
                                        "VendingMachine",
                                        "Wearable",
                                        "QRCodeReader",
                                        "TV",
                                        "Scanner",
                                        "PaymentDevice",
                                        "Other"
                                      ]
                                    },
                                    "TouchPointSystem": {
                                      "type": "string",
                                      "description": "The touch-point system the transaction originated from, if it has a name e.g eBasket, EndlessAisle"
                                    },
                                    "TerminalId": {
                                      "type": "string",
                                      "description": "The terminal Id if identifiable"
                                    },
                                    "ExternalTerminalId": {
                                      "type": "string",
                                      "description": "The external terminal id ifidentifiable"
                                    },
                                    "Device": {
                                      "description": "The devive details of the device used in the context of this touch point",
                                      "type": "object",
                                      "required": [
                                        "DeviceType"
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "DeviceId": {
                                          "type": "string",
                                          "description": "The canonical (synthetic) Xfuze device id, if the touch point is identifiable, format Device_[sourceSystem]_[DeviceNumber] e.g Device_D365_012"
                                        },
                                        "DeviceNumber": {
                                          "type": "string",
                                          "description": "The native device number from source, if identifiable e.g 012"
                                        },
                                        "DeviceClass": {
                                          "type": "string",
                                          "description": "The class of the device e.g ConsumerDigital",
                                          "enum": [
                                            "ConsumerDigital",
                                            "RetailerDigital",
                                            "RetailerPhysical",
                                            "Other"
                                          ]
                                        },
                                        "DeviceType": {
                                          "type": "string",
                                          "description": "The type of the device e.g Tablet",
                                          "enum": [
                                            "Tablet",
                                            "Mobile",
                                            "Kiosk",
                                            "POS",
                                            "mPOS",
                                            "VendingMachine",
                                            "Wearable",
                                            "QRCodeReader",
                                            "TV",
                                            "Scanner",
                                            "PaymentDevice",
                                            "Other"
                                          ]
                                        },
                                        "ExternalDeviceId": {
                                          "type": "string",
                                          "description": "The external device id if the device is identifiable"
                                        },
                                        "OS": {
                                          "type": "string",
                                          "description": "The operating system of the device"
                                        },
                                        "OSVersion": {
                                          "type": "string",
                                          "description": "The operating system version of the device"
                                        },
                                        "Model": {
                                          "type": "string",
                                          "description": "The model of the device"
                                        },
                                        "Brand": {
                                          "type": "string",
                                          "description": "The brand of the device"
                                        },
                                        "UserAgent": {
                                          "type": "string",
                                          "description": "The user agent of the device"
                                        },
                                        "Browser": {
                                          "type": "string",
                                          "description": "The browser of the device"
                                        },
                                        "BrowserType": {
                                          "type": "string",
                                          "description": "The browser type of the device"
                                        },
                                        "BrowserVersion": {
                                          "type": "string",
                                          "description": "The browser version of the device"
                                        },
                                        "BrowserWidth": {
                                          "type": "string",
                                          "description": "The browser screen width of the device"
                                        },
                                        "BrowserHeight": {
                                          "type": "string",
                                          "description": "The browser screen height of the device"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "IPAddress": {
                                      "type": "string",
                                      "description": "The IP address of the touch-point device"
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "ReasonCode": {
                                  "type": "string",
                                  "description": "The reason for this channel"
                                },
                                "ReasonDesc": {
                                  "type": "string",
                                  "description": "The reason desc for this channel"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "Locations": {
                          "type": "object",
                          "description": "The collection of channels related to this line.  Typically this sits at header level, however, not always and thus lines can support this.",
                          "unevaluatedProperties": false,
                          "properties": {
                            "SalesLocation": {
                              "description": "The location of the original sale/purchase of the line",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "LocationId": {
                                  "type": "string",
                                  "description": "The canonical (synthetic) SDV location ID format Location_[sourceSystem]_[LocationNumber] e.g Location_D365_010"
                                },
                                "LocationNodeId": {
                                  "type": "string",
                                  "description": "The specific node id in the location hierarchy"
                                },
                                "LocationNumber": {
                                  "type": "string",
                                  "description": "The 'native' location number of the location like a storeNumber e.g 010"
                                },
                                "LocationType": {
                                  "type": "string",
                                  "description": "The (core) type of the location e.g Warehouse, Store, Transit, Online"
                                },
                                "LocationShortName": {
                                  "type": "string",
                                  "description": "The (short / default) name of the location e.g GBC DC"
                                },
                                "HierarchyNode": {
                                  "description": "The specific hierarchy details of this location itself",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "NodeId": {
                                      "type": "string",
                                      "description": "The HierarchyId Id, in Xfuze canonical form, identifying this hierarchy node amongst other nodes, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Hierarchy::Category_Retail247_123456789"
                                    },
                                    "NodeKey": {
                                      "type": "string",
                                      "description": "The 'natural' hierarchy number"
                                    },
                                    "NodeCode": {
                                      "type": "string",
                                      "description": "The code of this hierarchy node/level"
                                    },
                                    "ParentNodeId": {
                                      "type": "string",
                                      "description": "The parent (direct parent) HierarchyId Id, in Xfuze canonical form, identifying this hierarchy node amongst other nodes, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Hierarchy::Category_Retail247_123456789"
                                    },
                                    "ParentNodeKey": {
                                      "type": "string",
                                      "description": "The 'natural' parent (direct parent) number"
                                    },
                                    "ParentNodeCode": {
                                      "type": "string",
                                      "description": "The code of this parent (direct parent) hierarchy node/level"
                                    },
                                    "NodeStatusCode": {
                                      "type": "string",
                                      "description": "The status code of this hierarchy node/level"
                                    },
                                    "NodeName": {
                                      "type": "string",
                                      "description": "The name of this hierarchy node/level"
                                    },
                                    "NodeClass": {
                                      "type": "string",
                                      "description": "The class of this hierarchy type depending on nature/usage of the hierarchy / node e.g Store, Product "
                                    },
                                    "NodeType": {
                                      "type": "string",
                                      "description": "The type of this hierarchy node/level itself depending on nature/usage of the hierarchy / node e.g Company level in a store heirarchy "
                                    },
                                    "NodeDesc": {
                                      "type": "string",
                                      "description": "The description of this hierarchy node/level"
                                    },
                                    "NodeLevel": {
                                      "type": "number",
                                      "description": "The number of the level of this level e.g 1..5"
                                    },
                                    "L1": {
                                      "type": "string",
                                      "description": "The hierarchy value for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L1Name": {
                                      "type": "string",
                                      "description": "The hierarchy name for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L1Type": {
                                      "type": "string",
                                      "description": "The hierarchy type for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L2": {
                                      "type": "string",
                                      "description": "The hierarchy value for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L2Name": {
                                      "type": "string",
                                      "description": "The hierarchy name for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L2Type": {
                                      "type": "string",
                                      "description": "The hierarchy type for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L3": {
                                      "type": "string",
                                      "description": "The hierarchy value for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L3Name": {
                                      "type": "string",
                                      "description": "The hierarchy name for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L3Type": {
                                      "type": "string",
                                      "description": "The hierarchy type for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L4": {
                                      "type": "string",
                                      "description": "The hierarchy value for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L4Name": {
                                      "type": "string",
                                      "description": "The hierarchy name for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L4Type": {
                                      "type": "string",
                                      "description": "The hierarchy type for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L5": {
                                      "type": "string",
                                      "description": "The hierarchy value for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L5Name": {
                                      "type": "string",
                                      "description": "The hierarchy name for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L5Type": {
                                      "type": "string",
                                      "description": "The hierarchy type for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "IsOverride": {
                                      "type": "string",
                                      "description": "Can this be overriden? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "IsChecked": {
                                      "type": "string",
                                      "description": "Has this been checked? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "Lang": {
                                      "type": "string",
                                      "description": "The language used for localisation of this hierarchy node/level"
                                    },
                                    "Locale": {
                                      "type": "string",
                                      "description": "The locale used for localisation of this hierarchy node/level"
                                    },
                                    "Keywords": {
                                      "type": "string",
                                      "description": "The keywords associated with the hierarchy node/level"
                                    },
                                    "Country": {
                                      "description": "The description of this hierarchy node/level",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "object",
                                        "description": "A country object, based on official ISO 3166",
                                        "anyOf": [
                                          {
                                            "required": [
                                              "ISO2"
                                            ]
                                          },
                                          {
                                            "required": [
                                              "ISO3"
                                            ]
                                          }
                                        ],
                                        "unevaluatedProperties": false,
                                        "properties": {
                                          "ISO2": {
                                            "type": "string",
                                            "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                          },
                                          "ISO3": {
                                            "type": "string",
                                            "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                          },
                                          "CountryCode": {
                                            "type": "string",
                                            "description": "The canonical CountryCode (country-code) country code e.g 036"
                                          },
                                          "Name": {
                                            "type": "string",
                                            "description": "The canonical (official) 'Name' of the country e.g Australia"
                                          },
                                          "AltName": {
                                            "type": "string",
                                            "description": "An alternate name for the country"
                                          },
                                          "RegionCode": {
                                            "type": "string",
                                            "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                          },
                                          "RegionName": {
                                            "type": "string",
                                            "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                          },
                                          "SubRegionCode": {
                                            "type": "string",
                                            "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                          },
                                          "SubRegionName": {
                                            "type": "string",
                                            "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                          },
                                          "IntermediateRegionCode": {
                                            "type": "string",
                                            "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                          },
                                          "IntermediateRegionName": {
                                            "type": "string",
                                            "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                          },
                                          "Coordinates": {
                                            "description": "The canonical Coordinates of the country (canonical from google)",
                                            "type": "object",
                                            "unevaluatedProperties": false,
                                            "properties": {
                                              "Latitude": {
                                                "type": "number",
                                                "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                                "minimum": -90,
                                                "maximum": 90
                                              },
                                              "Longitude": {
                                                "type": "number",
                                                "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                                "minimum": -180,
                                                "maximum": 180
                                              },
                                              "Lineage": {
                                                "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                "type": "object",
                                                "unevaluatedProperties": false,
                                                "properties": {
                                                  "EntityId": {
                                                    "type": "string",
                                                    "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                  },
                                                  "EventId": {
                                                    "type": "string",
                                                    "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                  },
                                                  "AsOf": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                  }
                                                },
                                                "required": [
                                                  "EventId,AsOf"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "Latitude",
                                              "Longitude"
                                            ]
                                          },
                                          "PrimaryLanguage": {
                                            "type": "string",
                                            "description": "The canonical Primary Language of the country"
                                          },
                                          "Currency": {
                                            "description": "The canonical Currency Code of the country (canonical from google)",
                                            "type": "object",
                                            "anyOf": [
                                              {
                                                "required": [
                                                  "ISO2"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "ISO3"
                                                ]
                                              }
                                            ],
                                            "unevaluatedProperties": false,
                                            "properties": {
                                              "ISO2": {
                                                "type": "string",
                                                "description": "The canonical ISO2 currency code"
                                              },
                                              "ISO3": {
                                                "type": "string",
                                                "description": "The canonical ISO3 currency code"
                                              },
                                              "Number": {
                                                "type": "string",
                                                "description": "The canonical currency number"
                                              },
                                              "DecimalPlaces": {
                                                "type": "string",
                                                "description": "The canonical number of decimal places for the currency"
                                              },
                                              "CountryCodes": {
                                                "type": "array",
                                                "description": "The canonical array of ISO3 country codes officially using this currency",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "Symbol": {
                                                "type": "string",
                                                "description": "The canonical symbol for the currency"
                                              },
                                              "Lineage": {
                                                "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                "type": "object",
                                                "unevaluatedProperties": false,
                                                "properties": {
                                                  "EntityId": {
                                                    "type": "string",
                                                    "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                  },
                                                  "EventId": {
                                                    "type": "string",
                                                    "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                  },
                                                  "AsOf": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                  }
                                                },
                                                "required": [
                                                  "EventId,AsOf"
                                                ]
                                              }
                                            }
                                          },
                                          "IsEuropeanCountry": {
                                            "type": "string",
                                            "description": "Is this country an european one? e.g Y",
                                            "enum": [
                                              "Y",
                                              "N",
                                              "U"
                                            ]
                                          },
                                          "Lineage": {
                                            "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                            "type": "object",
                                            "unevaluatedProperties": false,
                                            "properties": {
                                              "EntityId": {
                                                "type": "string",
                                                "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                              },
                                              "EventId": {
                                                "type": "string",
                                                "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                              },
                                              "AsOf": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                              }
                                            },
                                            "required": [
                                              "EventId,AsOf"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "Hierarchy": {
                                  "description": "The hierarchy (breadcrumbs) of the location in its hierarchy, typically L1 to L5",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "HierarchyId": {
                                      "type": "string",
                                      "description": "The Hierarchy Id, in Xfuze canonical form, identifying this hierarchy collection amongst other collections, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Location_Crew_1234567"
                                    },
                                    "HierarchyKey": {
                                      "type": "string",
                                      "description": "The 'natural' hierarchy collection key/number if identifiable"
                                    },
                                    "NumNodes": {
                                      "type": "number",
                                      "description": "The number of nodes in the collection"
                                    },
                                    "Nodes": {
                                      "type": "array",
                                      "description": "The collection of hierarchy nodes making up the hierarchy",
                                      "items": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "object",
                                          "description": "A generic hierarchy node, a 'level' in a generic hierarchy that can be used for things like a store or product category hierarchy",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "NodeId": {
                                              "type": "string",
                                              "description": "The HierarchyId Id, in Xfuze canonical form, identifying this hierarchy node amongst other nodes, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Hierarchy::Category_Retail247_123456789"
                                            },
                                            "NodeKey": {
                                              "type": "string",
                                              "description": "The 'natural' hierarchy number"
                                            },
                                            "NodeCode": {
                                              "type": "string",
                                              "description": "The code of this hierarchy node/level"
                                            },
                                            "ParentNodeId": {
                                              "type": "string",
                                              "description": "The parent (direct parent) HierarchyId Id, in Xfuze canonical form, identifying this hierarchy node amongst other nodes, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Hierarchy::Category_Retail247_123456789"
                                            },
                                            "ParentNodeKey": {
                                              "type": "string",
                                              "description": "The 'natural' parent (direct parent) number"
                                            },
                                            "ParentNodeCode": {
                                              "type": "string",
                                              "description": "The code of this parent (direct parent) hierarchy node/level"
                                            },
                                            "NodeStatusCode": {
                                              "type": "string",
                                              "description": "The status code of this hierarchy node/level"
                                            },
                                            "NodeName": {
                                              "type": "string",
                                              "description": "The name of this hierarchy node/level"
                                            },
                                            "NodeClass": {
                                              "type": "string",
                                              "description": "The class of this hierarchy type depending on nature/usage of the hierarchy / node e.g Store, Product "
                                            },
                                            "NodeType": {
                                              "type": "string",
                                              "description": "The type of this hierarchy node/level itself depending on nature/usage of the hierarchy / node e.g Company level in a store heirarchy "
                                            },
                                            "NodeDesc": {
                                              "type": "string",
                                              "description": "The description of this hierarchy node/level"
                                            },
                                            "NodeLevel": {
                                              "type": "number",
                                              "description": "The number of the level of this level e.g 1..5"
                                            },
                                            "L1": {
                                              "type": "string",
                                              "description": "The hierarchy value for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L1Name": {
                                              "type": "string",
                                              "description": "The hierarchy name for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L1Type": {
                                              "type": "string",
                                              "description": "The hierarchy type for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L2": {
                                              "type": "string",
                                              "description": "The hierarchy value for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L2Name": {
                                              "type": "string",
                                              "description": "The hierarchy name for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L2Type": {
                                              "type": "string",
                                              "description": "The hierarchy type for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L3": {
                                              "type": "string",
                                              "description": "The hierarchy value for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L3Name": {
                                              "type": "string",
                                              "description": "The hierarchy name for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L3Type": {
                                              "type": "string",
                                              "description": "The hierarchy type for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L4": {
                                              "type": "string",
                                              "description": "The hierarchy value for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L4Name": {
                                              "type": "string",
                                              "description": "The hierarchy name for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L4Type": {
                                              "type": "string",
                                              "description": "The hierarchy type for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L5": {
                                              "type": "string",
                                              "description": "The hierarchy value for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L5Name": {
                                              "type": "string",
                                              "description": "The hierarchy name for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L5Type": {
                                              "type": "string",
                                              "description": "The hierarchy type for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "IsOverride": {
                                              "type": "string",
                                              "description": "Can this be overriden? e.g Y",
                                              "enum": [
                                                "Y",
                                                "N",
                                                "U"
                                              ]
                                            },
                                            "IsChecked": {
                                              "type": "string",
                                              "description": "Has this been checked? e.g Y",
                                              "enum": [
                                                "Y",
                                                "N",
                                                "U"
                                              ]
                                            },
                                            "Lang": {
                                              "type": "string",
                                              "description": "The language used for localisation of this hierarchy node/level"
                                            },
                                            "Locale": {
                                              "type": "string",
                                              "description": "The locale used for localisation of this hierarchy node/level"
                                            },
                                            "Keywords": {
                                              "type": "string",
                                              "description": "The keywords associated with the hierarchy node/level"
                                            },
                                            "Country": {
                                              "description": "The description of this hierarchy node/level",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "object",
                                                "description": "A country object, based on official ISO 3166",
                                                "anyOf": [
                                                  {
                                                    "required": [
                                                      "ISO2"
                                                    ]
                                                  },
                                                  {
                                                    "required": [
                                                      "ISO3"
                                                    ]
                                                  }
                                                ],
                                                "unevaluatedProperties": false,
                                                "properties": {
                                                  "ISO2": {
                                                    "type": "string",
                                                    "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                                  },
                                                  "ISO3": {
                                                    "type": "string",
                                                    "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                                  },
                                                  "CountryCode": {
                                                    "type": "string",
                                                    "description": "The canonical CountryCode (country-code) country code e.g 036"
                                                  },
                                                  "Name": {
                                                    "type": "string",
                                                    "description": "The canonical (official) 'Name' of the country e.g Australia"
                                                  },
                                                  "AltName": {
                                                    "type": "string",
                                                    "description": "An alternate name for the country"
                                                  },
                                                  "RegionCode": {
                                                    "type": "string",
                                                    "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                                  },
                                                  "RegionName": {
                                                    "type": "string",
                                                    "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                                  },
                                                  "SubRegionCode": {
                                                    "type": "string",
                                                    "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                                  },
                                                  "SubRegionName": {
                                                    "type": "string",
                                                    "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                                  },
                                                  "IntermediateRegionCode": {
                                                    "type": "string",
                                                    "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                                  },
                                                  "IntermediateRegionName": {
                                                    "type": "string",
                                                    "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                                  },
                                                  "Coordinates": {
                                                    "description": "The canonical Coordinates of the country (canonical from google)",
                                                    "type": "object",
                                                    "unevaluatedProperties": false,
                                                    "properties": {
                                                      "Latitude": {
                                                        "type": "number",
                                                        "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                                        "minimum": -90,
                                                        "maximum": 90
                                                      },
                                                      "Longitude": {
                                                        "type": "number",
                                                        "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                                        "minimum": -180,
                                                        "maximum": 180
                                                      },
                                                      "Lineage": {
                                                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                        "type": "object",
                                                        "unevaluatedProperties": false,
                                                        "properties": {
                                                          "EntityId": {
                                                            "type": "string",
                                                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                          },
                                                          "EventId": {
                                                            "type": "string",
                                                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                          },
                                                          "AsOf": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                          }
                                                        },
                                                        "required": [
                                                          "EventId,AsOf"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "Latitude",
                                                      "Longitude"
                                                    ]
                                                  },
                                                  "PrimaryLanguage": {
                                                    "type": "string",
                                                    "description": "The canonical Primary Language of the country"
                                                  },
                                                  "Currency": {
                                                    "description": "The canonical Currency Code of the country (canonical from google)",
                                                    "type": "object",
                                                    "anyOf": [
                                                      {
                                                        "required": [
                                                          "ISO2"
                                                        ]
                                                      },
                                                      {
                                                        "required": [
                                                          "ISO3"
                                                        ]
                                                      }
                                                    ],
                                                    "unevaluatedProperties": false,
                                                    "properties": {
                                                      "ISO2": {
                                                        "type": "string",
                                                        "description": "The canonical ISO2 currency code"
                                                      },
                                                      "ISO3": {
                                                        "type": "string",
                                                        "description": "The canonical ISO3 currency code"
                                                      },
                                                      "Number": {
                                                        "type": "string",
                                                        "description": "The canonical currency number"
                                                      },
                                                      "DecimalPlaces": {
                                                        "type": "string",
                                                        "description": "The canonical number of decimal places for the currency"
                                                      },
                                                      "CountryCodes": {
                                                        "type": "array",
                                                        "description": "The canonical array of ISO3 country codes officially using this currency",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "Symbol": {
                                                        "type": "string",
                                                        "description": "The canonical symbol for the currency"
                                                      },
                                                      "Lineage": {
                                                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                        "type": "object",
                                                        "unevaluatedProperties": false,
                                                        "properties": {
                                                          "EntityId": {
                                                            "type": "string",
                                                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                          },
                                                          "EventId": {
                                                            "type": "string",
                                                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                          },
                                                          "AsOf": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                          }
                                                        },
                                                        "required": [
                                                          "EventId,AsOf"
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  "IsEuropeanCountry": {
                                                    "type": "string",
                                                    "description": "Is this country an european one? e.g Y",
                                                    "enum": [
                                                      "Y",
                                                      "N",
                                                      "U"
                                                    ]
                                                  },
                                                  "Lineage": {
                                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                    "type": "object",
                                                    "unevaluatedProperties": false,
                                                    "properties": {
                                                      "EntityId": {
                                                        "type": "string",
                                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                      },
                                                      "EventId": {
                                                        "type": "string",
                                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                      },
                                                      "AsOf": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                      }
                                                    },
                                                    "required": [
                                                      "EventId,AsOf"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "Nodes",
                                    "NumNodes"
                                  ]
                                },
                                "LocationName": {
                                  "description": "The full name details of the location if applicable",
                                  "type": "object",
                                  "required": [
                                    "OrgName",
                                    "OrgNameType"
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "OrgNameId": {
                                      "type": "string",
                                      "description": "The canonical (synthetic) Xfuze name id for the name if identifiable and has some unique key e.g OrgName_D365_55555"
                                    },
                                    "OrgNameKey": {
                                      "type": "string",
                                      "description": "The native name key / number of the name master, if identifiable and thus has some unique key e.g 55555"
                                    },
                                    "OrgName": {
                                      "type": "string",
                                      "description": "The standard org name (organisation as top level) managing/owning/running this location"
                                    },
                                    "OrgCode": {
                                      "type": "string",
                                      "description": "The standard org code (organisation as top level) for this location"
                                    },
                                    "TradingOrgName": {
                                      "type": "string",
                                      "description": "The official trading name (organisation as top level) the org trades as"
                                    },
                                    "CommonOrgName": {
                                      "type": "string",
                                      "description": "The common trading name (organisation as top level) the org trades as"
                                    },
                                    "CompanyName": {
                                      "type": "string",
                                      "description": "The standard company name (company under the top level organisation) name for this location"
                                    },
                                    "CompanyCode": {
                                      "type": "string",
                                      "description": "The standard company code (company under the top level organisation) for this location"
                                    },
                                    "TradingCompanyName": {
                                      "type": "string",
                                      "description": "The official trading company name (company under the top level organisaton) the org trades as"
                                    },
                                    "CommonCompanyName": {
                                      "type": "string",
                                      "description": "The common trading company name (company under the top level organisaton) the org trades as"
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "LocationAddress": {
                                  "description": "The physical address details of the location",
                                  "type": "object",
                                  "required": [
                                    "AddressLines"
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "Id": {
                                      "type": "string",
                                      "description": "The canonical (synthetic) Xfuze address id if identifiable and has some unique key e.g Address_D365_987654"
                                    },
                                    "Number": {
                                      "type": "string",
                                      "description": "The native address number of the address master if identifiable and has some unique key e.g 987654"
                                    },
                                    "Type": {
                                      "type": "string",
                                      "description": "The type of the address",
                                      "enum": [
                                        "Residential",
                                        "Business",
                                        "Billing",
                                        "Shipping",
                                        "Mailing",
                                        "Postal",
                                        "POBox",
                                        "Physical",
                                        "Service",
                                        "Forwarding",
                                        "Temporary",
                                        "Work",
                                        "Home",
                                        "Other"
                                      ]
                                    },
                                    "Purpose": {
                                      "type": "string",
                                      "description": "The purpose of the usage of the address",
                                      "enum": [
                                        "Billing",
                                        "Invoice",
                                        "Delivery",
                                        "Contact",
                                        "Customer",
                                        "Shipping",
                                        "ReturnExchange",
                                        "Store",
                                        "Warehouse",
                                        "Marketing",
                                        "LegitimateInterest",
                                        "Supplier",
                                        "Franchisee",
                                        "Employee",
                                        "PhysicalEvent",
                                        "DropOff",
                                        "Collection",
                                        "LogisticsPoint",
                                        "Other"
                                      ]
                                    },
                                    "FormattedAddress": {
                                      "type": "string",
                                      "description": "The fully formatted address with all address parts as a single string"
                                    },
                                    "AddressName": {
                                      "type": "string",
                                      "description": "The name of the address"
                                    },
                                    "AddressDesc": {
                                      "type": "string",
                                      "description": "The description of the address"
                                    },
                                    "Flat": {
                                      "type": "string",
                                      "description": "The flat number of the address"
                                    },
                                    "HouseNameNumber": {
                                      "type": "string",
                                      "description": "The house / name number of the address"
                                    },
                                    "AddressLines": {
                                      "description": "The address line 1..5 of the address",
                                      "type": "object",
                                      "required": [
                                        "Line1"
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Line1": {
                                          "type": "string",
                                          "description": "The address line 1 of the address"
                                        },
                                        "Line2": {
                                          "type": "string",
                                          "description": "The address line 2 of the address"
                                        },
                                        "Line3": {
                                          "type": "string",
                                          "description": "The address line 3 of the address"
                                        },
                                        "Line4": {
                                          "type": "string",
                                          "description": "The address line 4 of the address"
                                        },
                                        "Line5": {
                                          "type": "string",
                                          "description": "The address line 5 of the address"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "TownCity": {
                                      "description": "The town / city of the address",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "required": [
                                            "name"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "country"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Name": {
                                          "type": "string",
                                          "description": "The name of the city or town."
                                        },
                                        "Code": {
                                          "type": "string",
                                          "description": "The code of the city or town."
                                        },
                                        "Country": {
                                          "type": "object",
                                          "description": "A country object, based on official ISO 3166",
                                          "anyOf": [
                                            {
                                              "required": [
                                                "ISO2"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "ISO3"
                                              ]
                                            }
                                          ],
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "ISO2": {
                                              "type": "string",
                                              "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                            },
                                            "ISO3": {
                                              "type": "string",
                                              "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                            },
                                            "CountryCode": {
                                              "type": "string",
                                              "description": "The canonical CountryCode (country-code) country code e.g 036"
                                            },
                                            "Name": {
                                              "type": "string",
                                              "description": "The canonical (official) 'Name' of the country e.g Australia"
                                            },
                                            "AltName": {
                                              "type": "string",
                                              "description": "An alternate name for the country"
                                            },
                                            "RegionCode": {
                                              "type": "string",
                                              "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                            },
                                            "RegionName": {
                                              "type": "string",
                                              "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                            },
                                            "SubRegionCode": {
                                              "type": "string",
                                              "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                            },
                                            "SubRegionName": {
                                              "type": "string",
                                              "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                            },
                                            "IntermediateRegionCode": {
                                              "type": "string",
                                              "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                            },
                                            "IntermediateRegionName": {
                                              "type": "string",
                                              "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                            },
                                            "Coordinates": {
                                              "description": "The canonical Coordinates of the country (canonical from google)",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "Latitude": {
                                                  "type": "number",
                                                  "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                                  "minimum": -90,
                                                  "maximum": 90
                                                },
                                                "Longitude": {
                                                  "type": "number",
                                                  "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                                  "minimum": -180,
                                                  "maximum": 180
                                                },
                                                "Lineage": {
                                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                  "type": "object",
                                                  "unevaluatedProperties": false,
                                                  "properties": {
                                                    "EntityId": {
                                                      "type": "string",
                                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                    },
                                                    "EventId": {
                                                      "type": "string",
                                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                    },
                                                    "AsOf": {
                                                      "type": "string",
                                                      "format": "date-time",
                                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                    }
                                                  },
                                                  "required": [
                                                    "EventId,AsOf"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "Latitude",
                                                "Longitude"
                                              ]
                                            },
                                            "PrimaryLanguage": {
                                              "type": "string",
                                              "description": "The canonical Primary Language of the country"
                                            },
                                            "Currency": {
                                              "description": "The canonical Currency Code of the country (canonical from google)",
                                              "type": "object",
                                              "anyOf": [
                                                {
                                                  "required": [
                                                    "ISO2"
                                                  ]
                                                },
                                                {
                                                  "required": [
                                                    "ISO3"
                                                  ]
                                                }
                                              ],
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "ISO2": {
                                                  "type": "string",
                                                  "description": "The canonical ISO2 currency code"
                                                },
                                                "ISO3": {
                                                  "type": "string",
                                                  "description": "The canonical ISO3 currency code"
                                                },
                                                "Number": {
                                                  "type": "string",
                                                  "description": "The canonical currency number"
                                                },
                                                "DecimalPlaces": {
                                                  "type": "string",
                                                  "description": "The canonical number of decimal places for the currency"
                                                },
                                                "CountryCodes": {
                                                  "type": "array",
                                                  "description": "The canonical array of ISO3 country codes officially using this currency",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "Symbol": {
                                                  "type": "string",
                                                  "description": "The canonical symbol for the currency"
                                                },
                                                "Lineage": {
                                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                  "type": "object",
                                                  "unevaluatedProperties": false,
                                                  "properties": {
                                                    "EntityId": {
                                                      "type": "string",
                                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                    },
                                                    "EventId": {
                                                      "type": "string",
                                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                    },
                                                    "AsOf": {
                                                      "type": "string",
                                                      "format": "date-time",
                                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                    }
                                                  },
                                                  "required": [
                                                    "EventId,AsOf"
                                                  ]
                                                }
                                              }
                                            },
                                            "IsEuropeanCountry": {
                                              "type": "string",
                                              "description": "Is this country an european one? e.g Y",
                                              "enum": [
                                                "Y",
                                                "N",
                                                "U"
                                              ]
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          }
                                        },
                                        "Population": {
                                          "type": "number",
                                          "minimum": 0,
                                          "description": "The population of the city or town."
                                        },
                                        "Coordinates": {
                                          "description": "The geographical coordinates of the city or town.",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "Latitude": {
                                              "type": "number",
                                              "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                              "minimum": -90,
                                              "maximum": 90
                                            },
                                            "Longitude": {
                                              "type": "number",
                                              "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                              "minimum": -180,
                                              "maximum": 180
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "Latitude",
                                            "Longitude"
                                          ]
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    },
                                    "Postcode": {
                                      "description": "The Postcode of the address",
                                      "type": "object",
                                      "required": [
                                        "PostcodeCode"
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Postcode": {
                                          "type": "string",
                                          "description": "The full postcode of the address e.g SW1A 1AA"
                                        },
                                        "PostcodeScheme": {
                                          "type": "string",
                                          "description": "The scheme of the postcode e.g UK, US, AUS"
                                        },
                                        "PostcodeArea": {
                                          "type": "string",
                                          "description": "The area part of the postcode of the address e.g SW"
                                        },
                                        "PostcodeDistrict": {
                                          "type": "string",
                                          "description": "The district part of the postcode of the address e.g 1A"
                                        },
                                        "PostcodeSector": {
                                          "type": "string",
                                          "description": "The sector part of the postcode of the address e.g 1"
                                        },
                                        "PostcodeUnit": {
                                          "type": "string",
                                          "description": "The sector part of the postcode of the address e.g AA"
                                        },
                                        "IsVerified": {
                                          "type": "string",
                                          "description": "Has the postcode been verified? e.g Y",
                                          "enum": [
                                            "Y",
                                            "N",
                                            "U"
                                          ]
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Country": {
                                      "type": "object",
                                      "description": "A country object, based on official ISO 3166",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                        },
                                        "CountryCode": {
                                          "type": "string",
                                          "description": "The canonical CountryCode (country-code) country code e.g 036"
                                        },
                                        "Name": {
                                          "type": "string",
                                          "description": "The canonical (official) 'Name' of the country e.g Australia"
                                        },
                                        "AltName": {
                                          "type": "string",
                                          "description": "An alternate name for the country"
                                        },
                                        "RegionCode": {
                                          "type": "string",
                                          "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                        },
                                        "RegionName": {
                                          "type": "string",
                                          "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                        },
                                        "SubRegionCode": {
                                          "type": "string",
                                          "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                        },
                                        "SubRegionName": {
                                          "type": "string",
                                          "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                        },
                                        "IntermediateRegionCode": {
                                          "type": "string",
                                          "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                        },
                                        "IntermediateRegionName": {
                                          "type": "string",
                                          "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                        },
                                        "Coordinates": {
                                          "description": "The canonical Coordinates of the country (canonical from google)",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "Latitude": {
                                              "type": "number",
                                              "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                              "minimum": -90,
                                              "maximum": 90
                                            },
                                            "Longitude": {
                                              "type": "number",
                                              "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                              "minimum": -180,
                                              "maximum": 180
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "Latitude",
                                            "Longitude"
                                          ]
                                        },
                                        "PrimaryLanguage": {
                                          "type": "string",
                                          "description": "The canonical Primary Language of the country"
                                        },
                                        "Currency": {
                                          "description": "The canonical Currency Code of the country (canonical from google)",
                                          "type": "object",
                                          "anyOf": [
                                            {
                                              "required": [
                                                "ISO2"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "ISO3"
                                              ]
                                            }
                                          ],
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "ISO2": {
                                              "type": "string",
                                              "description": "The canonical ISO2 currency code"
                                            },
                                            "ISO3": {
                                              "type": "string",
                                              "description": "The canonical ISO3 currency code"
                                            },
                                            "Number": {
                                              "type": "string",
                                              "description": "The canonical currency number"
                                            },
                                            "DecimalPlaces": {
                                              "type": "string",
                                              "description": "The canonical number of decimal places for the currency"
                                            },
                                            "CountryCodes": {
                                              "type": "array",
                                              "description": "The canonical array of ISO3 country codes officially using this currency",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "Symbol": {
                                              "type": "string",
                                              "description": "The canonical symbol for the currency"
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          }
                                        },
                                        "IsEuropeanCountry": {
                                          "type": "string",
                                          "description": "Is this country an european one? e.g Y",
                                          "enum": [
                                            "Y",
                                            "N",
                                            "U"
                                          ]
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Coordinates": {
                                      "description": "The geographical coordinates of the city or town.",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Latitude": {
                                          "type": "number",
                                          "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                          "minimum": -90,
                                          "maximum": 90
                                        },
                                        "Longitude": {
                                          "type": "number",
                                          "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                          "minimum": -180,
                                          "maximum": 180
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "Latitude",
                                        "Longitude"
                                      ]
                                    },
                                    "IsPrimary": {
                                      "type": "string",
                                      "description": "Ia this address a primary one? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "IsVerified": {
                                      "type": "string",
                                      "description": "Is this address verified by an official address lookup / validator? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "IsEncrypted": {
                                      "type": "string",
                                      "description": "Is this address encrypted? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "LocationAtts": {
                                  "type": "array",
                                  "description": "A collection (array) of extended location attributes",
                                  "items": {
                                    "type": "object",
                                    "description": "A custom att object, a generic extension object",
                                    "required": [
                                      "Code",
                                      "Value"
                                    ],
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "Code": {
                                        "type": "string",
                                        "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                                      },
                                      "CodeShort": {
                                        "type": "string",
                                        "description": "The short version of the code in the leaf element of 'Code'"
                                      },
                                      "Name": {
                                        "type": "string",
                                        "description": "The name of the att"
                                      },
                                      "Value": {
                                        "type": "string",
                                        "description": "The value of the att"
                                      },
                                      "Desc": {
                                        "type": "string",
                                        "description": "The desc of the att"
                                      },
                                      "SourceSystem": {
                                        "type": "string",
                                        "description": "The source system this att is from"
                                      },
                                      "Lineage": {
                                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                        "type": "object",
                                        "unevaluatedProperties": false,
                                        "properties": {
                                          "EntityId": {
                                            "type": "string",
                                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                          },
                                          "EventId": {
                                            "type": "string",
                                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                          },
                                          "AsOf": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                          }
                                        },
                                        "required": [
                                          "EventId,AsOf"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "ReturnLocation": {
                              "description": "The channel/touchpoint of the return/refund of the line",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "LocationId": {
                                  "type": "string",
                                  "description": "The canonical (synthetic) SDV location ID format Location_[sourceSystem]_[LocationNumber] e.g Location_D365_010"
                                },
                                "LocationNodeId": {
                                  "type": "string",
                                  "description": "The specific node id in the location hierarchy"
                                },
                                "LocationNumber": {
                                  "type": "string",
                                  "description": "The 'native' location number of the location like a storeNumber e.g 010"
                                },
                                "LocationType": {
                                  "type": "string",
                                  "description": "The (core) type of the location e.g Warehouse, Store, Transit, Online"
                                },
                                "LocationShortName": {
                                  "type": "string",
                                  "description": "The (short / default) name of the location e.g GBC DC"
                                },
                                "HierarchyNode": {
                                  "description": "The specific hierarchy details of this location itself",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "NodeId": {
                                      "type": "string",
                                      "description": "The HierarchyId Id, in Xfuze canonical form, identifying this hierarchy node amongst other nodes, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Hierarchy::Category_Retail247_123456789"
                                    },
                                    "NodeKey": {
                                      "type": "string",
                                      "description": "The 'natural' hierarchy number"
                                    },
                                    "NodeCode": {
                                      "type": "string",
                                      "description": "The code of this hierarchy node/level"
                                    },
                                    "ParentNodeId": {
                                      "type": "string",
                                      "description": "The parent (direct parent) HierarchyId Id, in Xfuze canonical form, identifying this hierarchy node amongst other nodes, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Hierarchy::Category_Retail247_123456789"
                                    },
                                    "ParentNodeKey": {
                                      "type": "string",
                                      "description": "The 'natural' parent (direct parent) number"
                                    },
                                    "ParentNodeCode": {
                                      "type": "string",
                                      "description": "The code of this parent (direct parent) hierarchy node/level"
                                    },
                                    "NodeStatusCode": {
                                      "type": "string",
                                      "description": "The status code of this hierarchy node/level"
                                    },
                                    "NodeName": {
                                      "type": "string",
                                      "description": "The name of this hierarchy node/level"
                                    },
                                    "NodeClass": {
                                      "type": "string",
                                      "description": "The class of this hierarchy type depending on nature/usage of the hierarchy / node e.g Store, Product "
                                    },
                                    "NodeType": {
                                      "type": "string",
                                      "description": "The type of this hierarchy node/level itself depending on nature/usage of the hierarchy / node e.g Company level in a store heirarchy "
                                    },
                                    "NodeDesc": {
                                      "type": "string",
                                      "description": "The description of this hierarchy node/level"
                                    },
                                    "NodeLevel": {
                                      "type": "number",
                                      "description": "The number of the level of this level e.g 1..5"
                                    },
                                    "L1": {
                                      "type": "string",
                                      "description": "The hierarchy value for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L1Name": {
                                      "type": "string",
                                      "description": "The hierarchy name for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L1Type": {
                                      "type": "string",
                                      "description": "The hierarchy type for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L2": {
                                      "type": "string",
                                      "description": "The hierarchy value for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L2Name": {
                                      "type": "string",
                                      "description": "The hierarchy name for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L2Type": {
                                      "type": "string",
                                      "description": "The hierarchy type for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L3": {
                                      "type": "string",
                                      "description": "The hierarchy value for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L3Name": {
                                      "type": "string",
                                      "description": "The hierarchy name for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L3Type": {
                                      "type": "string",
                                      "description": "The hierarchy type for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L4": {
                                      "type": "string",
                                      "description": "The hierarchy value for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L4Name": {
                                      "type": "string",
                                      "description": "The hierarchy name for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L4Type": {
                                      "type": "string",
                                      "description": "The hierarchy type for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L5": {
                                      "type": "string",
                                      "description": "The hierarchy value for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L5Name": {
                                      "type": "string",
                                      "description": "The hierarchy name for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L5Type": {
                                      "type": "string",
                                      "description": "The hierarchy type for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "IsOverride": {
                                      "type": "string",
                                      "description": "Can this be overriden? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "IsChecked": {
                                      "type": "string",
                                      "description": "Has this been checked? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "Lang": {
                                      "type": "string",
                                      "description": "The language used for localisation of this hierarchy node/level"
                                    },
                                    "Locale": {
                                      "type": "string",
                                      "description": "The locale used for localisation of this hierarchy node/level"
                                    },
                                    "Keywords": {
                                      "type": "string",
                                      "description": "The keywords associated with the hierarchy node/level"
                                    },
                                    "Country": {
                                      "description": "The description of this hierarchy node/level",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "object",
                                        "description": "A country object, based on official ISO 3166",
                                        "anyOf": [
                                          {
                                            "required": [
                                              "ISO2"
                                            ]
                                          },
                                          {
                                            "required": [
                                              "ISO3"
                                            ]
                                          }
                                        ],
                                        "unevaluatedProperties": false,
                                        "properties": {
                                          "ISO2": {
                                            "type": "string",
                                            "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                          },
                                          "ISO3": {
                                            "type": "string",
                                            "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                          },
                                          "CountryCode": {
                                            "type": "string",
                                            "description": "The canonical CountryCode (country-code) country code e.g 036"
                                          },
                                          "Name": {
                                            "type": "string",
                                            "description": "The canonical (official) 'Name' of the country e.g Australia"
                                          },
                                          "AltName": {
                                            "type": "string",
                                            "description": "An alternate name for the country"
                                          },
                                          "RegionCode": {
                                            "type": "string",
                                            "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                          },
                                          "RegionName": {
                                            "type": "string",
                                            "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                          },
                                          "SubRegionCode": {
                                            "type": "string",
                                            "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                          },
                                          "SubRegionName": {
                                            "type": "string",
                                            "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                          },
                                          "IntermediateRegionCode": {
                                            "type": "string",
                                            "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                          },
                                          "IntermediateRegionName": {
                                            "type": "string",
                                            "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                          },
                                          "Coordinates": {
                                            "description": "The canonical Coordinates of the country (canonical from google)",
                                            "type": "object",
                                            "unevaluatedProperties": false,
                                            "properties": {
                                              "Latitude": {
                                                "type": "number",
                                                "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                                "minimum": -90,
                                                "maximum": 90
                                              },
                                              "Longitude": {
                                                "type": "number",
                                                "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                                "minimum": -180,
                                                "maximum": 180
                                              },
                                              "Lineage": {
                                                "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                "type": "object",
                                                "unevaluatedProperties": false,
                                                "properties": {
                                                  "EntityId": {
                                                    "type": "string",
                                                    "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                  },
                                                  "EventId": {
                                                    "type": "string",
                                                    "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                  },
                                                  "AsOf": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                  }
                                                },
                                                "required": [
                                                  "EventId,AsOf"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "Latitude",
                                              "Longitude"
                                            ]
                                          },
                                          "PrimaryLanguage": {
                                            "type": "string",
                                            "description": "The canonical Primary Language of the country"
                                          },
                                          "Currency": {
                                            "description": "The canonical Currency Code of the country (canonical from google)",
                                            "type": "object",
                                            "anyOf": [
                                              {
                                                "required": [
                                                  "ISO2"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "ISO3"
                                                ]
                                              }
                                            ],
                                            "unevaluatedProperties": false,
                                            "properties": {
                                              "ISO2": {
                                                "type": "string",
                                                "description": "The canonical ISO2 currency code"
                                              },
                                              "ISO3": {
                                                "type": "string",
                                                "description": "The canonical ISO3 currency code"
                                              },
                                              "Number": {
                                                "type": "string",
                                                "description": "The canonical currency number"
                                              },
                                              "DecimalPlaces": {
                                                "type": "string",
                                                "description": "The canonical number of decimal places for the currency"
                                              },
                                              "CountryCodes": {
                                                "type": "array",
                                                "description": "The canonical array of ISO3 country codes officially using this currency",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "Symbol": {
                                                "type": "string",
                                                "description": "The canonical symbol for the currency"
                                              },
                                              "Lineage": {
                                                "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                "type": "object",
                                                "unevaluatedProperties": false,
                                                "properties": {
                                                  "EntityId": {
                                                    "type": "string",
                                                    "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                  },
                                                  "EventId": {
                                                    "type": "string",
                                                    "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                  },
                                                  "AsOf": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                  }
                                                },
                                                "required": [
                                                  "EventId,AsOf"
                                                ]
                                              }
                                            }
                                          },
                                          "IsEuropeanCountry": {
                                            "type": "string",
                                            "description": "Is this country an european one? e.g Y",
                                            "enum": [
                                              "Y",
                                              "N",
                                              "U"
                                            ]
                                          },
                                          "Lineage": {
                                            "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                            "type": "object",
                                            "unevaluatedProperties": false,
                                            "properties": {
                                              "EntityId": {
                                                "type": "string",
                                                "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                              },
                                              "EventId": {
                                                "type": "string",
                                                "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                              },
                                              "AsOf": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                              }
                                            },
                                            "required": [
                                              "EventId,AsOf"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "Hierarchy": {
                                  "description": "The hierarchy (breadcrumbs) of the location in its hierarchy, typically L1 to L5",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "HierarchyId": {
                                      "type": "string",
                                      "description": "The Hierarchy Id, in Xfuze canonical form, identifying this hierarchy collection amongst other collections, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Location_Crew_1234567"
                                    },
                                    "HierarchyKey": {
                                      "type": "string",
                                      "description": "The 'natural' hierarchy collection key/number if identifiable"
                                    },
                                    "NumNodes": {
                                      "type": "number",
                                      "description": "The number of nodes in the collection"
                                    },
                                    "Nodes": {
                                      "type": "array",
                                      "description": "The collection of hierarchy nodes making up the hierarchy",
                                      "items": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "object",
                                          "description": "A generic hierarchy node, a 'level' in a generic hierarchy that can be used for things like a store or product category hierarchy",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "NodeId": {
                                              "type": "string",
                                              "description": "The HierarchyId Id, in Xfuze canonical form, identifying this hierarchy node amongst other nodes, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Hierarchy::Category_Retail247_123456789"
                                            },
                                            "NodeKey": {
                                              "type": "string",
                                              "description": "The 'natural' hierarchy number"
                                            },
                                            "NodeCode": {
                                              "type": "string",
                                              "description": "The code of this hierarchy node/level"
                                            },
                                            "ParentNodeId": {
                                              "type": "string",
                                              "description": "The parent (direct parent) HierarchyId Id, in Xfuze canonical form, identifying this hierarchy node amongst other nodes, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Hierarchy::Category_Retail247_123456789"
                                            },
                                            "ParentNodeKey": {
                                              "type": "string",
                                              "description": "The 'natural' parent (direct parent) number"
                                            },
                                            "ParentNodeCode": {
                                              "type": "string",
                                              "description": "The code of this parent (direct parent) hierarchy node/level"
                                            },
                                            "NodeStatusCode": {
                                              "type": "string",
                                              "description": "The status code of this hierarchy node/level"
                                            },
                                            "NodeName": {
                                              "type": "string",
                                              "description": "The name of this hierarchy node/level"
                                            },
                                            "NodeClass": {
                                              "type": "string",
                                              "description": "The class of this hierarchy type depending on nature/usage of the hierarchy / node e.g Store, Product "
                                            },
                                            "NodeType": {
                                              "type": "string",
                                              "description": "The type of this hierarchy node/level itself depending on nature/usage of the hierarchy / node e.g Company level in a store heirarchy "
                                            },
                                            "NodeDesc": {
                                              "type": "string",
                                              "description": "The description of this hierarchy node/level"
                                            },
                                            "NodeLevel": {
                                              "type": "number",
                                              "description": "The number of the level of this level e.g 1..5"
                                            },
                                            "L1": {
                                              "type": "string",
                                              "description": "The hierarchy value for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L1Name": {
                                              "type": "string",
                                              "description": "The hierarchy name for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L1Type": {
                                              "type": "string",
                                              "description": "The hierarchy type for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L2": {
                                              "type": "string",
                                              "description": "The hierarchy value for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L2Name": {
                                              "type": "string",
                                              "description": "The hierarchy name for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L2Type": {
                                              "type": "string",
                                              "description": "The hierarchy type for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L3": {
                                              "type": "string",
                                              "description": "The hierarchy value for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L3Name": {
                                              "type": "string",
                                              "description": "The hierarchy name for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L3Type": {
                                              "type": "string",
                                              "description": "The hierarchy type for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L4": {
                                              "type": "string",
                                              "description": "The hierarchy value for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L4Name": {
                                              "type": "string",
                                              "description": "The hierarchy name for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L4Type": {
                                              "type": "string",
                                              "description": "The hierarchy type for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L5": {
                                              "type": "string",
                                              "description": "The hierarchy value for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L5Name": {
                                              "type": "string",
                                              "description": "The hierarchy name for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L5Type": {
                                              "type": "string",
                                              "description": "The hierarchy type for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "IsOverride": {
                                              "type": "string",
                                              "description": "Can this be overriden? e.g Y",
                                              "enum": [
                                                "Y",
                                                "N",
                                                "U"
                                              ]
                                            },
                                            "IsChecked": {
                                              "type": "string",
                                              "description": "Has this been checked? e.g Y",
                                              "enum": [
                                                "Y",
                                                "N",
                                                "U"
                                              ]
                                            },
                                            "Lang": {
                                              "type": "string",
                                              "description": "The language used for localisation of this hierarchy node/level"
                                            },
                                            "Locale": {
                                              "type": "string",
                                              "description": "The locale used for localisation of this hierarchy node/level"
                                            },
                                            "Keywords": {
                                              "type": "string",
                                              "description": "The keywords associated with the hierarchy node/level"
                                            },
                                            "Country": {
                                              "description": "The description of this hierarchy node/level",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "object",
                                                "description": "A country object, based on official ISO 3166",
                                                "anyOf": [
                                                  {
                                                    "required": [
                                                      "ISO2"
                                                    ]
                                                  },
                                                  {
                                                    "required": [
                                                      "ISO3"
                                                    ]
                                                  }
                                                ],
                                                "unevaluatedProperties": false,
                                                "properties": {
                                                  "ISO2": {
                                                    "type": "string",
                                                    "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                                  },
                                                  "ISO3": {
                                                    "type": "string",
                                                    "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                                  },
                                                  "CountryCode": {
                                                    "type": "string",
                                                    "description": "The canonical CountryCode (country-code) country code e.g 036"
                                                  },
                                                  "Name": {
                                                    "type": "string",
                                                    "description": "The canonical (official) 'Name' of the country e.g Australia"
                                                  },
                                                  "AltName": {
                                                    "type": "string",
                                                    "description": "An alternate name for the country"
                                                  },
                                                  "RegionCode": {
                                                    "type": "string",
                                                    "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                                  },
                                                  "RegionName": {
                                                    "type": "string",
                                                    "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                                  },
                                                  "SubRegionCode": {
                                                    "type": "string",
                                                    "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                                  },
                                                  "SubRegionName": {
                                                    "type": "string",
                                                    "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                                  },
                                                  "IntermediateRegionCode": {
                                                    "type": "string",
                                                    "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                                  },
                                                  "IntermediateRegionName": {
                                                    "type": "string",
                                                    "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                                  },
                                                  "Coordinates": {
                                                    "description": "The canonical Coordinates of the country (canonical from google)",
                                                    "type": "object",
                                                    "unevaluatedProperties": false,
                                                    "properties": {
                                                      "Latitude": {
                                                        "type": "number",
                                                        "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                                        "minimum": -90,
                                                        "maximum": 90
                                                      },
                                                      "Longitude": {
                                                        "type": "number",
                                                        "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                                        "minimum": -180,
                                                        "maximum": 180
                                                      },
                                                      "Lineage": {
                                                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                        "type": "object",
                                                        "unevaluatedProperties": false,
                                                        "properties": {
                                                          "EntityId": {
                                                            "type": "string",
                                                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                          },
                                                          "EventId": {
                                                            "type": "string",
                                                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                          },
                                                          "AsOf": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                          }
                                                        },
                                                        "required": [
                                                          "EventId,AsOf"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "Latitude",
                                                      "Longitude"
                                                    ]
                                                  },
                                                  "PrimaryLanguage": {
                                                    "type": "string",
                                                    "description": "The canonical Primary Language of the country"
                                                  },
                                                  "Currency": {
                                                    "description": "The canonical Currency Code of the country (canonical from google)",
                                                    "type": "object",
                                                    "anyOf": [
                                                      {
                                                        "required": [
                                                          "ISO2"
                                                        ]
                                                      },
                                                      {
                                                        "required": [
                                                          "ISO3"
                                                        ]
                                                      }
                                                    ],
                                                    "unevaluatedProperties": false,
                                                    "properties": {
                                                      "ISO2": {
                                                        "type": "string",
                                                        "description": "The canonical ISO2 currency code"
                                                      },
                                                      "ISO3": {
                                                        "type": "string",
                                                        "description": "The canonical ISO3 currency code"
                                                      },
                                                      "Number": {
                                                        "type": "string",
                                                        "description": "The canonical currency number"
                                                      },
                                                      "DecimalPlaces": {
                                                        "type": "string",
                                                        "description": "The canonical number of decimal places for the currency"
                                                      },
                                                      "CountryCodes": {
                                                        "type": "array",
                                                        "description": "The canonical array of ISO3 country codes officially using this currency",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "Symbol": {
                                                        "type": "string",
                                                        "description": "The canonical symbol for the currency"
                                                      },
                                                      "Lineage": {
                                                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                        "type": "object",
                                                        "unevaluatedProperties": false,
                                                        "properties": {
                                                          "EntityId": {
                                                            "type": "string",
                                                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                          },
                                                          "EventId": {
                                                            "type": "string",
                                                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                          },
                                                          "AsOf": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                          }
                                                        },
                                                        "required": [
                                                          "EventId,AsOf"
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  "IsEuropeanCountry": {
                                                    "type": "string",
                                                    "description": "Is this country an european one? e.g Y",
                                                    "enum": [
                                                      "Y",
                                                      "N",
                                                      "U"
                                                    ]
                                                  },
                                                  "Lineage": {
                                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                    "type": "object",
                                                    "unevaluatedProperties": false,
                                                    "properties": {
                                                      "EntityId": {
                                                        "type": "string",
                                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                      },
                                                      "EventId": {
                                                        "type": "string",
                                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                      },
                                                      "AsOf": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                      }
                                                    },
                                                    "required": [
                                                      "EventId,AsOf"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "Nodes",
                                    "NumNodes"
                                  ]
                                },
                                "LocationName": {
                                  "description": "The full name details of the location if applicable",
                                  "type": "object",
                                  "required": [
                                    "OrgName",
                                    "OrgNameType"
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "OrgNameId": {
                                      "type": "string",
                                      "description": "The canonical (synthetic) Xfuze name id for the name if identifiable and has some unique key e.g OrgName_D365_55555"
                                    },
                                    "OrgNameKey": {
                                      "type": "string",
                                      "description": "The native name key / number of the name master, if identifiable and thus has some unique key e.g 55555"
                                    },
                                    "OrgName": {
                                      "type": "string",
                                      "description": "The standard org name (organisation as top level) managing/owning/running this location"
                                    },
                                    "OrgCode": {
                                      "type": "string",
                                      "description": "The standard org code (organisation as top level) for this location"
                                    },
                                    "TradingOrgName": {
                                      "type": "string",
                                      "description": "The official trading name (organisation as top level) the org trades as"
                                    },
                                    "CommonOrgName": {
                                      "type": "string",
                                      "description": "The common trading name (organisation as top level) the org trades as"
                                    },
                                    "CompanyName": {
                                      "type": "string",
                                      "description": "The standard company name (company under the top level organisation) name for this location"
                                    },
                                    "CompanyCode": {
                                      "type": "string",
                                      "description": "The standard company code (company under the top level organisation) for this location"
                                    },
                                    "TradingCompanyName": {
                                      "type": "string",
                                      "description": "The official trading company name (company under the top level organisaton) the org trades as"
                                    },
                                    "CommonCompanyName": {
                                      "type": "string",
                                      "description": "The common trading company name (company under the top level organisaton) the org trades as"
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "LocationAddress": {
                                  "description": "The physical address details of the location",
                                  "type": "object",
                                  "required": [
                                    "AddressLines"
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "Id": {
                                      "type": "string",
                                      "description": "The canonical (synthetic) Xfuze address id if identifiable and has some unique key e.g Address_D365_987654"
                                    },
                                    "Number": {
                                      "type": "string",
                                      "description": "The native address number of the address master if identifiable and has some unique key e.g 987654"
                                    },
                                    "Type": {
                                      "type": "string",
                                      "description": "The type of the address",
                                      "enum": [
                                        "Residential",
                                        "Business",
                                        "Billing",
                                        "Shipping",
                                        "Mailing",
                                        "Postal",
                                        "POBox",
                                        "Physical",
                                        "Service",
                                        "Forwarding",
                                        "Temporary",
                                        "Work",
                                        "Home",
                                        "Other"
                                      ]
                                    },
                                    "Purpose": {
                                      "type": "string",
                                      "description": "The purpose of the usage of the address",
                                      "enum": [
                                        "Billing",
                                        "Invoice",
                                        "Delivery",
                                        "Contact",
                                        "Customer",
                                        "Shipping",
                                        "ReturnExchange",
                                        "Store",
                                        "Warehouse",
                                        "Marketing",
                                        "LegitimateInterest",
                                        "Supplier",
                                        "Franchisee",
                                        "Employee",
                                        "PhysicalEvent",
                                        "DropOff",
                                        "Collection",
                                        "LogisticsPoint",
                                        "Other"
                                      ]
                                    },
                                    "FormattedAddress": {
                                      "type": "string",
                                      "description": "The fully formatted address with all address parts as a single string"
                                    },
                                    "AddressName": {
                                      "type": "string",
                                      "description": "The name of the address"
                                    },
                                    "AddressDesc": {
                                      "type": "string",
                                      "description": "The description of the address"
                                    },
                                    "Flat": {
                                      "type": "string",
                                      "description": "The flat number of the address"
                                    },
                                    "HouseNameNumber": {
                                      "type": "string",
                                      "description": "The house / name number of the address"
                                    },
                                    "AddressLines": {
                                      "description": "The address line 1..5 of the address",
                                      "type": "object",
                                      "required": [
                                        "Line1"
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Line1": {
                                          "type": "string",
                                          "description": "The address line 1 of the address"
                                        },
                                        "Line2": {
                                          "type": "string",
                                          "description": "The address line 2 of the address"
                                        },
                                        "Line3": {
                                          "type": "string",
                                          "description": "The address line 3 of the address"
                                        },
                                        "Line4": {
                                          "type": "string",
                                          "description": "The address line 4 of the address"
                                        },
                                        "Line5": {
                                          "type": "string",
                                          "description": "The address line 5 of the address"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "TownCity": {
                                      "description": "The town / city of the address",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "required": [
                                            "name"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "country"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Name": {
                                          "type": "string",
                                          "description": "The name of the city or town."
                                        },
                                        "Code": {
                                          "type": "string",
                                          "description": "The code of the city or town."
                                        },
                                        "Country": {
                                          "type": "object",
                                          "description": "A country object, based on official ISO 3166",
                                          "anyOf": [
                                            {
                                              "required": [
                                                "ISO2"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "ISO3"
                                              ]
                                            }
                                          ],
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "ISO2": {
                                              "type": "string",
                                              "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                            },
                                            "ISO3": {
                                              "type": "string",
                                              "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                            },
                                            "CountryCode": {
                                              "type": "string",
                                              "description": "The canonical CountryCode (country-code) country code e.g 036"
                                            },
                                            "Name": {
                                              "type": "string",
                                              "description": "The canonical (official) 'Name' of the country e.g Australia"
                                            },
                                            "AltName": {
                                              "type": "string",
                                              "description": "An alternate name for the country"
                                            },
                                            "RegionCode": {
                                              "type": "string",
                                              "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                            },
                                            "RegionName": {
                                              "type": "string",
                                              "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                            },
                                            "SubRegionCode": {
                                              "type": "string",
                                              "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                            },
                                            "SubRegionName": {
                                              "type": "string",
                                              "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                            },
                                            "IntermediateRegionCode": {
                                              "type": "string",
                                              "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                            },
                                            "IntermediateRegionName": {
                                              "type": "string",
                                              "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                            },
                                            "Coordinates": {
                                              "description": "The canonical Coordinates of the country (canonical from google)",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "Latitude": {
                                                  "type": "number",
                                                  "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                                  "minimum": -90,
                                                  "maximum": 90
                                                },
                                                "Longitude": {
                                                  "type": "number",
                                                  "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                                  "minimum": -180,
                                                  "maximum": 180
                                                },
                                                "Lineage": {
                                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                  "type": "object",
                                                  "unevaluatedProperties": false,
                                                  "properties": {
                                                    "EntityId": {
                                                      "type": "string",
                                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                    },
                                                    "EventId": {
                                                      "type": "string",
                                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                    },
                                                    "AsOf": {
                                                      "type": "string",
                                                      "format": "date-time",
                                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                    }
                                                  },
                                                  "required": [
                                                    "EventId,AsOf"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "Latitude",
                                                "Longitude"
                                              ]
                                            },
                                            "PrimaryLanguage": {
                                              "type": "string",
                                              "description": "The canonical Primary Language of the country"
                                            },
                                            "Currency": {
                                              "description": "The canonical Currency Code of the country (canonical from google)",
                                              "type": "object",
                                              "anyOf": [
                                                {
                                                  "required": [
                                                    "ISO2"
                                                  ]
                                                },
                                                {
                                                  "required": [
                                                    "ISO3"
                                                  ]
                                                }
                                              ],
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "ISO2": {
                                                  "type": "string",
                                                  "description": "The canonical ISO2 currency code"
                                                },
                                                "ISO3": {
                                                  "type": "string",
                                                  "description": "The canonical ISO3 currency code"
                                                },
                                                "Number": {
                                                  "type": "string",
                                                  "description": "The canonical currency number"
                                                },
                                                "DecimalPlaces": {
                                                  "type": "string",
                                                  "description": "The canonical number of decimal places for the currency"
                                                },
                                                "CountryCodes": {
                                                  "type": "array",
                                                  "description": "The canonical array of ISO3 country codes officially using this currency",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "Symbol": {
                                                  "type": "string",
                                                  "description": "The canonical symbol for the currency"
                                                },
                                                "Lineage": {
                                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                  "type": "object",
                                                  "unevaluatedProperties": false,
                                                  "properties": {
                                                    "EntityId": {
                                                      "type": "string",
                                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                    },
                                                    "EventId": {
                                                      "type": "string",
                                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                    },
                                                    "AsOf": {
                                                      "type": "string",
                                                      "format": "date-time",
                                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                    }
                                                  },
                                                  "required": [
                                                    "EventId,AsOf"
                                                  ]
                                                }
                                              }
                                            },
                                            "IsEuropeanCountry": {
                                              "type": "string",
                                              "description": "Is this country an european one? e.g Y",
                                              "enum": [
                                                "Y",
                                                "N",
                                                "U"
                                              ]
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          }
                                        },
                                        "Population": {
                                          "type": "number",
                                          "minimum": 0,
                                          "description": "The population of the city or town."
                                        },
                                        "Coordinates": {
                                          "description": "The geographical coordinates of the city or town.",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "Latitude": {
                                              "type": "number",
                                              "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                              "minimum": -90,
                                              "maximum": 90
                                            },
                                            "Longitude": {
                                              "type": "number",
                                              "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                              "minimum": -180,
                                              "maximum": 180
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "Latitude",
                                            "Longitude"
                                          ]
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    },
                                    "Postcode": {
                                      "description": "The Postcode of the address",
                                      "type": "object",
                                      "required": [
                                        "PostcodeCode"
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Postcode": {
                                          "type": "string",
                                          "description": "The full postcode of the address e.g SW1A 1AA"
                                        },
                                        "PostcodeScheme": {
                                          "type": "string",
                                          "description": "The scheme of the postcode e.g UK, US, AUS"
                                        },
                                        "PostcodeArea": {
                                          "type": "string",
                                          "description": "The area part of the postcode of the address e.g SW"
                                        },
                                        "PostcodeDistrict": {
                                          "type": "string",
                                          "description": "The district part of the postcode of the address e.g 1A"
                                        },
                                        "PostcodeSector": {
                                          "type": "string",
                                          "description": "The sector part of the postcode of the address e.g 1"
                                        },
                                        "PostcodeUnit": {
                                          "type": "string",
                                          "description": "The sector part of the postcode of the address e.g AA"
                                        },
                                        "IsVerified": {
                                          "type": "string",
                                          "description": "Has the postcode been verified? e.g Y",
                                          "enum": [
                                            "Y",
                                            "N",
                                            "U"
                                          ]
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Country": {
                                      "type": "object",
                                      "description": "A country object, based on official ISO 3166",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                        },
                                        "CountryCode": {
                                          "type": "string",
                                          "description": "The canonical CountryCode (country-code) country code e.g 036"
                                        },
                                        "Name": {
                                          "type": "string",
                                          "description": "The canonical (official) 'Name' of the country e.g Australia"
                                        },
                                        "AltName": {
                                          "type": "string",
                                          "description": "An alternate name for the country"
                                        },
                                        "RegionCode": {
                                          "type": "string",
                                          "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                        },
                                        "RegionName": {
                                          "type": "string",
                                          "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                        },
                                        "SubRegionCode": {
                                          "type": "string",
                                          "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                        },
                                        "SubRegionName": {
                                          "type": "string",
                                          "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                        },
                                        "IntermediateRegionCode": {
                                          "type": "string",
                                          "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                        },
                                        "IntermediateRegionName": {
                                          "type": "string",
                                          "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                        },
                                        "Coordinates": {
                                          "description": "The canonical Coordinates of the country (canonical from google)",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "Latitude": {
                                              "type": "number",
                                              "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                              "minimum": -90,
                                              "maximum": 90
                                            },
                                            "Longitude": {
                                              "type": "number",
                                              "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                              "minimum": -180,
                                              "maximum": 180
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "Latitude",
                                            "Longitude"
                                          ]
                                        },
                                        "PrimaryLanguage": {
                                          "type": "string",
                                          "description": "The canonical Primary Language of the country"
                                        },
                                        "Currency": {
                                          "description": "The canonical Currency Code of the country (canonical from google)",
                                          "type": "object",
                                          "anyOf": [
                                            {
                                              "required": [
                                                "ISO2"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "ISO3"
                                              ]
                                            }
                                          ],
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "ISO2": {
                                              "type": "string",
                                              "description": "The canonical ISO2 currency code"
                                            },
                                            "ISO3": {
                                              "type": "string",
                                              "description": "The canonical ISO3 currency code"
                                            },
                                            "Number": {
                                              "type": "string",
                                              "description": "The canonical currency number"
                                            },
                                            "DecimalPlaces": {
                                              "type": "string",
                                              "description": "The canonical number of decimal places for the currency"
                                            },
                                            "CountryCodes": {
                                              "type": "array",
                                              "description": "The canonical array of ISO3 country codes officially using this currency",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "Symbol": {
                                              "type": "string",
                                              "description": "The canonical symbol for the currency"
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          }
                                        },
                                        "IsEuropeanCountry": {
                                          "type": "string",
                                          "description": "Is this country an european one? e.g Y",
                                          "enum": [
                                            "Y",
                                            "N",
                                            "U"
                                          ]
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Coordinates": {
                                      "description": "The geographical coordinates of the city or town.",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Latitude": {
                                          "type": "number",
                                          "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                          "minimum": -90,
                                          "maximum": 90
                                        },
                                        "Longitude": {
                                          "type": "number",
                                          "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                          "minimum": -180,
                                          "maximum": 180
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "Latitude",
                                        "Longitude"
                                      ]
                                    },
                                    "IsPrimary": {
                                      "type": "string",
                                      "description": "Ia this address a primary one? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "IsVerified": {
                                      "type": "string",
                                      "description": "Is this address verified by an official address lookup / validator? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "IsEncrypted": {
                                      "type": "string",
                                      "description": "Is this address encrypted? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "LocationAtts": {
                                  "type": "array",
                                  "description": "A collection (array) of extended location attributes",
                                  "items": {
                                    "type": "object",
                                    "description": "A custom att object, a generic extension object",
                                    "required": [
                                      "Code",
                                      "Value"
                                    ],
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "Code": {
                                        "type": "string",
                                        "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                                      },
                                      "CodeShort": {
                                        "type": "string",
                                        "description": "The short version of the code in the leaf element of 'Code'"
                                      },
                                      "Name": {
                                        "type": "string",
                                        "description": "The name of the att"
                                      },
                                      "Value": {
                                        "type": "string",
                                        "description": "The value of the att"
                                      },
                                      "Desc": {
                                        "type": "string",
                                        "description": "The desc of the att"
                                      },
                                      "SourceSystem": {
                                        "type": "string",
                                        "description": "The source system this att is from"
                                      },
                                      "Lineage": {
                                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                        "type": "object",
                                        "unevaluatedProperties": false,
                                        "properties": {
                                          "EntityId": {
                                            "type": "string",
                                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                          },
                                          "EventId": {
                                            "type": "string",
                                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                          },
                                          "AsOf": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                          }
                                        },
                                        "required": [
                                          "EventId,AsOf"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "ExchangeLocation": {
                              "description": "The channel/touchpoint of the exchange of the order",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "LocationId": {
                                  "type": "string",
                                  "description": "The canonical (synthetic) SDV location ID format Location_[sourceSystem]_[LocationNumber] e.g Location_D365_010"
                                },
                                "LocationNodeId": {
                                  "type": "string",
                                  "description": "The specific node id in the location hierarchy"
                                },
                                "LocationNumber": {
                                  "type": "string",
                                  "description": "The 'native' location number of the location like a storeNumber e.g 010"
                                },
                                "LocationType": {
                                  "type": "string",
                                  "description": "The (core) type of the location e.g Warehouse, Store, Transit, Online"
                                },
                                "LocationShortName": {
                                  "type": "string",
                                  "description": "The (short / default) name of the location e.g GBC DC"
                                },
                                "HierarchyNode": {
                                  "description": "The specific hierarchy details of this location itself",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "NodeId": {
                                      "type": "string",
                                      "description": "The HierarchyId Id, in Xfuze canonical form, identifying this hierarchy node amongst other nodes, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Hierarchy::Category_Retail247_123456789"
                                    },
                                    "NodeKey": {
                                      "type": "string",
                                      "description": "The 'natural' hierarchy number"
                                    },
                                    "NodeCode": {
                                      "type": "string",
                                      "description": "The code of this hierarchy node/level"
                                    },
                                    "ParentNodeId": {
                                      "type": "string",
                                      "description": "The parent (direct parent) HierarchyId Id, in Xfuze canonical form, identifying this hierarchy node amongst other nodes, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Hierarchy::Category_Retail247_123456789"
                                    },
                                    "ParentNodeKey": {
                                      "type": "string",
                                      "description": "The 'natural' parent (direct parent) number"
                                    },
                                    "ParentNodeCode": {
                                      "type": "string",
                                      "description": "The code of this parent (direct parent) hierarchy node/level"
                                    },
                                    "NodeStatusCode": {
                                      "type": "string",
                                      "description": "The status code of this hierarchy node/level"
                                    },
                                    "NodeName": {
                                      "type": "string",
                                      "description": "The name of this hierarchy node/level"
                                    },
                                    "NodeClass": {
                                      "type": "string",
                                      "description": "The class of this hierarchy type depending on nature/usage of the hierarchy / node e.g Store, Product "
                                    },
                                    "NodeType": {
                                      "type": "string",
                                      "description": "The type of this hierarchy node/level itself depending on nature/usage of the hierarchy / node e.g Company level in a store heirarchy "
                                    },
                                    "NodeDesc": {
                                      "type": "string",
                                      "description": "The description of this hierarchy node/level"
                                    },
                                    "NodeLevel": {
                                      "type": "number",
                                      "description": "The number of the level of this level e.g 1..5"
                                    },
                                    "L1": {
                                      "type": "string",
                                      "description": "The hierarchy value for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L1Name": {
                                      "type": "string",
                                      "description": "The hierarchy name for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L1Type": {
                                      "type": "string",
                                      "description": "The hierarchy type for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L2": {
                                      "type": "string",
                                      "description": "The hierarchy value for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L2Name": {
                                      "type": "string",
                                      "description": "The hierarchy name for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L2Type": {
                                      "type": "string",
                                      "description": "The hierarchy type for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L3": {
                                      "type": "string",
                                      "description": "The hierarchy value for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L3Name": {
                                      "type": "string",
                                      "description": "The hierarchy name for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L3Type": {
                                      "type": "string",
                                      "description": "The hierarchy type for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L4": {
                                      "type": "string",
                                      "description": "The hierarchy value for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L4Name": {
                                      "type": "string",
                                      "description": "The hierarchy name for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L4Type": {
                                      "type": "string",
                                      "description": "The hierarchy type for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L5": {
                                      "type": "string",
                                      "description": "The hierarchy value for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L5Name": {
                                      "type": "string",
                                      "description": "The hierarchy name for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L5Type": {
                                      "type": "string",
                                      "description": "The hierarchy type for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "IsOverride": {
                                      "type": "string",
                                      "description": "Can this be overriden? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "IsChecked": {
                                      "type": "string",
                                      "description": "Has this been checked? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "Lang": {
                                      "type": "string",
                                      "description": "The language used for localisation of this hierarchy node/level"
                                    },
                                    "Locale": {
                                      "type": "string",
                                      "description": "The locale used for localisation of this hierarchy node/level"
                                    },
                                    "Keywords": {
                                      "type": "string",
                                      "description": "The keywords associated with the hierarchy node/level"
                                    },
                                    "Country": {
                                      "description": "The description of this hierarchy node/level",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "object",
                                        "description": "A country object, based on official ISO 3166",
                                        "anyOf": [
                                          {
                                            "required": [
                                              "ISO2"
                                            ]
                                          },
                                          {
                                            "required": [
                                              "ISO3"
                                            ]
                                          }
                                        ],
                                        "unevaluatedProperties": false,
                                        "properties": {
                                          "ISO2": {
                                            "type": "string",
                                            "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                          },
                                          "ISO3": {
                                            "type": "string",
                                            "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                          },
                                          "CountryCode": {
                                            "type": "string",
                                            "description": "The canonical CountryCode (country-code) country code e.g 036"
                                          },
                                          "Name": {
                                            "type": "string",
                                            "description": "The canonical (official) 'Name' of the country e.g Australia"
                                          },
                                          "AltName": {
                                            "type": "string",
                                            "description": "An alternate name for the country"
                                          },
                                          "RegionCode": {
                                            "type": "string",
                                            "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                          },
                                          "RegionName": {
                                            "type": "string",
                                            "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                          },
                                          "SubRegionCode": {
                                            "type": "string",
                                            "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                          },
                                          "SubRegionName": {
                                            "type": "string",
                                            "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                          },
                                          "IntermediateRegionCode": {
                                            "type": "string",
                                            "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                          },
                                          "IntermediateRegionName": {
                                            "type": "string",
                                            "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                          },
                                          "Coordinates": {
                                            "description": "The canonical Coordinates of the country (canonical from google)",
                                            "type": "object",
                                            "unevaluatedProperties": false,
                                            "properties": {
                                              "Latitude": {
                                                "type": "number",
                                                "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                                "minimum": -90,
                                                "maximum": 90
                                              },
                                              "Longitude": {
                                                "type": "number",
                                                "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                                "minimum": -180,
                                                "maximum": 180
                                              },
                                              "Lineage": {
                                                "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                "type": "object",
                                                "unevaluatedProperties": false,
                                                "properties": {
                                                  "EntityId": {
                                                    "type": "string",
                                                    "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                  },
                                                  "EventId": {
                                                    "type": "string",
                                                    "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                  },
                                                  "AsOf": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                  }
                                                },
                                                "required": [
                                                  "EventId,AsOf"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "Latitude",
                                              "Longitude"
                                            ]
                                          },
                                          "PrimaryLanguage": {
                                            "type": "string",
                                            "description": "The canonical Primary Language of the country"
                                          },
                                          "Currency": {
                                            "description": "The canonical Currency Code of the country (canonical from google)",
                                            "type": "object",
                                            "anyOf": [
                                              {
                                                "required": [
                                                  "ISO2"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "ISO3"
                                                ]
                                              }
                                            ],
                                            "unevaluatedProperties": false,
                                            "properties": {
                                              "ISO2": {
                                                "type": "string",
                                                "description": "The canonical ISO2 currency code"
                                              },
                                              "ISO3": {
                                                "type": "string",
                                                "description": "The canonical ISO3 currency code"
                                              },
                                              "Number": {
                                                "type": "string",
                                                "description": "The canonical currency number"
                                              },
                                              "DecimalPlaces": {
                                                "type": "string",
                                                "description": "The canonical number of decimal places for the currency"
                                              },
                                              "CountryCodes": {
                                                "type": "array",
                                                "description": "The canonical array of ISO3 country codes officially using this currency",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "Symbol": {
                                                "type": "string",
                                                "description": "The canonical symbol for the currency"
                                              },
                                              "Lineage": {
                                                "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                "type": "object",
                                                "unevaluatedProperties": false,
                                                "properties": {
                                                  "EntityId": {
                                                    "type": "string",
                                                    "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                  },
                                                  "EventId": {
                                                    "type": "string",
                                                    "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                  },
                                                  "AsOf": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                  }
                                                },
                                                "required": [
                                                  "EventId,AsOf"
                                                ]
                                              }
                                            }
                                          },
                                          "IsEuropeanCountry": {
                                            "type": "string",
                                            "description": "Is this country an european one? e.g Y",
                                            "enum": [
                                              "Y",
                                              "N",
                                              "U"
                                            ]
                                          },
                                          "Lineage": {
                                            "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                            "type": "object",
                                            "unevaluatedProperties": false,
                                            "properties": {
                                              "EntityId": {
                                                "type": "string",
                                                "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                              },
                                              "EventId": {
                                                "type": "string",
                                                "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                              },
                                              "AsOf": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                              }
                                            },
                                            "required": [
                                              "EventId,AsOf"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "Hierarchy": {
                                  "description": "The hierarchy (breadcrumbs) of the location in its hierarchy, typically L1 to L5",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "HierarchyId": {
                                      "type": "string",
                                      "description": "The Hierarchy Id, in Xfuze canonical form, identifying this hierarchy collection amongst other collections, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Location_Crew_1234567"
                                    },
                                    "HierarchyKey": {
                                      "type": "string",
                                      "description": "The 'natural' hierarchy collection key/number if identifiable"
                                    },
                                    "NumNodes": {
                                      "type": "number",
                                      "description": "The number of nodes in the collection"
                                    },
                                    "Nodes": {
                                      "type": "array",
                                      "description": "The collection of hierarchy nodes making up the hierarchy",
                                      "items": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "object",
                                          "description": "A generic hierarchy node, a 'level' in a generic hierarchy that can be used for things like a store or product category hierarchy",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "NodeId": {
                                              "type": "string",
                                              "description": "The HierarchyId Id, in Xfuze canonical form, identifying this hierarchy node amongst other nodes, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Hierarchy::Category_Retail247_123456789"
                                            },
                                            "NodeKey": {
                                              "type": "string",
                                              "description": "The 'natural' hierarchy number"
                                            },
                                            "NodeCode": {
                                              "type": "string",
                                              "description": "The code of this hierarchy node/level"
                                            },
                                            "ParentNodeId": {
                                              "type": "string",
                                              "description": "The parent (direct parent) HierarchyId Id, in Xfuze canonical form, identifying this hierarchy node amongst other nodes, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Hierarchy::Category_Retail247_123456789"
                                            },
                                            "ParentNodeKey": {
                                              "type": "string",
                                              "description": "The 'natural' parent (direct parent) number"
                                            },
                                            "ParentNodeCode": {
                                              "type": "string",
                                              "description": "The code of this parent (direct parent) hierarchy node/level"
                                            },
                                            "NodeStatusCode": {
                                              "type": "string",
                                              "description": "The status code of this hierarchy node/level"
                                            },
                                            "NodeName": {
                                              "type": "string",
                                              "description": "The name of this hierarchy node/level"
                                            },
                                            "NodeClass": {
                                              "type": "string",
                                              "description": "The class of this hierarchy type depending on nature/usage of the hierarchy / node e.g Store, Product "
                                            },
                                            "NodeType": {
                                              "type": "string",
                                              "description": "The type of this hierarchy node/level itself depending on nature/usage of the hierarchy / node e.g Company level in a store heirarchy "
                                            },
                                            "NodeDesc": {
                                              "type": "string",
                                              "description": "The description of this hierarchy node/level"
                                            },
                                            "NodeLevel": {
                                              "type": "number",
                                              "description": "The number of the level of this level e.g 1..5"
                                            },
                                            "L1": {
                                              "type": "string",
                                              "description": "The hierarchy value for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L1Name": {
                                              "type": "string",
                                              "description": "The hierarchy name for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L1Type": {
                                              "type": "string",
                                              "description": "The hierarchy type for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L2": {
                                              "type": "string",
                                              "description": "The hierarchy value for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L2Name": {
                                              "type": "string",
                                              "description": "The hierarchy name for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L2Type": {
                                              "type": "string",
                                              "description": "The hierarchy type for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L3": {
                                              "type": "string",
                                              "description": "The hierarchy value for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L3Name": {
                                              "type": "string",
                                              "description": "The hierarchy name for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L3Type": {
                                              "type": "string",
                                              "description": "The hierarchy type for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L4": {
                                              "type": "string",
                                              "description": "The hierarchy value for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L4Name": {
                                              "type": "string",
                                              "description": "The hierarchy name for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L4Type": {
                                              "type": "string",
                                              "description": "The hierarchy type for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L5": {
                                              "type": "string",
                                              "description": "The hierarchy value for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L5Name": {
                                              "type": "string",
                                              "description": "The hierarchy name for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L5Type": {
                                              "type": "string",
                                              "description": "The hierarchy type for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "IsOverride": {
                                              "type": "string",
                                              "description": "Can this be overriden? e.g Y",
                                              "enum": [
                                                "Y",
                                                "N",
                                                "U"
                                              ]
                                            },
                                            "IsChecked": {
                                              "type": "string",
                                              "description": "Has this been checked? e.g Y",
                                              "enum": [
                                                "Y",
                                                "N",
                                                "U"
                                              ]
                                            },
                                            "Lang": {
                                              "type": "string",
                                              "description": "The language used for localisation of this hierarchy node/level"
                                            },
                                            "Locale": {
                                              "type": "string",
                                              "description": "The locale used for localisation of this hierarchy node/level"
                                            },
                                            "Keywords": {
                                              "type": "string",
                                              "description": "The keywords associated with the hierarchy node/level"
                                            },
                                            "Country": {
                                              "description": "The description of this hierarchy node/level",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "object",
                                                "description": "A country object, based on official ISO 3166",
                                                "anyOf": [
                                                  {
                                                    "required": [
                                                      "ISO2"
                                                    ]
                                                  },
                                                  {
                                                    "required": [
                                                      "ISO3"
                                                    ]
                                                  }
                                                ],
                                                "unevaluatedProperties": false,
                                                "properties": {
                                                  "ISO2": {
                                                    "type": "string",
                                                    "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                                  },
                                                  "ISO3": {
                                                    "type": "string",
                                                    "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                                  },
                                                  "CountryCode": {
                                                    "type": "string",
                                                    "description": "The canonical CountryCode (country-code) country code e.g 036"
                                                  },
                                                  "Name": {
                                                    "type": "string",
                                                    "description": "The canonical (official) 'Name' of the country e.g Australia"
                                                  },
                                                  "AltName": {
                                                    "type": "string",
                                                    "description": "An alternate name for the country"
                                                  },
                                                  "RegionCode": {
                                                    "type": "string",
                                                    "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                                  },
                                                  "RegionName": {
                                                    "type": "string",
                                                    "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                                  },
                                                  "SubRegionCode": {
                                                    "type": "string",
                                                    "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                                  },
                                                  "SubRegionName": {
                                                    "type": "string",
                                                    "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                                  },
                                                  "IntermediateRegionCode": {
                                                    "type": "string",
                                                    "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                                  },
                                                  "IntermediateRegionName": {
                                                    "type": "string",
                                                    "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                                  },
                                                  "Coordinates": {
                                                    "description": "The canonical Coordinates of the country (canonical from google)",
                                                    "type": "object",
                                                    "unevaluatedProperties": false,
                                                    "properties": {
                                                      "Latitude": {
                                                        "type": "number",
                                                        "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                                        "minimum": -90,
                                                        "maximum": 90
                                                      },
                                                      "Longitude": {
                                                        "type": "number",
                                                        "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                                        "minimum": -180,
                                                        "maximum": 180
                                                      },
                                                      "Lineage": {
                                                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                        "type": "object",
                                                        "unevaluatedProperties": false,
                                                        "properties": {
                                                          "EntityId": {
                                                            "type": "string",
                                                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                          },
                                                          "EventId": {
                                                            "type": "string",
                                                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                          },
                                                          "AsOf": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                          }
                                                        },
                                                        "required": [
                                                          "EventId,AsOf"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "Latitude",
                                                      "Longitude"
                                                    ]
                                                  },
                                                  "PrimaryLanguage": {
                                                    "type": "string",
                                                    "description": "The canonical Primary Language of the country"
                                                  },
                                                  "Currency": {
                                                    "description": "The canonical Currency Code of the country (canonical from google)",
                                                    "type": "object",
                                                    "anyOf": [
                                                      {
                                                        "required": [
                                                          "ISO2"
                                                        ]
                                                      },
                                                      {
                                                        "required": [
                                                          "ISO3"
                                                        ]
                                                      }
                                                    ],
                                                    "unevaluatedProperties": false,
                                                    "properties": {
                                                      "ISO2": {
                                                        "type": "string",
                                                        "description": "The canonical ISO2 currency code"
                                                      },
                                                      "ISO3": {
                                                        "type": "string",
                                                        "description": "The canonical ISO3 currency code"
                                                      },
                                                      "Number": {
                                                        "type": "string",
                                                        "description": "The canonical currency number"
                                                      },
                                                      "DecimalPlaces": {
                                                        "type": "string",
                                                        "description": "The canonical number of decimal places for the currency"
                                                      },
                                                      "CountryCodes": {
                                                        "type": "array",
                                                        "description": "The canonical array of ISO3 country codes officially using this currency",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "Symbol": {
                                                        "type": "string",
                                                        "description": "The canonical symbol for the currency"
                                                      },
                                                      "Lineage": {
                                                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                        "type": "object",
                                                        "unevaluatedProperties": false,
                                                        "properties": {
                                                          "EntityId": {
                                                            "type": "string",
                                                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                          },
                                                          "EventId": {
                                                            "type": "string",
                                                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                          },
                                                          "AsOf": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                          }
                                                        },
                                                        "required": [
                                                          "EventId,AsOf"
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  "IsEuropeanCountry": {
                                                    "type": "string",
                                                    "description": "Is this country an european one? e.g Y",
                                                    "enum": [
                                                      "Y",
                                                      "N",
                                                      "U"
                                                    ]
                                                  },
                                                  "Lineage": {
                                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                    "type": "object",
                                                    "unevaluatedProperties": false,
                                                    "properties": {
                                                      "EntityId": {
                                                        "type": "string",
                                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                      },
                                                      "EventId": {
                                                        "type": "string",
                                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                      },
                                                      "AsOf": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                      }
                                                    },
                                                    "required": [
                                                      "EventId,AsOf"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "Nodes",
                                    "NumNodes"
                                  ]
                                },
                                "LocationName": {
                                  "description": "The full name details of the location if applicable",
                                  "type": "object",
                                  "required": [
                                    "OrgName",
                                    "OrgNameType"
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "OrgNameId": {
                                      "type": "string",
                                      "description": "The canonical (synthetic) Xfuze name id for the name if identifiable and has some unique key e.g OrgName_D365_55555"
                                    },
                                    "OrgNameKey": {
                                      "type": "string",
                                      "description": "The native name key / number of the name master, if identifiable and thus has some unique key e.g 55555"
                                    },
                                    "OrgName": {
                                      "type": "string",
                                      "description": "The standard org name (organisation as top level) managing/owning/running this location"
                                    },
                                    "OrgCode": {
                                      "type": "string",
                                      "description": "The standard org code (organisation as top level) for this location"
                                    },
                                    "TradingOrgName": {
                                      "type": "string",
                                      "description": "The official trading name (organisation as top level) the org trades as"
                                    },
                                    "CommonOrgName": {
                                      "type": "string",
                                      "description": "The common trading name (organisation as top level) the org trades as"
                                    },
                                    "CompanyName": {
                                      "type": "string",
                                      "description": "The standard company name (company under the top level organisation) name for this location"
                                    },
                                    "CompanyCode": {
                                      "type": "string",
                                      "description": "The standard company code (company under the top level organisation) for this location"
                                    },
                                    "TradingCompanyName": {
                                      "type": "string",
                                      "description": "The official trading company name (company under the top level organisaton) the org trades as"
                                    },
                                    "CommonCompanyName": {
                                      "type": "string",
                                      "description": "The common trading company name (company under the top level organisaton) the org trades as"
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "LocationAddress": {
                                  "description": "The physical address details of the location",
                                  "type": "object",
                                  "required": [
                                    "AddressLines"
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "Id": {
                                      "type": "string",
                                      "description": "The canonical (synthetic) Xfuze address id if identifiable and has some unique key e.g Address_D365_987654"
                                    },
                                    "Number": {
                                      "type": "string",
                                      "description": "The native address number of the address master if identifiable and has some unique key e.g 987654"
                                    },
                                    "Type": {
                                      "type": "string",
                                      "description": "The type of the address",
                                      "enum": [
                                        "Residential",
                                        "Business",
                                        "Billing",
                                        "Shipping",
                                        "Mailing",
                                        "Postal",
                                        "POBox",
                                        "Physical",
                                        "Service",
                                        "Forwarding",
                                        "Temporary",
                                        "Work",
                                        "Home",
                                        "Other"
                                      ]
                                    },
                                    "Purpose": {
                                      "type": "string",
                                      "description": "The purpose of the usage of the address",
                                      "enum": [
                                        "Billing",
                                        "Invoice",
                                        "Delivery",
                                        "Contact",
                                        "Customer",
                                        "Shipping",
                                        "ReturnExchange",
                                        "Store",
                                        "Warehouse",
                                        "Marketing",
                                        "LegitimateInterest",
                                        "Supplier",
                                        "Franchisee",
                                        "Employee",
                                        "PhysicalEvent",
                                        "DropOff",
                                        "Collection",
                                        "LogisticsPoint",
                                        "Other"
                                      ]
                                    },
                                    "FormattedAddress": {
                                      "type": "string",
                                      "description": "The fully formatted address with all address parts as a single string"
                                    },
                                    "AddressName": {
                                      "type": "string",
                                      "description": "The name of the address"
                                    },
                                    "AddressDesc": {
                                      "type": "string",
                                      "description": "The description of the address"
                                    },
                                    "Flat": {
                                      "type": "string",
                                      "description": "The flat number of the address"
                                    },
                                    "HouseNameNumber": {
                                      "type": "string",
                                      "description": "The house / name number of the address"
                                    },
                                    "AddressLines": {
                                      "description": "The address line 1..5 of the address",
                                      "type": "object",
                                      "required": [
                                        "Line1"
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Line1": {
                                          "type": "string",
                                          "description": "The address line 1 of the address"
                                        },
                                        "Line2": {
                                          "type": "string",
                                          "description": "The address line 2 of the address"
                                        },
                                        "Line3": {
                                          "type": "string",
                                          "description": "The address line 3 of the address"
                                        },
                                        "Line4": {
                                          "type": "string",
                                          "description": "The address line 4 of the address"
                                        },
                                        "Line5": {
                                          "type": "string",
                                          "description": "The address line 5 of the address"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "TownCity": {
                                      "description": "The town / city of the address",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "required": [
                                            "name"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "country"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Name": {
                                          "type": "string",
                                          "description": "The name of the city or town."
                                        },
                                        "Code": {
                                          "type": "string",
                                          "description": "The code of the city or town."
                                        },
                                        "Country": {
                                          "type": "object",
                                          "description": "A country object, based on official ISO 3166",
                                          "anyOf": [
                                            {
                                              "required": [
                                                "ISO2"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "ISO3"
                                              ]
                                            }
                                          ],
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "ISO2": {
                                              "type": "string",
                                              "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                            },
                                            "ISO3": {
                                              "type": "string",
                                              "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                            },
                                            "CountryCode": {
                                              "type": "string",
                                              "description": "The canonical CountryCode (country-code) country code e.g 036"
                                            },
                                            "Name": {
                                              "type": "string",
                                              "description": "The canonical (official) 'Name' of the country e.g Australia"
                                            },
                                            "AltName": {
                                              "type": "string",
                                              "description": "An alternate name for the country"
                                            },
                                            "RegionCode": {
                                              "type": "string",
                                              "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                            },
                                            "RegionName": {
                                              "type": "string",
                                              "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                            },
                                            "SubRegionCode": {
                                              "type": "string",
                                              "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                            },
                                            "SubRegionName": {
                                              "type": "string",
                                              "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                            },
                                            "IntermediateRegionCode": {
                                              "type": "string",
                                              "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                            },
                                            "IntermediateRegionName": {
                                              "type": "string",
                                              "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                            },
                                            "Coordinates": {
                                              "description": "The canonical Coordinates of the country (canonical from google)",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "Latitude": {
                                                  "type": "number",
                                                  "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                                  "minimum": -90,
                                                  "maximum": 90
                                                },
                                                "Longitude": {
                                                  "type": "number",
                                                  "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                                  "minimum": -180,
                                                  "maximum": 180
                                                },
                                                "Lineage": {
                                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                  "type": "object",
                                                  "unevaluatedProperties": false,
                                                  "properties": {
                                                    "EntityId": {
                                                      "type": "string",
                                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                    },
                                                    "EventId": {
                                                      "type": "string",
                                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                    },
                                                    "AsOf": {
                                                      "type": "string",
                                                      "format": "date-time",
                                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                    }
                                                  },
                                                  "required": [
                                                    "EventId,AsOf"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "Latitude",
                                                "Longitude"
                                              ]
                                            },
                                            "PrimaryLanguage": {
                                              "type": "string",
                                              "description": "The canonical Primary Language of the country"
                                            },
                                            "Currency": {
                                              "description": "The canonical Currency Code of the country (canonical from google)",
                                              "type": "object",
                                              "anyOf": [
                                                {
                                                  "required": [
                                                    "ISO2"
                                                  ]
                                                },
                                                {
                                                  "required": [
                                                    "ISO3"
                                                  ]
                                                }
                                              ],
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "ISO2": {
                                                  "type": "string",
                                                  "description": "The canonical ISO2 currency code"
                                                },
                                                "ISO3": {
                                                  "type": "string",
                                                  "description": "The canonical ISO3 currency code"
                                                },
                                                "Number": {
                                                  "type": "string",
                                                  "description": "The canonical currency number"
                                                },
                                                "DecimalPlaces": {
                                                  "type": "string",
                                                  "description": "The canonical number of decimal places for the currency"
                                                },
                                                "CountryCodes": {
                                                  "type": "array",
                                                  "description": "The canonical array of ISO3 country codes officially using this currency",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "Symbol": {
                                                  "type": "string",
                                                  "description": "The canonical symbol for the currency"
                                                },
                                                "Lineage": {
                                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                  "type": "object",
                                                  "unevaluatedProperties": false,
                                                  "properties": {
                                                    "EntityId": {
                                                      "type": "string",
                                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                    },
                                                    "EventId": {
                                                      "type": "string",
                                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                    },
                                                    "AsOf": {
                                                      "type": "string",
                                                      "format": "date-time",
                                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                    }
                                                  },
                                                  "required": [
                                                    "EventId,AsOf"
                                                  ]
                                                }
                                              }
                                            },
                                            "IsEuropeanCountry": {
                                              "type": "string",
                                              "description": "Is this country an european one? e.g Y",
                                              "enum": [
                                                "Y",
                                                "N",
                                                "U"
                                              ]
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          }
                                        },
                                        "Population": {
                                          "type": "number",
                                          "minimum": 0,
                                          "description": "The population of the city or town."
                                        },
                                        "Coordinates": {
                                          "description": "The geographical coordinates of the city or town.",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "Latitude": {
                                              "type": "number",
                                              "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                              "minimum": -90,
                                              "maximum": 90
                                            },
                                            "Longitude": {
                                              "type": "number",
                                              "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                              "minimum": -180,
                                              "maximum": 180
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "Latitude",
                                            "Longitude"
                                          ]
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    },
                                    "Postcode": {
                                      "description": "The Postcode of the address",
                                      "type": "object",
                                      "required": [
                                        "PostcodeCode"
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Postcode": {
                                          "type": "string",
                                          "description": "The full postcode of the address e.g SW1A 1AA"
                                        },
                                        "PostcodeScheme": {
                                          "type": "string",
                                          "description": "The scheme of the postcode e.g UK, US, AUS"
                                        },
                                        "PostcodeArea": {
                                          "type": "string",
                                          "description": "The area part of the postcode of the address e.g SW"
                                        },
                                        "PostcodeDistrict": {
                                          "type": "string",
                                          "description": "The district part of the postcode of the address e.g 1A"
                                        },
                                        "PostcodeSector": {
                                          "type": "string",
                                          "description": "The sector part of the postcode of the address e.g 1"
                                        },
                                        "PostcodeUnit": {
                                          "type": "string",
                                          "description": "The sector part of the postcode of the address e.g AA"
                                        },
                                        "IsVerified": {
                                          "type": "string",
                                          "description": "Has the postcode been verified? e.g Y",
                                          "enum": [
                                            "Y",
                                            "N",
                                            "U"
                                          ]
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Country": {
                                      "type": "object",
                                      "description": "A country object, based on official ISO 3166",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                        },
                                        "CountryCode": {
                                          "type": "string",
                                          "description": "The canonical CountryCode (country-code) country code e.g 036"
                                        },
                                        "Name": {
                                          "type": "string",
                                          "description": "The canonical (official) 'Name' of the country e.g Australia"
                                        },
                                        "AltName": {
                                          "type": "string",
                                          "description": "An alternate name for the country"
                                        },
                                        "RegionCode": {
                                          "type": "string",
                                          "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                        },
                                        "RegionName": {
                                          "type": "string",
                                          "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                        },
                                        "SubRegionCode": {
                                          "type": "string",
                                          "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                        },
                                        "SubRegionName": {
                                          "type": "string",
                                          "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                        },
                                        "IntermediateRegionCode": {
                                          "type": "string",
                                          "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                        },
                                        "IntermediateRegionName": {
                                          "type": "string",
                                          "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                        },
                                        "Coordinates": {
                                          "description": "The canonical Coordinates of the country (canonical from google)",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "Latitude": {
                                              "type": "number",
                                              "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                              "minimum": -90,
                                              "maximum": 90
                                            },
                                            "Longitude": {
                                              "type": "number",
                                              "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                              "minimum": -180,
                                              "maximum": 180
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "Latitude",
                                            "Longitude"
                                          ]
                                        },
                                        "PrimaryLanguage": {
                                          "type": "string",
                                          "description": "The canonical Primary Language of the country"
                                        },
                                        "Currency": {
                                          "description": "The canonical Currency Code of the country (canonical from google)",
                                          "type": "object",
                                          "anyOf": [
                                            {
                                              "required": [
                                                "ISO2"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "ISO3"
                                              ]
                                            }
                                          ],
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "ISO2": {
                                              "type": "string",
                                              "description": "The canonical ISO2 currency code"
                                            },
                                            "ISO3": {
                                              "type": "string",
                                              "description": "The canonical ISO3 currency code"
                                            },
                                            "Number": {
                                              "type": "string",
                                              "description": "The canonical currency number"
                                            },
                                            "DecimalPlaces": {
                                              "type": "string",
                                              "description": "The canonical number of decimal places for the currency"
                                            },
                                            "CountryCodes": {
                                              "type": "array",
                                              "description": "The canonical array of ISO3 country codes officially using this currency",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "Symbol": {
                                              "type": "string",
                                              "description": "The canonical symbol for the currency"
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          }
                                        },
                                        "IsEuropeanCountry": {
                                          "type": "string",
                                          "description": "Is this country an european one? e.g Y",
                                          "enum": [
                                            "Y",
                                            "N",
                                            "U"
                                          ]
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Coordinates": {
                                      "description": "The geographical coordinates of the city or town.",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Latitude": {
                                          "type": "number",
                                          "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                          "minimum": -90,
                                          "maximum": 90
                                        },
                                        "Longitude": {
                                          "type": "number",
                                          "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                          "minimum": -180,
                                          "maximum": 180
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "Latitude",
                                        "Longitude"
                                      ]
                                    },
                                    "IsPrimary": {
                                      "type": "string",
                                      "description": "Ia this address a primary one? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "IsVerified": {
                                      "type": "string",
                                      "description": "Is this address verified by an official address lookup / validator? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "IsEncrypted": {
                                      "type": "string",
                                      "description": "Is this address encrypted? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "LocationAtts": {
                                  "type": "array",
                                  "description": "A collection (array) of extended location attributes",
                                  "items": {
                                    "type": "object",
                                    "description": "A custom att object, a generic extension object",
                                    "required": [
                                      "Code",
                                      "Value"
                                    ],
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "Code": {
                                        "type": "string",
                                        "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                                      },
                                      "CodeShort": {
                                        "type": "string",
                                        "description": "The short version of the code in the leaf element of 'Code'"
                                      },
                                      "Name": {
                                        "type": "string",
                                        "description": "The name of the att"
                                      },
                                      "Value": {
                                        "type": "string",
                                        "description": "The value of the att"
                                      },
                                      "Desc": {
                                        "type": "string",
                                        "description": "The desc of the att"
                                      },
                                      "SourceSystem": {
                                        "type": "string",
                                        "description": "The source system this att is from"
                                      },
                                      "Lineage": {
                                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                        "type": "object",
                                        "unevaluatedProperties": false,
                                        "properties": {
                                          "EntityId": {
                                            "type": "string",
                                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                          },
                                          "EventId": {
                                            "type": "string",
                                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                          },
                                          "AsOf": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                          }
                                        },
                                        "required": [
                                          "EventId,AsOf"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "DistributionLocation": {
                              "description": "The channel/touchpoint of the distribution of the order",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "LocationId": {
                                  "type": "string",
                                  "description": "The canonical (synthetic) SDV location ID format Location_[sourceSystem]_[LocationNumber] e.g Location_D365_010"
                                },
                                "LocationNodeId": {
                                  "type": "string",
                                  "description": "The specific node id in the location hierarchy"
                                },
                                "LocationNumber": {
                                  "type": "string",
                                  "description": "The 'native' location number of the location like a storeNumber e.g 010"
                                },
                                "LocationType": {
                                  "type": "string",
                                  "description": "The (core) type of the location e.g Warehouse, Store, Transit, Online"
                                },
                                "LocationShortName": {
                                  "type": "string",
                                  "description": "The (short / default) name of the location e.g GBC DC"
                                },
                                "HierarchyNode": {
                                  "description": "The specific hierarchy details of this location itself",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "NodeId": {
                                      "type": "string",
                                      "description": "The HierarchyId Id, in Xfuze canonical form, identifying this hierarchy node amongst other nodes, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Hierarchy::Category_Retail247_123456789"
                                    },
                                    "NodeKey": {
                                      "type": "string",
                                      "description": "The 'natural' hierarchy number"
                                    },
                                    "NodeCode": {
                                      "type": "string",
                                      "description": "The code of this hierarchy node/level"
                                    },
                                    "ParentNodeId": {
                                      "type": "string",
                                      "description": "The parent (direct parent) HierarchyId Id, in Xfuze canonical form, identifying this hierarchy node amongst other nodes, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Hierarchy::Category_Retail247_123456789"
                                    },
                                    "ParentNodeKey": {
                                      "type": "string",
                                      "description": "The 'natural' parent (direct parent) number"
                                    },
                                    "ParentNodeCode": {
                                      "type": "string",
                                      "description": "The code of this parent (direct parent) hierarchy node/level"
                                    },
                                    "NodeStatusCode": {
                                      "type": "string",
                                      "description": "The status code of this hierarchy node/level"
                                    },
                                    "NodeName": {
                                      "type": "string",
                                      "description": "The name of this hierarchy node/level"
                                    },
                                    "NodeClass": {
                                      "type": "string",
                                      "description": "The class of this hierarchy type depending on nature/usage of the hierarchy / node e.g Store, Product "
                                    },
                                    "NodeType": {
                                      "type": "string",
                                      "description": "The type of this hierarchy node/level itself depending on nature/usage of the hierarchy / node e.g Company level in a store heirarchy "
                                    },
                                    "NodeDesc": {
                                      "type": "string",
                                      "description": "The description of this hierarchy node/level"
                                    },
                                    "NodeLevel": {
                                      "type": "number",
                                      "description": "The number of the level of this level e.g 1..5"
                                    },
                                    "L1": {
                                      "type": "string",
                                      "description": "The hierarchy value for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L1Name": {
                                      "type": "string",
                                      "description": "The hierarchy name for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L1Type": {
                                      "type": "string",
                                      "description": "The hierarchy type for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L2": {
                                      "type": "string",
                                      "description": "The hierarchy value for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L2Name": {
                                      "type": "string",
                                      "description": "The hierarchy name for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L2Type": {
                                      "type": "string",
                                      "description": "The hierarchy type for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L3": {
                                      "type": "string",
                                      "description": "The hierarchy value for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L3Name": {
                                      "type": "string",
                                      "description": "The hierarchy name for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L3Type": {
                                      "type": "string",
                                      "description": "The hierarchy type for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L4": {
                                      "type": "string",
                                      "description": "The hierarchy value for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L4Name": {
                                      "type": "string",
                                      "description": "The hierarchy name for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L4Type": {
                                      "type": "string",
                                      "description": "The hierarchy type for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L5": {
                                      "type": "string",
                                      "description": "The hierarchy value for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L5Name": {
                                      "type": "string",
                                      "description": "The hierarchy name for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "L5Type": {
                                      "type": "string",
                                      "description": "The hierarchy type for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                    },
                                    "IsOverride": {
                                      "type": "string",
                                      "description": "Can this be overriden? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "IsChecked": {
                                      "type": "string",
                                      "description": "Has this been checked? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "Lang": {
                                      "type": "string",
                                      "description": "The language used for localisation of this hierarchy node/level"
                                    },
                                    "Locale": {
                                      "type": "string",
                                      "description": "The locale used for localisation of this hierarchy node/level"
                                    },
                                    "Keywords": {
                                      "type": "string",
                                      "description": "The keywords associated with the hierarchy node/level"
                                    },
                                    "Country": {
                                      "description": "The description of this hierarchy node/level",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "object",
                                        "description": "A country object, based on official ISO 3166",
                                        "anyOf": [
                                          {
                                            "required": [
                                              "ISO2"
                                            ]
                                          },
                                          {
                                            "required": [
                                              "ISO3"
                                            ]
                                          }
                                        ],
                                        "unevaluatedProperties": false,
                                        "properties": {
                                          "ISO2": {
                                            "type": "string",
                                            "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                          },
                                          "ISO3": {
                                            "type": "string",
                                            "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                          },
                                          "CountryCode": {
                                            "type": "string",
                                            "description": "The canonical CountryCode (country-code) country code e.g 036"
                                          },
                                          "Name": {
                                            "type": "string",
                                            "description": "The canonical (official) 'Name' of the country e.g Australia"
                                          },
                                          "AltName": {
                                            "type": "string",
                                            "description": "An alternate name for the country"
                                          },
                                          "RegionCode": {
                                            "type": "string",
                                            "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                          },
                                          "RegionName": {
                                            "type": "string",
                                            "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                          },
                                          "SubRegionCode": {
                                            "type": "string",
                                            "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                          },
                                          "SubRegionName": {
                                            "type": "string",
                                            "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                          },
                                          "IntermediateRegionCode": {
                                            "type": "string",
                                            "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                          },
                                          "IntermediateRegionName": {
                                            "type": "string",
                                            "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                          },
                                          "Coordinates": {
                                            "description": "The canonical Coordinates of the country (canonical from google)",
                                            "type": "object",
                                            "unevaluatedProperties": false,
                                            "properties": {
                                              "Latitude": {
                                                "type": "number",
                                                "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                                "minimum": -90,
                                                "maximum": 90
                                              },
                                              "Longitude": {
                                                "type": "number",
                                                "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                                "minimum": -180,
                                                "maximum": 180
                                              },
                                              "Lineage": {
                                                "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                "type": "object",
                                                "unevaluatedProperties": false,
                                                "properties": {
                                                  "EntityId": {
                                                    "type": "string",
                                                    "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                  },
                                                  "EventId": {
                                                    "type": "string",
                                                    "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                  },
                                                  "AsOf": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                  }
                                                },
                                                "required": [
                                                  "EventId,AsOf"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "Latitude",
                                              "Longitude"
                                            ]
                                          },
                                          "PrimaryLanguage": {
                                            "type": "string",
                                            "description": "The canonical Primary Language of the country"
                                          },
                                          "Currency": {
                                            "description": "The canonical Currency Code of the country (canonical from google)",
                                            "type": "object",
                                            "anyOf": [
                                              {
                                                "required": [
                                                  "ISO2"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "ISO3"
                                                ]
                                              }
                                            ],
                                            "unevaluatedProperties": false,
                                            "properties": {
                                              "ISO2": {
                                                "type": "string",
                                                "description": "The canonical ISO2 currency code"
                                              },
                                              "ISO3": {
                                                "type": "string",
                                                "description": "The canonical ISO3 currency code"
                                              },
                                              "Number": {
                                                "type": "string",
                                                "description": "The canonical currency number"
                                              },
                                              "DecimalPlaces": {
                                                "type": "string",
                                                "description": "The canonical number of decimal places for the currency"
                                              },
                                              "CountryCodes": {
                                                "type": "array",
                                                "description": "The canonical array of ISO3 country codes officially using this currency",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "Symbol": {
                                                "type": "string",
                                                "description": "The canonical symbol for the currency"
                                              },
                                              "Lineage": {
                                                "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                "type": "object",
                                                "unevaluatedProperties": false,
                                                "properties": {
                                                  "EntityId": {
                                                    "type": "string",
                                                    "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                  },
                                                  "EventId": {
                                                    "type": "string",
                                                    "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                  },
                                                  "AsOf": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                  }
                                                },
                                                "required": [
                                                  "EventId,AsOf"
                                                ]
                                              }
                                            }
                                          },
                                          "IsEuropeanCountry": {
                                            "type": "string",
                                            "description": "Is this country an european one? e.g Y",
                                            "enum": [
                                              "Y",
                                              "N",
                                              "U"
                                            ]
                                          },
                                          "Lineage": {
                                            "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                            "type": "object",
                                            "unevaluatedProperties": false,
                                            "properties": {
                                              "EntityId": {
                                                "type": "string",
                                                "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                              },
                                              "EventId": {
                                                "type": "string",
                                                "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                              },
                                              "AsOf": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                              }
                                            },
                                            "required": [
                                              "EventId,AsOf"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "Hierarchy": {
                                  "description": "The hierarchy (breadcrumbs) of the location in its hierarchy, typically L1 to L5",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "HierarchyId": {
                                      "type": "string",
                                      "description": "The Hierarchy Id, in Xfuze canonical form, identifying this hierarchy collection amongst other collections, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Location_Crew_1234567"
                                    },
                                    "HierarchyKey": {
                                      "type": "string",
                                      "description": "The 'natural' hierarchy collection key/number if identifiable"
                                    },
                                    "NumNodes": {
                                      "type": "number",
                                      "description": "The number of nodes in the collection"
                                    },
                                    "Nodes": {
                                      "type": "array",
                                      "description": "The collection of hierarchy nodes making up the hierarchy",
                                      "items": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "object",
                                          "description": "A generic hierarchy node, a 'level' in a generic hierarchy that can be used for things like a store or product category hierarchy",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "NodeId": {
                                              "type": "string",
                                              "description": "The HierarchyId Id, in Xfuze canonical form, identifying this hierarchy node amongst other nodes, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Hierarchy::Category_Retail247_123456789"
                                            },
                                            "NodeKey": {
                                              "type": "string",
                                              "description": "The 'natural' hierarchy number"
                                            },
                                            "NodeCode": {
                                              "type": "string",
                                              "description": "The code of this hierarchy node/level"
                                            },
                                            "ParentNodeId": {
                                              "type": "string",
                                              "description": "The parent (direct parent) HierarchyId Id, in Xfuze canonical form, identifying this hierarchy node amongst other nodes, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Hierarchy::Category_Retail247_123456789"
                                            },
                                            "ParentNodeKey": {
                                              "type": "string",
                                              "description": "The 'natural' parent (direct parent) number"
                                            },
                                            "ParentNodeCode": {
                                              "type": "string",
                                              "description": "The code of this parent (direct parent) hierarchy node/level"
                                            },
                                            "NodeStatusCode": {
                                              "type": "string",
                                              "description": "The status code of this hierarchy node/level"
                                            },
                                            "NodeName": {
                                              "type": "string",
                                              "description": "The name of this hierarchy node/level"
                                            },
                                            "NodeClass": {
                                              "type": "string",
                                              "description": "The class of this hierarchy type depending on nature/usage of the hierarchy / node e.g Store, Product "
                                            },
                                            "NodeType": {
                                              "type": "string",
                                              "description": "The type of this hierarchy node/level itself depending on nature/usage of the hierarchy / node e.g Company level in a store heirarchy "
                                            },
                                            "NodeDesc": {
                                              "type": "string",
                                              "description": "The description of this hierarchy node/level"
                                            },
                                            "NodeLevel": {
                                              "type": "number",
                                              "description": "The number of the level of this level e.g 1..5"
                                            },
                                            "L1": {
                                              "type": "string",
                                              "description": "The hierarchy value for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L1Name": {
                                              "type": "string",
                                              "description": "The hierarchy name for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L1Type": {
                                              "type": "string",
                                              "description": "The hierarchy type for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L2": {
                                              "type": "string",
                                              "description": "The hierarchy value for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L2Name": {
                                              "type": "string",
                                              "description": "The hierarchy name for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L2Type": {
                                              "type": "string",
                                              "description": "The hierarchy type for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L3": {
                                              "type": "string",
                                              "description": "The hierarchy value for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L3Name": {
                                              "type": "string",
                                              "description": "The hierarchy name for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L3Type": {
                                              "type": "string",
                                              "description": "The hierarchy type for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L4": {
                                              "type": "string",
                                              "description": "The hierarchy value for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L4Name": {
                                              "type": "string",
                                              "description": "The hierarchy name for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L4Type": {
                                              "type": "string",
                                              "description": "The hierarchy type for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L5": {
                                              "type": "string",
                                              "description": "The hierarchy value for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L5Name": {
                                              "type": "string",
                                              "description": "The hierarchy name for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "L5Type": {
                                              "type": "string",
                                              "description": "The hierarchy type for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                            },
                                            "IsOverride": {
                                              "type": "string",
                                              "description": "Can this be overriden? e.g Y",
                                              "enum": [
                                                "Y",
                                                "N",
                                                "U"
                                              ]
                                            },
                                            "IsChecked": {
                                              "type": "string",
                                              "description": "Has this been checked? e.g Y",
                                              "enum": [
                                                "Y",
                                                "N",
                                                "U"
                                              ]
                                            },
                                            "Lang": {
                                              "type": "string",
                                              "description": "The language used for localisation of this hierarchy node/level"
                                            },
                                            "Locale": {
                                              "type": "string",
                                              "description": "The locale used for localisation of this hierarchy node/level"
                                            },
                                            "Keywords": {
                                              "type": "string",
                                              "description": "The keywords associated with the hierarchy node/level"
                                            },
                                            "Country": {
                                              "description": "The description of this hierarchy node/level",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "object",
                                                "description": "A country object, based on official ISO 3166",
                                                "anyOf": [
                                                  {
                                                    "required": [
                                                      "ISO2"
                                                    ]
                                                  },
                                                  {
                                                    "required": [
                                                      "ISO3"
                                                    ]
                                                  }
                                                ],
                                                "unevaluatedProperties": false,
                                                "properties": {
                                                  "ISO2": {
                                                    "type": "string",
                                                    "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                                  },
                                                  "ISO3": {
                                                    "type": "string",
                                                    "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                                  },
                                                  "CountryCode": {
                                                    "type": "string",
                                                    "description": "The canonical CountryCode (country-code) country code e.g 036"
                                                  },
                                                  "Name": {
                                                    "type": "string",
                                                    "description": "The canonical (official) 'Name' of the country e.g Australia"
                                                  },
                                                  "AltName": {
                                                    "type": "string",
                                                    "description": "An alternate name for the country"
                                                  },
                                                  "RegionCode": {
                                                    "type": "string",
                                                    "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                                  },
                                                  "RegionName": {
                                                    "type": "string",
                                                    "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                                  },
                                                  "SubRegionCode": {
                                                    "type": "string",
                                                    "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                                  },
                                                  "SubRegionName": {
                                                    "type": "string",
                                                    "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                                  },
                                                  "IntermediateRegionCode": {
                                                    "type": "string",
                                                    "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                                  },
                                                  "IntermediateRegionName": {
                                                    "type": "string",
                                                    "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                                  },
                                                  "Coordinates": {
                                                    "description": "The canonical Coordinates of the country (canonical from google)",
                                                    "type": "object",
                                                    "unevaluatedProperties": false,
                                                    "properties": {
                                                      "Latitude": {
                                                        "type": "number",
                                                        "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                                        "minimum": -90,
                                                        "maximum": 90
                                                      },
                                                      "Longitude": {
                                                        "type": "number",
                                                        "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                                        "minimum": -180,
                                                        "maximum": 180
                                                      },
                                                      "Lineage": {
                                                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                        "type": "object",
                                                        "unevaluatedProperties": false,
                                                        "properties": {
                                                          "EntityId": {
                                                            "type": "string",
                                                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                          },
                                                          "EventId": {
                                                            "type": "string",
                                                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                          },
                                                          "AsOf": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                          }
                                                        },
                                                        "required": [
                                                          "EventId,AsOf"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "Latitude",
                                                      "Longitude"
                                                    ]
                                                  },
                                                  "PrimaryLanguage": {
                                                    "type": "string",
                                                    "description": "The canonical Primary Language of the country"
                                                  },
                                                  "Currency": {
                                                    "description": "The canonical Currency Code of the country (canonical from google)",
                                                    "type": "object",
                                                    "anyOf": [
                                                      {
                                                        "required": [
                                                          "ISO2"
                                                        ]
                                                      },
                                                      {
                                                        "required": [
                                                          "ISO3"
                                                        ]
                                                      }
                                                    ],
                                                    "unevaluatedProperties": false,
                                                    "properties": {
                                                      "ISO2": {
                                                        "type": "string",
                                                        "description": "The canonical ISO2 currency code"
                                                      },
                                                      "ISO3": {
                                                        "type": "string",
                                                        "description": "The canonical ISO3 currency code"
                                                      },
                                                      "Number": {
                                                        "type": "string",
                                                        "description": "The canonical currency number"
                                                      },
                                                      "DecimalPlaces": {
                                                        "type": "string",
                                                        "description": "The canonical number of decimal places for the currency"
                                                      },
                                                      "CountryCodes": {
                                                        "type": "array",
                                                        "description": "The canonical array of ISO3 country codes officially using this currency",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "Symbol": {
                                                        "type": "string",
                                                        "description": "The canonical symbol for the currency"
                                                      },
                                                      "Lineage": {
                                                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                        "type": "object",
                                                        "unevaluatedProperties": false,
                                                        "properties": {
                                                          "EntityId": {
                                                            "type": "string",
                                                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                          },
                                                          "EventId": {
                                                            "type": "string",
                                                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                          },
                                                          "AsOf": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                          }
                                                        },
                                                        "required": [
                                                          "EventId,AsOf"
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  "IsEuropeanCountry": {
                                                    "type": "string",
                                                    "description": "Is this country an european one? e.g Y",
                                                    "enum": [
                                                      "Y",
                                                      "N",
                                                      "U"
                                                    ]
                                                  },
                                                  "Lineage": {
                                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                    "type": "object",
                                                    "unevaluatedProperties": false,
                                                    "properties": {
                                                      "EntityId": {
                                                        "type": "string",
                                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                      },
                                                      "EventId": {
                                                        "type": "string",
                                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                      },
                                                      "AsOf": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                      }
                                                    },
                                                    "required": [
                                                      "EventId,AsOf"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "Nodes",
                                    "NumNodes"
                                  ]
                                },
                                "LocationName": {
                                  "description": "The full name details of the location if applicable",
                                  "type": "object",
                                  "required": [
                                    "OrgName",
                                    "OrgNameType"
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "OrgNameId": {
                                      "type": "string",
                                      "description": "The canonical (synthetic) Xfuze name id for the name if identifiable and has some unique key e.g OrgName_D365_55555"
                                    },
                                    "OrgNameKey": {
                                      "type": "string",
                                      "description": "The native name key / number of the name master, if identifiable and thus has some unique key e.g 55555"
                                    },
                                    "OrgName": {
                                      "type": "string",
                                      "description": "The standard org name (organisation as top level) managing/owning/running this location"
                                    },
                                    "OrgCode": {
                                      "type": "string",
                                      "description": "The standard org code (organisation as top level) for this location"
                                    },
                                    "TradingOrgName": {
                                      "type": "string",
                                      "description": "The official trading name (organisation as top level) the org trades as"
                                    },
                                    "CommonOrgName": {
                                      "type": "string",
                                      "description": "The common trading name (organisation as top level) the org trades as"
                                    },
                                    "CompanyName": {
                                      "type": "string",
                                      "description": "The standard company name (company under the top level organisation) name for this location"
                                    },
                                    "CompanyCode": {
                                      "type": "string",
                                      "description": "The standard company code (company under the top level organisation) for this location"
                                    },
                                    "TradingCompanyName": {
                                      "type": "string",
                                      "description": "The official trading company name (company under the top level organisaton) the org trades as"
                                    },
                                    "CommonCompanyName": {
                                      "type": "string",
                                      "description": "The common trading company name (company under the top level organisaton) the org trades as"
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "LocationAddress": {
                                  "description": "The physical address details of the location",
                                  "type": "object",
                                  "required": [
                                    "AddressLines"
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "Id": {
                                      "type": "string",
                                      "description": "The canonical (synthetic) Xfuze address id if identifiable and has some unique key e.g Address_D365_987654"
                                    },
                                    "Number": {
                                      "type": "string",
                                      "description": "The native address number of the address master if identifiable and has some unique key e.g 987654"
                                    },
                                    "Type": {
                                      "type": "string",
                                      "description": "The type of the address",
                                      "enum": [
                                        "Residential",
                                        "Business",
                                        "Billing",
                                        "Shipping",
                                        "Mailing",
                                        "Postal",
                                        "POBox",
                                        "Physical",
                                        "Service",
                                        "Forwarding",
                                        "Temporary",
                                        "Work",
                                        "Home",
                                        "Other"
                                      ]
                                    },
                                    "Purpose": {
                                      "type": "string",
                                      "description": "The purpose of the usage of the address",
                                      "enum": [
                                        "Billing",
                                        "Invoice",
                                        "Delivery",
                                        "Contact",
                                        "Customer",
                                        "Shipping",
                                        "ReturnExchange",
                                        "Store",
                                        "Warehouse",
                                        "Marketing",
                                        "LegitimateInterest",
                                        "Supplier",
                                        "Franchisee",
                                        "Employee",
                                        "PhysicalEvent",
                                        "DropOff",
                                        "Collection",
                                        "LogisticsPoint",
                                        "Other"
                                      ]
                                    },
                                    "FormattedAddress": {
                                      "type": "string",
                                      "description": "The fully formatted address with all address parts as a single string"
                                    },
                                    "AddressName": {
                                      "type": "string",
                                      "description": "The name of the address"
                                    },
                                    "AddressDesc": {
                                      "type": "string",
                                      "description": "The description of the address"
                                    },
                                    "Flat": {
                                      "type": "string",
                                      "description": "The flat number of the address"
                                    },
                                    "HouseNameNumber": {
                                      "type": "string",
                                      "description": "The house / name number of the address"
                                    },
                                    "AddressLines": {
                                      "description": "The address line 1..5 of the address",
                                      "type": "object",
                                      "required": [
                                        "Line1"
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Line1": {
                                          "type": "string",
                                          "description": "The address line 1 of the address"
                                        },
                                        "Line2": {
                                          "type": "string",
                                          "description": "The address line 2 of the address"
                                        },
                                        "Line3": {
                                          "type": "string",
                                          "description": "The address line 3 of the address"
                                        },
                                        "Line4": {
                                          "type": "string",
                                          "description": "The address line 4 of the address"
                                        },
                                        "Line5": {
                                          "type": "string",
                                          "description": "The address line 5 of the address"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "TownCity": {
                                      "description": "The town / city of the address",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "required": [
                                            "name"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "country"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Name": {
                                          "type": "string",
                                          "description": "The name of the city or town."
                                        },
                                        "Code": {
                                          "type": "string",
                                          "description": "The code of the city or town."
                                        },
                                        "Country": {
                                          "type": "object",
                                          "description": "A country object, based on official ISO 3166",
                                          "anyOf": [
                                            {
                                              "required": [
                                                "ISO2"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "ISO3"
                                              ]
                                            }
                                          ],
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "ISO2": {
                                              "type": "string",
                                              "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                            },
                                            "ISO3": {
                                              "type": "string",
                                              "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                            },
                                            "CountryCode": {
                                              "type": "string",
                                              "description": "The canonical CountryCode (country-code) country code e.g 036"
                                            },
                                            "Name": {
                                              "type": "string",
                                              "description": "The canonical (official) 'Name' of the country e.g Australia"
                                            },
                                            "AltName": {
                                              "type": "string",
                                              "description": "An alternate name for the country"
                                            },
                                            "RegionCode": {
                                              "type": "string",
                                              "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                            },
                                            "RegionName": {
                                              "type": "string",
                                              "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                            },
                                            "SubRegionCode": {
                                              "type": "string",
                                              "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                            },
                                            "SubRegionName": {
                                              "type": "string",
                                              "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                            },
                                            "IntermediateRegionCode": {
                                              "type": "string",
                                              "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                            },
                                            "IntermediateRegionName": {
                                              "type": "string",
                                              "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                            },
                                            "Coordinates": {
                                              "description": "The canonical Coordinates of the country (canonical from google)",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "Latitude": {
                                                  "type": "number",
                                                  "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                                  "minimum": -90,
                                                  "maximum": 90
                                                },
                                                "Longitude": {
                                                  "type": "number",
                                                  "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                                  "minimum": -180,
                                                  "maximum": 180
                                                },
                                                "Lineage": {
                                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                  "type": "object",
                                                  "unevaluatedProperties": false,
                                                  "properties": {
                                                    "EntityId": {
                                                      "type": "string",
                                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                    },
                                                    "EventId": {
                                                      "type": "string",
                                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                    },
                                                    "AsOf": {
                                                      "type": "string",
                                                      "format": "date-time",
                                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                    }
                                                  },
                                                  "required": [
                                                    "EventId,AsOf"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "Latitude",
                                                "Longitude"
                                              ]
                                            },
                                            "PrimaryLanguage": {
                                              "type": "string",
                                              "description": "The canonical Primary Language of the country"
                                            },
                                            "Currency": {
                                              "description": "The canonical Currency Code of the country (canonical from google)",
                                              "type": "object",
                                              "anyOf": [
                                                {
                                                  "required": [
                                                    "ISO2"
                                                  ]
                                                },
                                                {
                                                  "required": [
                                                    "ISO3"
                                                  ]
                                                }
                                              ],
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "ISO2": {
                                                  "type": "string",
                                                  "description": "The canonical ISO2 currency code"
                                                },
                                                "ISO3": {
                                                  "type": "string",
                                                  "description": "The canonical ISO3 currency code"
                                                },
                                                "Number": {
                                                  "type": "string",
                                                  "description": "The canonical currency number"
                                                },
                                                "DecimalPlaces": {
                                                  "type": "string",
                                                  "description": "The canonical number of decimal places for the currency"
                                                },
                                                "CountryCodes": {
                                                  "type": "array",
                                                  "description": "The canonical array of ISO3 country codes officially using this currency",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "Symbol": {
                                                  "type": "string",
                                                  "description": "The canonical symbol for the currency"
                                                },
                                                "Lineage": {
                                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                  "type": "object",
                                                  "unevaluatedProperties": false,
                                                  "properties": {
                                                    "EntityId": {
                                                      "type": "string",
                                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                    },
                                                    "EventId": {
                                                      "type": "string",
                                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                    },
                                                    "AsOf": {
                                                      "type": "string",
                                                      "format": "date-time",
                                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                    }
                                                  },
                                                  "required": [
                                                    "EventId,AsOf"
                                                  ]
                                                }
                                              }
                                            },
                                            "IsEuropeanCountry": {
                                              "type": "string",
                                              "description": "Is this country an european one? e.g Y",
                                              "enum": [
                                                "Y",
                                                "N",
                                                "U"
                                              ]
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          }
                                        },
                                        "Population": {
                                          "type": "number",
                                          "minimum": 0,
                                          "description": "The population of the city or town."
                                        },
                                        "Coordinates": {
                                          "description": "The geographical coordinates of the city or town.",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "Latitude": {
                                              "type": "number",
                                              "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                              "minimum": -90,
                                              "maximum": 90
                                            },
                                            "Longitude": {
                                              "type": "number",
                                              "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                              "minimum": -180,
                                              "maximum": 180
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "Latitude",
                                            "Longitude"
                                          ]
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    },
                                    "Postcode": {
                                      "description": "The Postcode of the address",
                                      "type": "object",
                                      "required": [
                                        "PostcodeCode"
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Postcode": {
                                          "type": "string",
                                          "description": "The full postcode of the address e.g SW1A 1AA"
                                        },
                                        "PostcodeScheme": {
                                          "type": "string",
                                          "description": "The scheme of the postcode e.g UK, US, AUS"
                                        },
                                        "PostcodeArea": {
                                          "type": "string",
                                          "description": "The area part of the postcode of the address e.g SW"
                                        },
                                        "PostcodeDistrict": {
                                          "type": "string",
                                          "description": "The district part of the postcode of the address e.g 1A"
                                        },
                                        "PostcodeSector": {
                                          "type": "string",
                                          "description": "The sector part of the postcode of the address e.g 1"
                                        },
                                        "PostcodeUnit": {
                                          "type": "string",
                                          "description": "The sector part of the postcode of the address e.g AA"
                                        },
                                        "IsVerified": {
                                          "type": "string",
                                          "description": "Has the postcode been verified? e.g Y",
                                          "enum": [
                                            "Y",
                                            "N",
                                            "U"
                                          ]
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Country": {
                                      "type": "object",
                                      "description": "A country object, based on official ISO 3166",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                        },
                                        "CountryCode": {
                                          "type": "string",
                                          "description": "The canonical CountryCode (country-code) country code e.g 036"
                                        },
                                        "Name": {
                                          "type": "string",
                                          "description": "The canonical (official) 'Name' of the country e.g Australia"
                                        },
                                        "AltName": {
                                          "type": "string",
                                          "description": "An alternate name for the country"
                                        },
                                        "RegionCode": {
                                          "type": "string",
                                          "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                        },
                                        "RegionName": {
                                          "type": "string",
                                          "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                        },
                                        "SubRegionCode": {
                                          "type": "string",
                                          "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                        },
                                        "SubRegionName": {
                                          "type": "string",
                                          "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                        },
                                        "IntermediateRegionCode": {
                                          "type": "string",
                                          "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                        },
                                        "IntermediateRegionName": {
                                          "type": "string",
                                          "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                        },
                                        "Coordinates": {
                                          "description": "The canonical Coordinates of the country (canonical from google)",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "Latitude": {
                                              "type": "number",
                                              "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                              "minimum": -90,
                                              "maximum": 90
                                            },
                                            "Longitude": {
                                              "type": "number",
                                              "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                              "minimum": -180,
                                              "maximum": 180
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "Latitude",
                                            "Longitude"
                                          ]
                                        },
                                        "PrimaryLanguage": {
                                          "type": "string",
                                          "description": "The canonical Primary Language of the country"
                                        },
                                        "Currency": {
                                          "description": "The canonical Currency Code of the country (canonical from google)",
                                          "type": "object",
                                          "anyOf": [
                                            {
                                              "required": [
                                                "ISO2"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "ISO3"
                                              ]
                                            }
                                          ],
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "ISO2": {
                                              "type": "string",
                                              "description": "The canonical ISO2 currency code"
                                            },
                                            "ISO3": {
                                              "type": "string",
                                              "description": "The canonical ISO3 currency code"
                                            },
                                            "Number": {
                                              "type": "string",
                                              "description": "The canonical currency number"
                                            },
                                            "DecimalPlaces": {
                                              "type": "string",
                                              "description": "The canonical number of decimal places for the currency"
                                            },
                                            "CountryCodes": {
                                              "type": "array",
                                              "description": "The canonical array of ISO3 country codes officially using this currency",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "Symbol": {
                                              "type": "string",
                                              "description": "The canonical symbol for the currency"
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          }
                                        },
                                        "IsEuropeanCountry": {
                                          "type": "string",
                                          "description": "Is this country an european one? e.g Y",
                                          "enum": [
                                            "Y",
                                            "N",
                                            "U"
                                          ]
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Coordinates": {
                                      "description": "The geographical coordinates of the city or town.",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Latitude": {
                                          "type": "number",
                                          "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                          "minimum": -90,
                                          "maximum": 90
                                        },
                                        "Longitude": {
                                          "type": "number",
                                          "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                          "minimum": -180,
                                          "maximum": 180
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "Latitude",
                                        "Longitude"
                                      ]
                                    },
                                    "IsPrimary": {
                                      "type": "string",
                                      "description": "Ia this address a primary one? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "IsVerified": {
                                      "type": "string",
                                      "description": "Is this address verified by an official address lookup / validator? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "IsEncrypted": {
                                      "type": "string",
                                      "description": "Is this address encrypted? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "LocationAtts": {
                                  "type": "array",
                                  "description": "A collection (array) of extended location attributes",
                                  "items": {
                                    "type": "object",
                                    "description": "A custom att object, a generic extension object",
                                    "required": [
                                      "Code",
                                      "Value"
                                    ],
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "Code": {
                                        "type": "string",
                                        "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                                      },
                                      "CodeShort": {
                                        "type": "string",
                                        "description": "The short version of the code in the leaf element of 'Code'"
                                      },
                                      "Name": {
                                        "type": "string",
                                        "description": "The name of the att"
                                      },
                                      "Value": {
                                        "type": "string",
                                        "description": "The value of the att"
                                      },
                                      "Desc": {
                                        "type": "string",
                                        "description": "The desc of the att"
                                      },
                                      "SourceSystem": {
                                        "type": "string",
                                        "description": "The source system this att is from"
                                      },
                                      "Lineage": {
                                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                        "type": "object",
                                        "unevaluatedProperties": false,
                                        "properties": {
                                          "EntityId": {
                                            "type": "string",
                                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                          },
                                          "EventId": {
                                            "type": "string",
                                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                          },
                                          "AsOf": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                          }
                                        },
                                        "required": [
                                          "EventId,AsOf"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "ProductAtts": {
                          "type": "object",
                          "description": "The (required) collection of product attributes, as captured at point of the sale (i.e not at latest/current time).  Often lines are enriched with a full product, one or both of the 'as-was' view and 'latest'",
                          "unevaluatedProperties": false,
                          "properties": {
                            "ProductIds": {
                              "description": "The collection of core product ids related to identifying the product/variant on this line, as captured at point of the sale.  Sparsely populated depending on what source data is provided",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "ProductId": {
                                  "type": "string",
                                  "description": "The (base) product Id, in Xfuze canonical form, identifying the (base not variant) product e.g Product_Retail247_123456"
                                },
                                "ProductNumber": {
                                  "type": "string",
                                  "description": "The (base) product number (native form like SKU), identifying the (base not variant) product e.g 123456"
                                },
                                "ProductVariantId": {
                                  "type": "string",
                                  "description": "The (variant) product Id, in Xfuze canonical form, identifying the (base not variant) product Often the base [ProductId]_[VariantPart] where variant part can be for example a native key, a size code etc e.g ProductVariant_Retail247_123456789_32R"
                                },
                                "ProductVariantNumber": {
                                  "type": "string",
                                  "description": "The (variant) product number (native form like SKU), identifying the (base not variant) product e.g 123456789_32R"
                                },
                                "ProductVariantNumberType": {
                                  "type": "string",
                                  "description": "The (variant) product number (native form like SKU), identifying the (base not variant) product  e.g 123456789",
                                  "enum": [
                                    "SKU",
                                    "EAN",
                                    "UPC",
                                    "OptionId"
                                  ]
                                },
                                "SKU": {
                                  "type": "string",
                                  "description": "The SKU of the product e.g 123456789"
                                },
                                "EAN": {
                                  "type": "string",
                                  "description": "The EAN (a type of barcode, but here in explicit form) of the product e e.g 5059595842972"
                                },
                                "UPC": {
                                  "type": "string",
                                  "description": "The UPC (a type of barcode, but here in explicit form) of the product e.g 85059595842972"
                                },
                                "Barcode": {
                                  "description": "The barcode of the product e.g 869893435059595842972",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "Barcode": {
                                      "type": "string",
                                      "description": "The barcode data itself"
                                    },
                                    "BarcodeType": {
                                      "type": "string",
                                      "description": "The type of the barcode e.g  UPC, EAB, QRCode, Code39, Code128, DataMatrix, PDF417, ITF14, Codabar, MaxiCode"
                                    },
                                    "BarcodeSource": {
                                      "type": "string",
                                      "description": "The source of the barcode instance"
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "Barcodes": {
                                  "type": "array",
                                  "description": "A collection (array) of barcodes where 1 or more in array form",
                                  "items": {
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "Barcode": {
                                        "type": "string",
                                        "description": "The barcode data itself"
                                      },
                                      "BarcodeType": {
                                        "type": "string",
                                        "description": "The type of the barcode e.g  UPC, EAB, QRCode, Code39, Code128, DataMatrix, PDF417, ITF14, Codabar, MaxiCode"
                                      },
                                      "BarcodeSource": {
                                        "type": "string",
                                        "description": "The source of the barcode instance"
                                      },
                                      "Lineage": {
                                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                        "type": "object",
                                        "unevaluatedProperties": false,
                                        "properties": {
                                          "EntityId": {
                                            "type": "string",
                                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                          },
                                          "EventId": {
                                            "type": "string",
                                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                          },
                                          "AsOf": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                          }
                                        },
                                        "required": [
                                          "EventId,AsOf"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "ItemOptionNumber": {
                                  "type": "string",
                                  "description": "The item option number of the product e.g 1111111"
                                }
                              },
                              "required": [
                                "ProductVariantNumber",
                                "ProductVariantId"
                              ]
                            },
                            "ProductName": {
                              "type": "string",
                              "description": "The product name, as captured at point of the sale, of the product  on this line (at the point of sale and as captured/defined at that time)"
                            },
                            "ProductDesc": {
                              "type": "string",
                              "description": "The product description, as captured at point of the sale, of the product on this line (at the point of sale and as captured/defined at that time)"
                            },
                            "ProductCategoryCode": {
                              "type": "string",
                              "description": "The product category code, as captured at point of the sale, of the product on this line (at the point of sale and as captured/defined at that time)"
                            },
                            "ProductCategoryDesc": {
                              "type": "string",
                              "description": "The product category description, as captured at point of the sale, of the product on this line (at the point of sale and as captured/defined at that time)"
                            },
                            "ProductTypeCode": {
                              "type": "string",
                              "description": "The product type code, as captured at point of the sale, of the product on this line e.g "
                            },
                            "ProductTypeDesc": {
                              "type": "string",
                              "description": "The product type description, as captured at point of the sale, of the product on this line e.g "
                            },
                            "ProductSubTypeCode": {
                              "type": "string",
                              "description": "The product sub type code, as captured at point of the sale, of the product on this line e.g "
                            },
                            "ProductSubTypeDesc": {
                              "type": "string",
                              "description": "The product sub type description, as captured at point of the sale, of the product on this line e.g "
                            },
                            "ProductGroupCode": {
                              "type": "string",
                              "description": "The product group code, as captured at point of the sale, of the product on this line e.g "
                            },
                            "ProductGroupDesc": {
                              "type": "string",
                              "description": "The product group description, as captured at point of the sale, of the product on this line e.g "
                            },
                            "ProductSubGroupCode": {
                              "type": "string",
                              "description": "The product sub group code, as captured at point of the sale, of the product on this line e.g "
                            },
                            "ProductSubGroupDesc": {
                              "type": "string",
                              "description": "The product sub group description, as captured at point of the sale, of the product on this line e.g "
                            },
                            "HierarchyNode": {
                              "type": "object",
                              "description": "A generic hierarchy node, a 'level' in a generic hierarchy that can be used for things like a store or product category hierarchy",
                              "unevaluatedProperties": false,
                              "properties": {
                                "NodeId": {
                                  "type": "string",
                                  "description": "The HierarchyId Id, in Xfuze canonical form, identifying this hierarchy node amongst other nodes, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Hierarchy::Category_Retail247_123456789"
                                },
                                "NodeKey": {
                                  "type": "string",
                                  "description": "The 'natural' hierarchy number"
                                },
                                "NodeCode": {
                                  "type": "string",
                                  "description": "The code of this hierarchy node/level"
                                },
                                "ParentNodeId": {
                                  "type": "string",
                                  "description": "The parent (direct parent) HierarchyId Id, in Xfuze canonical form, identifying this hierarchy node amongst other nodes, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Hierarchy::Category_Retail247_123456789"
                                },
                                "ParentNodeKey": {
                                  "type": "string",
                                  "description": "The 'natural' parent (direct parent) number"
                                },
                                "ParentNodeCode": {
                                  "type": "string",
                                  "description": "The code of this parent (direct parent) hierarchy node/level"
                                },
                                "NodeStatusCode": {
                                  "type": "string",
                                  "description": "The status code of this hierarchy node/level"
                                },
                                "NodeName": {
                                  "type": "string",
                                  "description": "The name of this hierarchy node/level"
                                },
                                "NodeClass": {
                                  "type": "string",
                                  "description": "The class of this hierarchy type depending on nature/usage of the hierarchy / node e.g Store, Product "
                                },
                                "NodeType": {
                                  "type": "string",
                                  "description": "The type of this hierarchy node/level itself depending on nature/usage of the hierarchy / node e.g Company level in a store heirarchy "
                                },
                                "NodeDesc": {
                                  "type": "string",
                                  "description": "The description of this hierarchy node/level"
                                },
                                "NodeLevel": {
                                  "type": "number",
                                  "description": "The number of the level of this level e.g 1..5"
                                },
                                "L1": {
                                  "type": "string",
                                  "description": "The hierarchy value for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                },
                                "L1Name": {
                                  "type": "string",
                                  "description": "The hierarchy name for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                },
                                "L1Type": {
                                  "type": "string",
                                  "description": "The hierarchy type for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                },
                                "L2": {
                                  "type": "string",
                                  "description": "The hierarchy value for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                },
                                "L2Name": {
                                  "type": "string",
                                  "description": "The hierarchy name for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                },
                                "L2Type": {
                                  "type": "string",
                                  "description": "The hierarchy type for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                },
                                "L3": {
                                  "type": "string",
                                  "description": "The hierarchy value for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                },
                                "L3Name": {
                                  "type": "string",
                                  "description": "The hierarchy name for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                },
                                "L3Type": {
                                  "type": "string",
                                  "description": "The hierarchy type for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                },
                                "L4": {
                                  "type": "string",
                                  "description": "The hierarchy value for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                },
                                "L4Name": {
                                  "type": "string",
                                  "description": "The hierarchy name for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                },
                                "L4Type": {
                                  "type": "string",
                                  "description": "The hierarchy type for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                },
                                "L5": {
                                  "type": "string",
                                  "description": "The hierarchy value for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                },
                                "L5Name": {
                                  "type": "string",
                                  "description": "The hierarchy name for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                },
                                "L5Type": {
                                  "type": "string",
                                  "description": "The hierarchy type for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                },
                                "IsOverride": {
                                  "type": "string",
                                  "description": "Can this be overriden? e.g Y",
                                  "enum": [
                                    "Y",
                                    "N",
                                    "U"
                                  ]
                                },
                                "IsChecked": {
                                  "type": "string",
                                  "description": "Has this been checked? e.g Y",
                                  "enum": [
                                    "Y",
                                    "N",
                                    "U"
                                  ]
                                },
                                "Lang": {
                                  "type": "string",
                                  "description": "The language used for localisation of this hierarchy node/level"
                                },
                                "Locale": {
                                  "type": "string",
                                  "description": "The locale used for localisation of this hierarchy node/level"
                                },
                                "Keywords": {
                                  "type": "string",
                                  "description": "The keywords associated with the hierarchy node/level"
                                },
                                "Country": {
                                  "description": "The description of this hierarchy node/level",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "object",
                                    "description": "A country object, based on official ISO 3166",
                                    "anyOf": [
                                      {
                                        "required": [
                                          "ISO2"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "ISO3"
                                        ]
                                      }
                                    ],
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "ISO2": {
                                        "type": "string",
                                        "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                      },
                                      "ISO3": {
                                        "type": "string",
                                        "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                      },
                                      "CountryCode": {
                                        "type": "string",
                                        "description": "The canonical CountryCode (country-code) country code e.g 036"
                                      },
                                      "Name": {
                                        "type": "string",
                                        "description": "The canonical (official) 'Name' of the country e.g Australia"
                                      },
                                      "AltName": {
                                        "type": "string",
                                        "description": "An alternate name for the country"
                                      },
                                      "RegionCode": {
                                        "type": "string",
                                        "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                      },
                                      "RegionName": {
                                        "type": "string",
                                        "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                      },
                                      "SubRegionCode": {
                                        "type": "string",
                                        "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                      },
                                      "SubRegionName": {
                                        "type": "string",
                                        "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                      },
                                      "IntermediateRegionCode": {
                                        "type": "string",
                                        "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                      },
                                      "IntermediateRegionName": {
                                        "type": "string",
                                        "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                      },
                                      "Coordinates": {
                                        "description": "The canonical Coordinates of the country (canonical from google)",
                                        "type": "object",
                                        "unevaluatedProperties": false,
                                        "properties": {
                                          "Latitude": {
                                            "type": "number",
                                            "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                            "minimum": -90,
                                            "maximum": 90
                                          },
                                          "Longitude": {
                                            "type": "number",
                                            "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                            "minimum": -180,
                                            "maximum": 180
                                          },
                                          "Lineage": {
                                            "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                            "type": "object",
                                            "unevaluatedProperties": false,
                                            "properties": {
                                              "EntityId": {
                                                "type": "string",
                                                "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                              },
                                              "EventId": {
                                                "type": "string",
                                                "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                              },
                                              "AsOf": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                              }
                                            },
                                            "required": [
                                              "EventId,AsOf"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "Latitude",
                                          "Longitude"
                                        ]
                                      },
                                      "PrimaryLanguage": {
                                        "type": "string",
                                        "description": "The canonical Primary Language of the country"
                                      },
                                      "Currency": {
                                        "description": "The canonical Currency Code of the country (canonical from google)",
                                        "type": "object",
                                        "anyOf": [
                                          {
                                            "required": [
                                              "ISO2"
                                            ]
                                          },
                                          {
                                            "required": [
                                              "ISO3"
                                            ]
                                          }
                                        ],
                                        "unevaluatedProperties": false,
                                        "properties": {
                                          "ISO2": {
                                            "type": "string",
                                            "description": "The canonical ISO2 currency code"
                                          },
                                          "ISO3": {
                                            "type": "string",
                                            "description": "The canonical ISO3 currency code"
                                          },
                                          "Number": {
                                            "type": "string",
                                            "description": "The canonical currency number"
                                          },
                                          "DecimalPlaces": {
                                            "type": "string",
                                            "description": "The canonical number of decimal places for the currency"
                                          },
                                          "CountryCodes": {
                                            "type": "array",
                                            "description": "The canonical array of ISO3 country codes officially using this currency",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "Symbol": {
                                            "type": "string",
                                            "description": "The canonical symbol for the currency"
                                          },
                                          "Lineage": {
                                            "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                            "type": "object",
                                            "unevaluatedProperties": false,
                                            "properties": {
                                              "EntityId": {
                                                "type": "string",
                                                "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                              },
                                              "EventId": {
                                                "type": "string",
                                                "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                              },
                                              "AsOf": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                              }
                                            },
                                            "required": [
                                              "EventId,AsOf"
                                            ]
                                          }
                                        }
                                      },
                                      "IsEuropeanCountry": {
                                        "type": "string",
                                        "description": "Is this country an european one? e.g Y",
                                        "enum": [
                                          "Y",
                                          "N",
                                          "U"
                                        ]
                                      },
                                      "Lineage": {
                                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                        "type": "object",
                                        "unevaluatedProperties": false,
                                        "properties": {
                                          "EntityId": {
                                            "type": "string",
                                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                          },
                                          "EventId": {
                                            "type": "string",
                                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                          },
                                          "AsOf": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                          }
                                        },
                                        "required": [
                                          "EventId,AsOf"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "Hierarchy": {
                              "description": "The product hierarchy 'breadcrumb' array details, as captured at point of the sale, with all levels included in array form",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "HierarchyId": {
                                  "type": "string",
                                  "description": "The Hierarchy Id, in Xfuze canonical form, identifying this hierarchy collection amongst other collections, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Location_Crew_1234567"
                                },
                                "HierarchyKey": {
                                  "type": "string",
                                  "description": "The 'natural' hierarchy collection key/number if identifiable"
                                },
                                "NumNodes": {
                                  "type": "number",
                                  "description": "The number of nodes in the collection"
                                },
                                "Nodes": {
                                  "type": "array",
                                  "description": "The collection of hierarchy nodes making up the hierarchy",
                                  "items": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "A generic hierarchy node, a 'level' in a generic hierarchy that can be used for things like a store or product category hierarchy",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "NodeId": {
                                          "type": "string",
                                          "description": "The HierarchyId Id, in Xfuze canonical form, identifying this hierarchy node amongst other nodes, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Hierarchy::Category_Retail247_123456789"
                                        },
                                        "NodeKey": {
                                          "type": "string",
                                          "description": "The 'natural' hierarchy number"
                                        },
                                        "NodeCode": {
                                          "type": "string",
                                          "description": "The code of this hierarchy node/level"
                                        },
                                        "ParentNodeId": {
                                          "type": "string",
                                          "description": "The parent (direct parent) HierarchyId Id, in Xfuze canonical form, identifying this hierarchy node amongst other nodes, in the form of Hierarchy::[type]_[sourceSystem]_[HierarchyKey] e.g Hierarchy::Category_Retail247_123456789"
                                        },
                                        "ParentNodeKey": {
                                          "type": "string",
                                          "description": "The 'natural' parent (direct parent) number"
                                        },
                                        "ParentNodeCode": {
                                          "type": "string",
                                          "description": "The code of this parent (direct parent) hierarchy node/level"
                                        },
                                        "NodeStatusCode": {
                                          "type": "string",
                                          "description": "The status code of this hierarchy node/level"
                                        },
                                        "NodeName": {
                                          "type": "string",
                                          "description": "The name of this hierarchy node/level"
                                        },
                                        "NodeClass": {
                                          "type": "string",
                                          "description": "The class of this hierarchy type depending on nature/usage of the hierarchy / node e.g Store, Product "
                                        },
                                        "NodeType": {
                                          "type": "string",
                                          "description": "The type of this hierarchy node/level itself depending on nature/usage of the hierarchy / node e.g Company level in a store heirarchy "
                                        },
                                        "NodeDesc": {
                                          "type": "string",
                                          "description": "The description of this hierarchy node/level"
                                        },
                                        "NodeLevel": {
                                          "type": "number",
                                          "description": "The number of the level of this level e.g 1..5"
                                        },
                                        "L1": {
                                          "type": "string",
                                          "description": "The hierarchy value for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                        },
                                        "L1Name": {
                                          "type": "string",
                                          "description": "The hierarchy name for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                        },
                                        "L1Type": {
                                          "type": "string",
                                          "description": "The hierarchy type for the top level (1) in flat/expanded form of this level and up, rather then array form"
                                        },
                                        "L2": {
                                          "type": "string",
                                          "description": "The hierarchy value for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                        },
                                        "L2Name": {
                                          "type": "string",
                                          "description": "The hierarchy name for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                        },
                                        "L2Type": {
                                          "type": "string",
                                          "description": "The hierarchy type for the 2nd level (2) in flat/expanded form of this level and up, rather then array form"
                                        },
                                        "L3": {
                                          "type": "string",
                                          "description": "The hierarchy value for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                        },
                                        "L3Name": {
                                          "type": "string",
                                          "description": "The hierarchy name for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                        },
                                        "L3Type": {
                                          "type": "string",
                                          "description": "The hierarchy type for the 3rd level (3) in flat/expanded form of this level and up, rather then array form"
                                        },
                                        "L4": {
                                          "type": "string",
                                          "description": "The hierarchy value for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                        },
                                        "L4Name": {
                                          "type": "string",
                                          "description": "The hierarchy name for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                        },
                                        "L4Type": {
                                          "type": "string",
                                          "description": "The hierarchy type for the 4th level (4) in flat/expanded form of this level and up, rather then array form"
                                        },
                                        "L5": {
                                          "type": "string",
                                          "description": "The hierarchy value for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                        },
                                        "L5Name": {
                                          "type": "string",
                                          "description": "The hierarchy name for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                        },
                                        "L5Type": {
                                          "type": "string",
                                          "description": "The hierarchy type for the 5th level (5) in flat/expanded form of this level and up, rather then array form"
                                        },
                                        "IsOverride": {
                                          "type": "string",
                                          "description": "Can this be overriden? e.g Y",
                                          "enum": [
                                            "Y",
                                            "N",
                                            "U"
                                          ]
                                        },
                                        "IsChecked": {
                                          "type": "string",
                                          "description": "Has this been checked? e.g Y",
                                          "enum": [
                                            "Y",
                                            "N",
                                            "U"
                                          ]
                                        },
                                        "Lang": {
                                          "type": "string",
                                          "description": "The language used for localisation of this hierarchy node/level"
                                        },
                                        "Locale": {
                                          "type": "string",
                                          "description": "The locale used for localisation of this hierarchy node/level"
                                        },
                                        "Keywords": {
                                          "type": "string",
                                          "description": "The keywords associated with the hierarchy node/level"
                                        },
                                        "Country": {
                                          "description": "The description of this hierarchy node/level",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "object",
                                            "description": "A country object, based on official ISO 3166",
                                            "anyOf": [
                                              {
                                                "required": [
                                                  "ISO2"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "ISO3"
                                                ]
                                              }
                                            ],
                                            "unevaluatedProperties": false,
                                            "properties": {
                                              "ISO2": {
                                                "type": "string",
                                                "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                              },
                                              "ISO3": {
                                                "type": "string",
                                                "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                              },
                                              "CountryCode": {
                                                "type": "string",
                                                "description": "The canonical CountryCode (country-code) country code e.g 036"
                                              },
                                              "Name": {
                                                "type": "string",
                                                "description": "The canonical (official) 'Name' of the country e.g Australia"
                                              },
                                              "AltName": {
                                                "type": "string",
                                                "description": "An alternate name for the country"
                                              },
                                              "RegionCode": {
                                                "type": "string",
                                                "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                              },
                                              "RegionName": {
                                                "type": "string",
                                                "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                              },
                                              "SubRegionCode": {
                                                "type": "string",
                                                "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                              },
                                              "SubRegionName": {
                                                "type": "string",
                                                "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                              },
                                              "IntermediateRegionCode": {
                                                "type": "string",
                                                "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                              },
                                              "IntermediateRegionName": {
                                                "type": "string",
                                                "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                              },
                                              "Coordinates": {
                                                "description": "The canonical Coordinates of the country (canonical from google)",
                                                "type": "object",
                                                "unevaluatedProperties": false,
                                                "properties": {
                                                  "Latitude": {
                                                    "type": "number",
                                                    "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                                    "minimum": -90,
                                                    "maximum": 90
                                                  },
                                                  "Longitude": {
                                                    "type": "number",
                                                    "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                                    "minimum": -180,
                                                    "maximum": 180
                                                  },
                                                  "Lineage": {
                                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                    "type": "object",
                                                    "unevaluatedProperties": false,
                                                    "properties": {
                                                      "EntityId": {
                                                        "type": "string",
                                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                      },
                                                      "EventId": {
                                                        "type": "string",
                                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                      },
                                                      "AsOf": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                      }
                                                    },
                                                    "required": [
                                                      "EventId,AsOf"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "Latitude",
                                                  "Longitude"
                                                ]
                                              },
                                              "PrimaryLanguage": {
                                                "type": "string",
                                                "description": "The canonical Primary Language of the country"
                                              },
                                              "Currency": {
                                                "description": "The canonical Currency Code of the country (canonical from google)",
                                                "type": "object",
                                                "anyOf": [
                                                  {
                                                    "required": [
                                                      "ISO2"
                                                    ]
                                                  },
                                                  {
                                                    "required": [
                                                      "ISO3"
                                                    ]
                                                  }
                                                ],
                                                "unevaluatedProperties": false,
                                                "properties": {
                                                  "ISO2": {
                                                    "type": "string",
                                                    "description": "The canonical ISO2 currency code"
                                                  },
                                                  "ISO3": {
                                                    "type": "string",
                                                    "description": "The canonical ISO3 currency code"
                                                  },
                                                  "Number": {
                                                    "type": "string",
                                                    "description": "The canonical currency number"
                                                  },
                                                  "DecimalPlaces": {
                                                    "type": "string",
                                                    "description": "The canonical number of decimal places for the currency"
                                                  },
                                                  "CountryCodes": {
                                                    "type": "array",
                                                    "description": "The canonical array of ISO3 country codes officially using this currency",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "Symbol": {
                                                    "type": "string",
                                                    "description": "The canonical symbol for the currency"
                                                  },
                                                  "Lineage": {
                                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                    "type": "object",
                                                    "unevaluatedProperties": false,
                                                    "properties": {
                                                      "EntityId": {
                                                        "type": "string",
                                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                      },
                                                      "EventId": {
                                                        "type": "string",
                                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                      },
                                                      "AsOf": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                      }
                                                    },
                                                    "required": [
                                                      "EventId,AsOf"
                                                    ]
                                                  }
                                                }
                                              },
                                              "IsEuropeanCountry": {
                                                "type": "string",
                                                "description": "Is this country an european one? e.g Y",
                                                "enum": [
                                                  "Y",
                                                  "N",
                                                  "U"
                                                ]
                                              },
                                              "Lineage": {
                                                "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                "type": "object",
                                                "unevaluatedProperties": false,
                                                "properties": {
                                                  "EntityId": {
                                                    "type": "string",
                                                    "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                  },
                                                  "EventId": {
                                                    "type": "string",
                                                    "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                  },
                                                  "AsOf": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                  }
                                                },
                                                "required": [
                                                  "EventId,AsOf"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "required": [
                                "Nodes",
                                "NumNodes"
                              ]
                            },
                            "StyleCode": {
                              "type": "string",
                              "description": "The style code of the product on this line"
                            },
                            "StyleDesc": {
                              "type": "string",
                              "description": "The style description of the product on this line"
                            },
                            "SeasonCode": {
                              "type": "string",
                              "description": "The season code of the product on this line"
                            },
                            "SeasonDesc": {
                              "type": "string",
                              "description": "The season description of the product on this line"
                            },
                            "ItemOptionCode": {
                              "type": "string",
                              "description": "The item option code of the product on this line"
                            },
                            "ItemOptionDesc": {
                              "type": "string",
                              "description": "The item option desc of the product on this line"
                            },
                            "SizeCode": {
                              "type": "string",
                              "description": "The size code, if relevant, of the product on this line"
                            },
                            "SizeDesc": {
                              "type": "string",
                              "description": "The size description, if relevant, of the product on this line"
                            },
                            "SizeMatrixCode": {
                              "type": "string",
                              "description": "The size matrix code, if relevant, of the product on this line"
                            },
                            "SizeMatrixDesc": {
                              "type": "string",
                              "description": "The size matrix description, if relevant, of the product on this line"
                            },
                            "ColourCode": {
                              "type": "string",
                              "description": "The colour code, if relevant, of the product on this line"
                            },
                            "ColourDesc": {
                              "type": "string",
                              "description": "The colour description, if relevant, of the product on this line"
                            },
                            "BrandCode": {
                              "type": "string",
                              "description": "The brand code of the product on this line"
                            },
                            "BrandName": {
                              "type": "string",
                              "description": "The brand description of the product on this line"
                            },
                            "SupplierId": {
                              "type": "string",
                              "description": "The supplierId of the product on this line"
                            },
                            "SupplierCode": {
                              "type": "string",
                              "description": "The supplier code of the product on this line"
                            },
                            "CountryOfOrigin": {
                              "type": "string",
                              "description": "The country of origin of the product on this line"
                            },
                            "ImageURLs": {
                              "type": "array",
                              "description": "An array of urls representing image links",
                              "items": {
                                "type": "string"
                              }
                            },
                            "AttributeCodes": {
                              "type": "array",
                              "description": "An array of 'other atts' in string form",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "Qtys": {
                          "type": "object",
                          "description": "The collection of (possible) quantities, related to various unit level measures, across the lifecycle, of this line.  Actual usage and ability to populate depends on the richness of the sources, so sparsely populated.  Some can be derived, while others are typically provided",
                          "unevaluatedProperties": false,
                          "properties": {
                            "QtyNet": {
                              "description": "The 'net' (current) qty, for the line, of product sold, net AFTER any subsequent retractions and adjustments post sale (e.g cancels, returns etc), at a point in time (e.g event time, latest entity time), ultimately the sellable billable qty in the end.  Can be explicit from source and also derived (e.g multiple lines qith qty 1 agg up to > 1)",
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "QtySold": {
                              "description": "The 'gross' (as sold / original) qty, for the line, of product sold, gross BEFORE any subsequent retractions and adjustments (e.g cancels, returns etc), at a point in time of the sale (immutable thereafter), ultimately the 'as sold'  billable qty.  Always explicit from source but needs to be mapped from the 'first' event or derived equiv",
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "QtyPaid": {
                              "description": "The aggregate quantity paid, for the line, at the time at a point in time (e.g event time, latest entity time)",
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "QtyCancelled": {
                              "description": "The aggregate quantity cancelled, for the line, at the time at a point in time (e.g event time, latest entity time).  This is a '-' number to support a ledger styled approach to accounting.",
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "QtyVoided": {
                              "description": "The aggregate quantity voided, for the line, at the time at a point in time (e.g event time, latest entity time).   This is a '-' number to support a ledger styled approach to accounting.",
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "QtyReturned": {
                              "description": "The aggregate quantity returned (but not exchanged), for the line, at the time at a point in time (e.g event time, latest entity time).  This is a '-' number to support a ledger styled approach to accounting.",
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "QtyExchanged": {
                              "description": "The aggregate quantity exchanged (but not returned), for the line, at the time at a point in time (e.g event time, latest entity time)",
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "QtyRefunded": {
                              "description": "The aggregate quantity refunded (i.e refund payment - note: some returns/cancellation may or may not get refunded so can be different to them), for the line, at the time at a point in time (e.g event time, latest entity time)",
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "QtyRefundedPromotional": {
                              "description": "The aggregate quantity refunded when part of promotion, for the line, at the time at a point in time (e.g event time, latest entity time)",
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "QtyShipped": {
                              "description": "The aggregate quantity shipped, for the line, at the time at a point in time (e.g event time, latest entity time)",
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "QtyFulfilled": {
                              "description": "The aggregate quantity fulfilled, for the line, at the time at a point in time (e.g event time, latest entity time) - context dependant to the fulfilment options (e.g delivered to customer, picked-up) - ultimately with end recipient",
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "QtyCompleted": {
                              "description": "The aggregate quantity 'completed' (context dependant), for the line, at the time at a point in time (e.g event time, latest entity time)",
                              "type": "object",
                              "required": [
                                "Amount"
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "Code": {
                                  "type": "string",
                                  "description": "The code of the quantity e.g QtySold, QtyReturned"
                                },
                                "Desc": {
                                  "type": "string",
                                  "description": "The description of the quantity"
                                },
                                "Amount": {
                                  "type": [
                                    "number",
                                    "null"
                                  ],
                                  "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                },
                                "UnitMeasure": {
                                  "type": "string",
                                  "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                },
                                "UnitType": {
                                  "type": "string",
                                  "description": "The quantity unit type. e.g Metric, Imperial"
                                },
                                "UnitScheme": {
                                  "type": "string",
                                  "description": "The quantity unit scheme e.g ISO xx"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "Currency": {
                          "type": "object",
                          "description": "The collection of currencies involved in this order",
                          "unevaluatedProperties": false,
                          "properties": {
                            "LCY": {
                              "description": "The local currency native to the order / transaction",
                              "type": "object",
                              "anyOf": [
                                {
                                  "required": [
                                    "ISO2"
                                  ]
                                },
                                {
                                  "required": [
                                    "ISO3"
                                  ]
                                }
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "ISO2": {
                                  "type": "string",
                                  "description": "The canonical ISO2 currency code"
                                },
                                "ISO3": {
                                  "type": "string",
                                  "description": "The canonical ISO3 currency code"
                                },
                                "Number": {
                                  "type": "string",
                                  "description": "The canonical currency number"
                                },
                                "DecimalPlaces": {
                                  "type": "string",
                                  "description": "The canonical number of decimal places for the currency"
                                },
                                "CountryCodes": {
                                  "type": "array",
                                  "description": "The canonical array of ISO3 country codes officially using this currency",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "Symbol": {
                                  "type": "string",
                                  "description": "The canonical symbol for the currency"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            },
                            "BCY": {
                              "description": "The home / base currency to the client company, aligned to the 'normalised' currency e.g for reporting",
                              "type": "object",
                              "anyOf": [
                                {
                                  "required": [
                                    "ISO2"
                                  ]
                                },
                                {
                                  "required": [
                                    "ISO3"
                                  ]
                                }
                              ],
                              "unevaluatedProperties": false,
                              "properties": {
                                "ISO2": {
                                  "type": "string",
                                  "description": "The canonical ISO2 currency code"
                                },
                                "ISO3": {
                                  "type": "string",
                                  "description": "The canonical ISO3 currency code"
                                },
                                "Number": {
                                  "type": "string",
                                  "description": "The canonical currency number"
                                },
                                "DecimalPlaces": {
                                  "type": "string",
                                  "description": "The canonical number of decimal places for the currency"
                                },
                                "CountryCodes": {
                                  "type": "array",
                                  "description": "The canonical array of ISO3 country codes officially using this currency",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "Symbol": {
                                  "type": "string",
                                  "description": "The canonical symbol for the currency"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "ExchangeRates": {
                          "type": "object",
                          "description": "The collection of (possible) exchange rates, across the lifecycle, of this line.  Actual usage and ability to populate depends on the richness of the sources.  Typically sits at the order level, but can also exist at line level",
                          "unevaluatedProperties": false,
                          "properties": {
                            "SaleRate": {
                              "description": "The exchange rate used on this line at the time of sale",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "ExchangeRateId": {
                                  "type": "string",
                                  "description": "The Xfuze Exchange Rate Entity Id format ExchangeRate_[sourceSystem]_[FromISO3]::[ToISO3] e.g ExchangeRate_Crew_GCP::EUR"
                                },
                                "ExchangeRateHistoryId": {
                                  "type": "string",
                                  "description": "The Xfuze Exchange Rate History ID of the exchange rate over time - usually ExchangeRateId_[FromDate/FromTimestamp] e.g ExchangeRate_Crew_GCP::EUR_20230101"
                                },
                                "ExchangeRateType": {
                                  "type": "string",
                                  "description": "The type of the exchange rate ",
                                  "enum": [
                                    "Fixed",
                                    "Managed",
                                    "ManagedFloat",
                                    "Floating",
                                    "CrawlingPeg",
                                    "CrossRates",
                                    "Floating",
                                    "ExchangeRate",
                                    "CurrencyBoard",
                                    "Custom",
                                    "Other"
                                  ]
                                },
                                "EffectivePeriod": {
                                  "description": "The period for which the FX rate is effective",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "StartDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The start date of the period"
                                    },
                                    "StartTimestamp": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The start timestamp of the period (intra day readings)"
                                    },
                                    "EndDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The end date of the period"
                                    },
                                    "EndTimestamp": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The end timestamp of the period (intra day readings)"
                                    },
                                    "PeriodDuration": {
                                      "type": "string",
                                      "description": "The duration of the full set of periods where this period instance is contained",
                                      "enum": [
                                        "Second",
                                        "Minute",
                                        "Hour",
                                        "Day",
                                        "Week",
                                        "Month",
                                        "Quarter",
                                        "Year",
                                        "Adhoc",
                                        "Other"
                                      ]
                                    }
                                  },
                                  "Lineage": {
                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "EntityId": {
                                        "type": "string",
                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                      },
                                      "EventId": {
                                        "type": "string",
                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                      },
                                      "AsOf": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                      }
                                    },
                                    "required": [
                                      "EventId,AsOf"
                                    ]
                                  }
                                },
                                "FromCurrency": {
                                  "description": "The 'from' currency object in this FX rate",
                                  "type": "object",
                                  "anyOf": [
                                    {
                                      "required": [
                                        "ISO2"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "ISO3"
                                      ]
                                    }
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "ISO2": {
                                      "type": "string",
                                      "description": "The canonical ISO2 currency code"
                                    },
                                    "ISO3": {
                                      "type": "string",
                                      "description": "The canonical ISO3 currency code"
                                    },
                                    "Number": {
                                      "type": "string",
                                      "description": "The canonical currency number"
                                    },
                                    "DecimalPlaces": {
                                      "type": "string",
                                      "description": "The canonical number of decimal places for the currency"
                                    },
                                    "CountryCodes": {
                                      "type": "array",
                                      "description": "The canonical array of ISO3 country codes officially using this currency",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "Symbol": {
                                      "type": "string",
                                      "description": "The canonical symbol for the currency"
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "ToCurrency": {
                                  "description": "The 'to' currency object in this FX rate",
                                  "type": "object",
                                  "anyOf": [
                                    {
                                      "required": [
                                        "ISO2"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "ISO3"
                                      ]
                                    }
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "ISO2": {
                                      "type": "string",
                                      "description": "The canonical ISO2 currency code"
                                    },
                                    "ISO3": {
                                      "type": "string",
                                      "description": "The canonical ISO3 currency code"
                                    },
                                    "Number": {
                                      "type": "string",
                                      "description": "The canonical currency number"
                                    },
                                    "DecimalPlaces": {
                                      "type": "string",
                                      "description": "The canonical number of decimal places for the currency"
                                    },
                                    "CountryCodes": {
                                      "type": "array",
                                      "description": "The canonical array of ISO3 country codes officially using this currency",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "Symbol": {
                                      "type": "string",
                                      "description": "The canonical symbol for the currency"
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "Rate": {
                                  "type": "number",
                                  "description": "The (explicit) rate of the period specified"
                                },
                                "RateInverse": {
                                  "type": "number",
                                  "description": "The (explicit) inverse of the average rate of the period i.e (1/AverageRate)"
                                },
                                "RateCalcType": {
                                  "type": "string",
                                  "description": "The calc type of the FX value / reading e.g Exact, Estimated",
                                  "enum": [
                                    "Average",
                                    "Exact",
                                    "Other"
                                  ]
                                },
                                "EstimatedRate": {
                                  "type": "number",
                                  "description": "The (estimated - i.e not explicit, rather derived) rate of the period specified"
                                },
                                "EstimatedRateInverse": {
                                  "type": "number",
                                  "description": "The inverse of the average rate of the period i.e (1/AverageRate)"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of the containing object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              },
                              "required": [
                                "ExchangeRateId",
                                "ExchangeRateHistoryId",
                                "FromCurrency",
                                "ToCurrency",
                                "AverageRate"
                              ]
                            },
                            "RefundRate": {
                              "description": "The exchange rate used on this line at the time of refund",
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "ExchangeRateId": {
                                  "type": "string",
                                  "description": "The Xfuze Exchange Rate Entity Id format ExchangeRate_[sourceSystem]_[FromISO3]::[ToISO3] e.g ExchangeRate_Crew_GCP::EUR"
                                },
                                "ExchangeRateHistoryId": {
                                  "type": "string",
                                  "description": "The Xfuze Exchange Rate History ID of the exchange rate over time - usually ExchangeRateId_[FromDate/FromTimestamp] e.g ExchangeRate_Crew_GCP::EUR_20230101"
                                },
                                "ExchangeRateType": {
                                  "type": "string",
                                  "description": "The type of the exchange rate ",
                                  "enum": [
                                    "Fixed",
                                    "Managed",
                                    "ManagedFloat",
                                    "Floating",
                                    "CrawlingPeg",
                                    "CrossRates",
                                    "Floating",
                                    "ExchangeRate",
                                    "CurrencyBoard",
                                    "Custom",
                                    "Other"
                                  ]
                                },
                                "EffectivePeriod": {
                                  "description": "The period for which the FX rate is effective",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "StartDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The start date of the period"
                                    },
                                    "StartTimestamp": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The start timestamp of the period (intra day readings)"
                                    },
                                    "EndDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The end date of the period"
                                    },
                                    "EndTimestamp": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The end timestamp of the period (intra day readings)"
                                    },
                                    "PeriodDuration": {
                                      "type": "string",
                                      "description": "The duration of the full set of periods where this period instance is contained",
                                      "enum": [
                                        "Second",
                                        "Minute",
                                        "Hour",
                                        "Day",
                                        "Week",
                                        "Month",
                                        "Quarter",
                                        "Year",
                                        "Adhoc",
                                        "Other"
                                      ]
                                    }
                                  },
                                  "Lineage": {
                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "EntityId": {
                                        "type": "string",
                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                      },
                                      "EventId": {
                                        "type": "string",
                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                      },
                                      "AsOf": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                      }
                                    },
                                    "required": [
                                      "EventId,AsOf"
                                    ]
                                  }
                                },
                                "FromCurrency": {
                                  "description": "The 'from' currency object in this FX rate",
                                  "type": "object",
                                  "anyOf": [
                                    {
                                      "required": [
                                        "ISO2"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "ISO3"
                                      ]
                                    }
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "ISO2": {
                                      "type": "string",
                                      "description": "The canonical ISO2 currency code"
                                    },
                                    "ISO3": {
                                      "type": "string",
                                      "description": "The canonical ISO3 currency code"
                                    },
                                    "Number": {
                                      "type": "string",
                                      "description": "The canonical currency number"
                                    },
                                    "DecimalPlaces": {
                                      "type": "string",
                                      "description": "The canonical number of decimal places for the currency"
                                    },
                                    "CountryCodes": {
                                      "type": "array",
                                      "description": "The canonical array of ISO3 country codes officially using this currency",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "Symbol": {
                                      "type": "string",
                                      "description": "The canonical symbol for the currency"
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "ToCurrency": {
                                  "description": "The 'to' currency object in this FX rate",
                                  "type": "object",
                                  "anyOf": [
                                    {
                                      "required": [
                                        "ISO2"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "ISO3"
                                      ]
                                    }
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "ISO2": {
                                      "type": "string",
                                      "description": "The canonical ISO2 currency code"
                                    },
                                    "ISO3": {
                                      "type": "string",
                                      "description": "The canonical ISO3 currency code"
                                    },
                                    "Number": {
                                      "type": "string",
                                      "description": "The canonical currency number"
                                    },
                                    "DecimalPlaces": {
                                      "type": "string",
                                      "description": "The canonical number of decimal places for the currency"
                                    },
                                    "CountryCodes": {
                                      "type": "array",
                                      "description": "The canonical array of ISO3 country codes officially using this currency",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "Symbol": {
                                      "type": "string",
                                      "description": "The canonical symbol for the currency"
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "Rate": {
                                  "type": "number",
                                  "description": "The (explicit) rate of the period specified"
                                },
                                "RateInverse": {
                                  "type": "number",
                                  "description": "The (explicit) inverse of the average rate of the period i.e (1/AverageRate)"
                                },
                                "RateCalcType": {
                                  "type": "string",
                                  "description": "The calc type of the FX value / reading e.g Exact, Estimated",
                                  "enum": [
                                    "Average",
                                    "Exact",
                                    "Other"
                                  ]
                                },
                                "EstimatedRate": {
                                  "type": "number",
                                  "description": "The (estimated - i.e not explicit, rather derived) rate of the period specified"
                                },
                                "EstimatedRateInverse": {
                                  "type": "number",
                                  "description": "The inverse of the average rate of the period i.e (1/AverageRate)"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of the containing object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              },
                              "required": [
                                "ExchangeRateId",
                                "ExchangeRateHistoryId",
                                "FromCurrency",
                                "ToCurrency",
                                "AverageRate"
                              ]
                            }
                          }
                        },
                        "Prices": {
                          "type": "object",
                          "description": "The collection of possible UNIT prices, both selling and cost related, related to the sale of this line.  Actual usage and ability to populate depends on the richness of the sources.  Some can be derived, while others are typically provided",
                          "unevaluatedProperties": false,
                          "properties": {
                            "SellingPrices": {
                              "type": "object",
                              "description": "The (required) collection of possible SELLING UNIT prices, related to the sale of the product this line.  Actual usage and ability to populate depends on the richness of the sources, only SoldPrice is mandatory.  Some can be derived, while others are typically provided",
                              "unevaluatedProperties": true,
                              "properties": {
                                "SoldUnitPrice": {
                                  "description": "The (required) final 'as sold' unit price of the sale of this lines product, often provided, but sometimes needs to be derived from GrandTotal / QtySold (QtyNet)",
                                  "type": "object",
                                  "properties": {
                                    "ExTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                    },
                                    "IncTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                    },
                                    "Tax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                    },
                                    "Localisation": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency of the price",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "RRPUnitPrice": {
                                  "description": "The (required) final 'as sold' unit price of the sale of this lines product, often provided, but sometimes needs to be derived from GrandTotal / QtySold (QtyNet)",
                                  "type": "object",
                                  "properties": {
                                    "ExTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                    },
                                    "IncTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                    },
                                    "Tax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                    },
                                    "Localisation": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency of the price",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "OriginalUnitPrice": {
                                  "description": "The 'original selling price', typically the first release of a unit price for this product, typically has to be explicitly provided and not derivable",
                                  "type": "object",
                                  "properties": {
                                    "ExTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                    },
                                    "IncTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                    },
                                    "Tax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                    },
                                    "Localisation": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency of the price",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "FromUnitPrice": {
                                  "description": "The 'from' price', typically the , typically the previous price relative to this one",
                                  "type": "object",
                                  "properties": {
                                    "ExTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                    },
                                    "IncTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                    },
                                    "Tax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                    },
                                    "Localisation": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency of the price",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "ListUnitPrice": {
                                  "description": "The 'from' price', typically the , typically the previous price relative to this one",
                                  "type": "object",
                                  "properties": {
                                    "ExTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                    },
                                    "IncTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                    },
                                    "Tax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                    },
                                    "Localisation": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency of the price",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                }
                              },
                              "required": [
                                "SoldPrice"
                              ]
                            },
                            "CostPrices": {
                              "type": "object",
                              "description": "The (optional) collection of possible COST UNIT prices (COGS related), related to the sale of the product on this line.  Actual usage and ability to populate depends on the richness of the sources.  Some can be derived, while others are typically provided",
                              "unevaluatedProperties": true,
                              "properties": {
                                "ProductCostPrice": {
                                  "description": "The product 'cost price' - unit cost related to the buying/making of the product on this line (not marketing or logistics related), often provided, but sometimes needs to be derived from ProductCostTotal / QtySold (QtyNet).  Quite often this is derived by joining to core product/price entities, which includes costs, and enriching subsequent",
                                  "type": "object",
                                  "properties": {
                                    "ExTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                    },
                                    "IncTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                    },
                                    "Tax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                    },
                                    "Localisation": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency of the price",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "LogisticsCostPrice": {
                                  "description": "The logistics 'cost price' - unit cost related to the transport/logistics of the product on this line (not marketing or logistics related), often an apportioned amount.",
                                  "type": "object",
                                  "properties": {
                                    "ExTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                    },
                                    "IncTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                    },
                                    "Tax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                    },
                                    "Localisation": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency of the price",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "MarginPrices": {
                              "type": "object",
                              "description": "The (optional) collection of possible Margin UNIT prices (COGS related), related to the profitability of the product on this line.  Actual usage and ability to populate depends on the richness of the sources, having both selling and cost price(s).  Most often needs to be derived",
                              "unevaluatedProperties": false,
                              "properties": {
                                "ProductMarginPrice": {
                                  "description": "",
                                  "type": "object",
                                  "properties": {
                                    "ExTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                    },
                                    "IncTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                    },
                                    "Tax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                    },
                                    "Localisation": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency of the price",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "SellingPrices"
                          ]
                        },
                        "Totals": {
                          "type": "object",
                          "description": "The collection of possible AGGREGATE totals (unit * qty), both selling and cost related, related to the sale of this line.  Actual usage and ability to populate depends on the richness of the sources.  Some can be derived, while others are typically provided",
                          "unevaluatedProperties": false,
                          "properties": {
                            "SaleTotals": {
                              "type": "object",
                              "description": "",
                              "unevaluatedProperties": true,
                              "properties": {
                                "LineTotal": {
                                  "description": "",
                                  "type": "object",
                                  "properties": {
                                    "ExTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                    },
                                    "IncTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                    },
                                    "Tax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                    },
                                    "Localisation": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency of the price",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "SubTotalBeforeDiscounts": {
                                  "description": "",
                                  "type": "object",
                                  "properties": {
                                    "ExTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                    },
                                    "IncTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                    },
                                    "Tax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                    },
                                    "Localisation": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency of the price",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "DiscountsTotal": {
                                  "description": "",
                                  "type": "object",
                                  "properties": {
                                    "ExTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                    },
                                    "IncTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                    },
                                    "Tax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                    },
                                    "Localisation": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency of the price",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "DiscountsApportionedTotal": {
                                  "description": "",
                                  "type": "object",
                                  "properties": {
                                    "ExTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                    },
                                    "IncTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                    },
                                    "Tax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                    },
                                    "Localisation": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency of the price",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "ChargesTotal": {
                                  "description": "",
                                  "type": "object",
                                  "properties": {
                                    "ExTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                    },
                                    "IncTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                    },
                                    "Tax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                    },
                                    "Localisation": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency of the price",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "TaxesTotal": {
                                  "description": "",
                                  "type": "object",
                                  "properties": {
                                    "ExTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                    },
                                    "IncTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                    },
                                    "Tax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                    },
                                    "Localisation": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency of the price",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "CostTotals": {
                              "type": "object",
                              "description": "",
                              "unevaluatedProperties": true,
                              "properties": {
                                "ProductCostTotal": {
                                  "description": "",
                                  "type": "object",
                                  "properties": {
                                    "ExTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                    },
                                    "IncTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                    },
                                    "Tax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                    },
                                    "Localisation": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency of the price",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "LogisticsCostTotal": {
                                  "description": "",
                                  "type": "object",
                                  "properties": {
                                    "ExTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                    },
                                    "IncTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                    },
                                    "Tax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                    },
                                    "Localisation": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency of the price",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "MarketingCostTotal": {
                                  "description": "",
                                  "type": "object",
                                  "properties": {
                                    "ExTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                    },
                                    "IncTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                    },
                                    "Tax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                    },
                                    "Localisation": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency of the price",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "CommissionTotal": {
                                  "description": "",
                                  "type": "object",
                                  "properties": {
                                    "ExTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                    },
                                    "IncTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                    },
                                    "Tax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                    },
                                    "Localisation": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency of the price",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "MarginTotals": {
                              "type": "object",
                              "description": "",
                              "unevaluatedProperties": true,
                              "properties": {
                                "ProductMarginTotal": {
                                  "description": "",
                                  "type": "object",
                                  "properties": {
                                    "ExTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                    },
                                    "IncTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                    },
                                    "Tax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                    },
                                    "Localisation": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency of the price",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "SaleTotals"
                          ]
                        },
                        "ExchangeAtts": {
                          "type": "object",
                          "description": "The collection of exchange related options/attributes",
                          "unevaluatedProperties": false,
                          "properties": {
                            "ExchangeId": {
                              "description": "The Id of the exchange transaction",
                              "type": "string"
                            },
                            "ReasonCode": {
                              "description": "The code of the reason for the exchange",
                              "type": "string"
                            },
                            "ReasonDesc": {
                              "description": "The desc of the reason for the exchange",
                              "type": "string"
                            },
                            "IsAnyRefunded": {
                              "description": "Is any qty of this line refunded?",
                              "type": "string",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "IsFullRefunded": {
                              "description": "Is all qtys of this line refunded?",
                              "type": "string",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "IsInReturnItem": {
                              "description": "Is this item in the return item?",
                              "type": "string",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "IsChecked": {
                              "description": "Is this item checked?",
                              "type": "string",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "IsLastExchanged": {
                              "description": "Is this the last exchange?",
                              "type": "string",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "IsSealed": {
                              "description": "Is this exchange still sealed?",
                              "type": "string",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "NewItems": {
                              "type": "array",
                              "description": "The collection (array) of new items as a result of the exchange",
                              "items": {
                                "type": "object",
                                "required": [
                                  "Qty"
                                ],
                                "unevaluatedProperties": false,
                                "properties": {
                                  "Qty": {
                                    "description": "The quantity of items if this bundle",
                                    "type": "object",
                                    "required": [
                                      "Amount"
                                    ],
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "Code": {
                                        "type": "string",
                                        "description": "The code of the quantity e.g QtySold, QtyReturned"
                                      },
                                      "Desc": {
                                        "type": "string",
                                        "description": "The description of the quantity"
                                      },
                                      "Amount": {
                                        "type": [
                                          "number",
                                          "null"
                                        ],
                                        "description": "The (required) actual quantity amount measure as a numerical e.g 1"
                                      },
                                      "UnitMeasure": {
                                        "type": "string",
                                        "description": "The quantity unit measure e.g Each, Package, Bundle, Parcel"
                                      },
                                      "UnitType": {
                                        "type": "string",
                                        "description": "The quantity unit type. e.g Metric, Imperial"
                                      },
                                      "UnitScheme": {
                                        "type": "string",
                                        "description": "The quantity unit scheme e.g ISO xx"
                                      },
                                      "Lineage": {
                                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                        "type": "object",
                                        "unevaluatedProperties": false,
                                        "properties": {
                                          "EntityId": {
                                            "type": "string",
                                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                          },
                                          "EventId": {
                                            "type": "string",
                                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                          },
                                          "AsOf": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                          }
                                        },
                                        "required": [
                                          "EventId,AsOf"
                                        ]
                                      }
                                    }
                                  },
                                  "ItemType": {
                                    "type": "string",
                                    "description": "The type of the qty bundle as will be either product related or order, so this specifies the exact detail e.g Product, ProductVariant, SaleOrderLine, PurchaseOrderLine"
                                  },
                                  "ProductId": {
                                    "type": "string",
                                    "description": "The Xfuze product Id, if the quantity bundle refers to product"
                                  },
                                  "ProductKey": {
                                    "type": "string",
                                    "description": "The native product key/number"
                                  },
                                  "ProductKeyType": {
                                    "type": "string",
                                    "description": "The type of the product key e.g SKU, EAN, UPC etc"
                                  },
                                  "LineId": {
                                    "type": "string",
                                    "description": "The order line Id, in Xfuze canonical form, identifying this sales o"
                                  },
                                  "LineNumberKey": {
                                    "type": "string",
                                    "description": "The 'natural' order line number key e.g 123456789_1"
                                  },
                                  "LineSeq": {
                                    "type": "number",
                                    "description": "The ordinal line sequence number e.g 1"
                                  }
                                }
                              }
                            },
                            "ExtAtts": {
                              "type": "array",
                              "description": "The collection (array) of extra extension fulfillment options/attributes.",
                              "items": {
                                "type": "object",
                                "description": "A custom att object, a generic extension object",
                                "required": [
                                  "Code",
                                  "Value"
                                ],
                                "unevaluatedProperties": false,
                                "properties": {
                                  "Code": {
                                    "type": "string",
                                    "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                                  },
                                  "CodeShort": {
                                    "type": "string",
                                    "description": "The short version of the code in the leaf element of 'Code'"
                                  },
                                  "Name": {
                                    "type": "string",
                                    "description": "The name of the att"
                                  },
                                  "Value": {
                                    "type": "string",
                                    "description": "The value of the att"
                                  },
                                  "Desc": {
                                    "type": "string",
                                    "description": "The desc of the att"
                                  },
                                  "SourceSystem": {
                                    "type": "string",
                                    "description": "The source system this att is from"
                                  },
                                  "Lineage": {
                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "EntityId": {
                                        "type": "string",
                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                      },
                                      "EventId": {
                                        "type": "string",
                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                      },
                                      "AsOf": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                      }
                                    },
                                    "required": [
                                      "EventId,AsOf"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        },
                        "MarketingAtts": {
                          "type": "object",
                          "description": "The collection of marketing options/attributes",
                          "unevaluatedProperties": false,
                          "properties": {
                            "IsExcludedFromDiscPromo": {
                              "description": "Is this line excluded from discount/promo",
                              "type": "string",
                              "enum": [
                                "Y",
                                "N",
                                "U"
                              ]
                            },
                            "SourceCode": {
                              "description": "The code of the source that was attributed to this order",
                              "type": "string"
                            },
                            "ExtAtts": {
                              "type": "array",
                              "description": "The collection (array) of extra extension fulfillment options/attributes.",
                              "items": {
                                "type": "object",
                                "description": "A custom att object, a generic extension object",
                                "required": [
                                  "Code",
                                  "Value"
                                ],
                                "unevaluatedProperties": false,
                                "properties": {
                                  "Code": {
                                    "type": "string",
                                    "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                                  },
                                  "CodeShort": {
                                    "type": "string",
                                    "description": "The short version of the code in the leaf element of 'Code'"
                                  },
                                  "Name": {
                                    "type": "string",
                                    "description": "The name of the att"
                                  },
                                  "Value": {
                                    "type": "string",
                                    "description": "The value of the att"
                                  },
                                  "Desc": {
                                    "type": "string",
                                    "description": "The desc of the att"
                                  },
                                  "SourceSystem": {
                                    "type": "string",
                                    "description": "The source system this att is from"
                                  },
                                  "Lineage": {
                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "EntityId": {
                                        "type": "string",
                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                      },
                                      "EventId": {
                                        "type": "string",
                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                      },
                                      "AsOf": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                      }
                                    },
                                    "required": [
                                      "EventId,AsOf"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        },
                        "DiscountAtts": {
                          "type": "array",
                          "description": "The collection (array) of discount attributes for this line",
                          "items": {
                            "type": "object",
                            "description": "A custom att object, a generic extension object",
                            "required": [
                              "Code",
                              "Value"
                            ],
                            "unevaluatedProperties": false,
                            "properties": {
                              "Code": {
                                "type": "string",
                                "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                              },
                              "CodeShort": {
                                "type": "string",
                                "description": "The short version of the code in the leaf element of 'Code'"
                              },
                              "Name": {
                                "type": "string",
                                "description": "The name of the att"
                              },
                              "Value": {
                                "type": "string",
                                "description": "The value of the att"
                              },
                              "Desc": {
                                "type": "string",
                                "description": "The desc of the att"
                              },
                              "SourceSystem": {
                                "type": "string",
                                "description": "The source system this att is from"
                              },
                              "Lineage": {
                                "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                "type": "object",
                                "unevaluatedProperties": false,
                                "properties": {
                                  "EntityId": {
                                    "type": "string",
                                    "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                  },
                                  "EventId": {
                                    "type": "string",
                                    "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                  },
                                  "AsOf": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                  }
                                },
                                "required": [
                                  "EventId,AsOf"
                                ]
                              }
                            }
                          }
                        },
                        "FulfillmentAtts": {
                          "type": "array",
                          "description": "The collection (array) of fulfillment attributes/options (fulfillment options e.g delivery method, not the fulfillment's e.g delivery themselves), controlling fulfillment of the line.  Typically sits at the header level, but sometimes also a line level",
                          "items": {
                            "type": "object",
                            "description": "A custom att object, a generic extension object",
                            "required": [
                              "Code",
                              "Value"
                            ],
                            "unevaluatedProperties": false,
                            "properties": {
                              "Code": {
                                "type": "string",
                                "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                              },
                              "CodeShort": {
                                "type": "string",
                                "description": "The short version of the code in the leaf element of 'Code'"
                              },
                              "Name": {
                                "type": "string",
                                "description": "The name of the att"
                              },
                              "Value": {
                                "type": "string",
                                "description": "The value of the att"
                              },
                              "Desc": {
                                "type": "string",
                                "description": "The desc of the att"
                              },
                              "SourceSystem": {
                                "type": "string",
                                "description": "The source system this att is from"
                              },
                              "Lineage": {
                                "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                "type": "object",
                                "unevaluatedProperties": false,
                                "properties": {
                                  "EntityId": {
                                    "type": "string",
                                    "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                  },
                                  "EventId": {
                                    "type": "string",
                                    "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                  },
                                  "AsOf": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                  }
                                },
                                "required": [
                                  "EventId,AsOf"
                                ]
                              }
                            }
                          }
                        },
                        "PaymentAtts": {
                          "type": "array",
                          "description": "The collection (array) of payment attributes/options (payment options from customer e.g method, not the payment transactions themselves), controlling payment processing for the product purchased.  Typically sits at the header level, but sometimes also a line level",
                          "items": {
                            "type": "object",
                            "description": "A custom att object, a generic extension object",
                            "required": [
                              "Code",
                              "Value"
                            ],
                            "unevaluatedProperties": false,
                            "properties": {
                              "Code": {
                                "type": "string",
                                "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                              },
                              "CodeShort": {
                                "type": "string",
                                "description": "The short version of the code in the leaf element of 'Code'"
                              },
                              "Name": {
                                "type": "string",
                                "description": "The name of the att"
                              },
                              "Value": {
                                "type": "string",
                                "description": "The value of the att"
                              },
                              "Desc": {
                                "type": "string",
                                "description": "The desc of the att"
                              },
                              "SourceSystem": {
                                "type": "string",
                                "description": "The source system this att is from"
                              },
                              "Lineage": {
                                "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                "type": "object",
                                "unevaluatedProperties": false,
                                "properties": {
                                  "EntityId": {
                                    "type": "string",
                                    "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                  },
                                  "EventId": {
                                    "type": "string",
                                    "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                  },
                                  "AsOf": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                  }
                                },
                                "required": [
                                  "EventId,AsOf"
                                ]
                              }
                            }
                          }
                        },
                        "FinanceAtts": {
                          "type": "array",
                          "description": "The collection of finance (e.g tax, commission) attributes, of the product purchased",
                          "items": {
                            "type": "object",
                            "description": "A custom att object, a generic extension object",
                            "required": [
                              "Code",
                              "Value"
                            ],
                            "unevaluatedProperties": false,
                            "properties": {
                              "Code": {
                                "type": "string",
                                "description": "The canonical Xfuze code in full dot namespace for as per a canonical code"
                              },
                              "CodeShort": {
                                "type": "string",
                                "description": "The short version of the code in the leaf element of 'Code'"
                              },
                              "Name": {
                                "type": "string",
                                "description": "The name of the att"
                              },
                              "Value": {
                                "type": "string",
                                "description": "The value of the att"
                              },
                              "Desc": {
                                "type": "string",
                                "description": "The desc of the att"
                              },
                              "SourceSystem": {
                                "type": "string",
                                "description": "The source system this att is from"
                              },
                              "Lineage": {
                                "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                "type": "object",
                                "unevaluatedProperties": false,
                                "properties": {
                                  "EntityId": {
                                    "type": "string",
                                    "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                  },
                                  "EventId": {
                                    "type": "string",
                                    "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                  },
                                  "AsOf": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                  }
                                },
                                "required": [
                                  "EventId,AsOf"
                                ]
                              }
                            }
                          }
                        },
                        "Lineage": {
                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                          "type": "object",
                          "unevaluatedProperties": false,
                          "properties": {
                            "EntityId": {
                              "type": "string",
                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                            },
                            "EventId": {
                              "type": "string",
                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                            },
                            "AsOf": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                            }
                          },
                          "required": [
                            "EventId,AsOf"
                          ]
                        }
                      },
                      "required": [
                        "SalesOrderNumber",
                        "SalesOrderLineNumber",
                        "ProductAtts",
                        "Qtys",
                        "Totals"
                      ]
                    }
                  ]
                },
                "DiscountLines": {
                  "type": "array",
                  "description": "The collection (array) of discount lines associated with the composed line entity",
                  "items": {
                    "type": "object",
                    "description": "A discount line related to a single discount against a sales order entity (SOH, SOL).  Multiple discount lines are possible (1:*), thus this line object is typically in an array",
                    "unevaluatedProperties": false,
                    "allOf": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "properties": {
                              "EntityId": {
                                "type": "string",
                                "description": "The (required) globally unique synthetic Xfuze Id for the entity instance this event is related to and whose payload is the subject of change, unique across all entities. Typically of the format [EntityType::EntitySubType]_[SystemCode]_[RawEntityId] where RawEntityId can be composed of 1 or more source fields to create singular uniqueness e.g SalesOrderLine::Return_Hybris_8106008620_RET1"
                              },
                              "EntityType": {
                                "type": "string",
                                "description": "The (required) entity type, allowing for a typing system (top level) for entities, where the type is sourced from the master Xfuze control list e.g SalesOrderLine"
                              },
                              "EntitySubType": {
                                "type": "string",
                                "description": "An (optional) entity subtype, allowing for further, more refined typing of the core type for accuracy of interpretation e.g ReturnLine, CancelLine, VoidLine etc"
                              },
                              "ParentEntityId": {
                                "type": "string",
                                "description": "An (required) canonical Xfuze parent entity Id, where there is a natural parent a level above, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
                              },
                              "ParentEntityType": {
                                "type": "string",
                                "description": "An (required) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                              },
                              "CompositeEntityId": {
                                "type": "string",
                                "description": "An (optional) canonical Xfuze parent entity Id, where there is a natural 'composition' and containing parent, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
                              },
                              "CompositeEntityType": {
                                "type": "string",
                                "description": "An (optional) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                              }
                            },
                            "required": [
                              "EntityId",
                              "EntityType",
                              "ParentEntityId",
                              "ParentEntityType",
                              "CompositeEntityId",
                              "CompositeEntityType"
                            ]
                          },
                          {
                            "properties": {
                              "XRefIds": {
                                "description": "The list of cross reference lookups, i.e all the ways to look up this entity by the various data points, both in canonical Ids and system specific ones",
                                "type": "array",
                                "minItems": 1,
                                "items": {
                                  "type": "object",
                                  "description": "An object to capture cross referencing fields to support entity lookups by various surrogate keys spanning systems",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "Id": {
                                      "type": "string",
                                      "description": "The value of the id/key to lookup using (i.e surrogate key 'value') e.g TRAN123456"
                                    },
                                    "SystemCode": {
                                      "type": "string",
                                      "description": "The system mastering the 'Code' field and its 'Id' value e.g PMC"
                                    },
                                    "Code": {
                                      "type": "string",
                                      "description": "The name of the id/key to lookup using (i.e surrogate key 'value') as is its exact name from source e.g transId"
                                    },
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId this cross referencing lookup resolves to e.g SalesOrder_PMC_TRAN123456"
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                }
                              },
                              "TimeZones": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "required": [
                                    "TimeZone"
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "TimeZone": {
                                      "type": "string",
                                      "description": "The Time Zone e.g Europe/London"
                                    },
                                    "TimeZoneOffset": {
                                      "type": "string",
                                      "description": "UTC+01:00"
                                    },
                                    "TimeZoneExplicitCode": {
                                      "type": "string",
                                      "description": "Indicates whether the timeZone offset is explicit in the source (e.g +01:00) or implicit (e.g assumed to be +01:00, and thus reformatting work is needed to make explicit)",
                                      "enum": [
                                        "ExplicitOffsetInSource",
                                        "ImplicitOffsetNotInSource"
                                      ]
                                    },
                                    "Country": {
                                      "description": "The country of the timezone",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                        },
                                        "CountryCode": {
                                          "type": "string",
                                          "description": "The canonical CountryCode (country-code) country code e.g 036"
                                        },
                                        "Name": {
                                          "type": "string",
                                          "description": "The canonical (official) 'Name' of the country e.g Australia"
                                        },
                                        "AltName": {
                                          "type": "string",
                                          "description": "An alternate name for the country"
                                        },
                                        "RegionCode": {
                                          "type": "string",
                                          "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                        },
                                        "RegionName": {
                                          "type": "string",
                                          "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                        },
                                        "SubRegionCode": {
                                          "type": "string",
                                          "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                        },
                                        "SubRegionName": {
                                          "type": "string",
                                          "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                        },
                                        "IntermediateRegionCode": {
                                          "type": "string",
                                          "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                        },
                                        "IntermediateRegionName": {
                                          "type": "string",
                                          "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                        },
                                        "Coordinates": {
                                          "description": "The canonical Coordinates of the country (canonical from google)",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "Latitude": {
                                              "type": "number",
                                              "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                              "minimum": -90,
                                              "maximum": 90
                                            },
                                            "Longitude": {
                                              "type": "number",
                                              "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                              "minimum": -180,
                                              "maximum": 180
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "Latitude",
                                            "Longitude"
                                          ]
                                        },
                                        "PrimaryLanguage": {
                                          "type": "string",
                                          "description": "The canonical Primary Language of the country"
                                        },
                                        "Currency": {
                                          "description": "The canonical Currency Code of the country (canonical from google)",
                                          "type": "object",
                                          "anyOf": [
                                            {
                                              "required": [
                                                "ISO2"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "ISO3"
                                              ]
                                            }
                                          ],
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "ISO2": {
                                              "type": "string",
                                              "description": "The canonical ISO2 currency code"
                                            },
                                            "ISO3": {
                                              "type": "string",
                                              "description": "The canonical ISO3 currency code"
                                            },
                                            "Number": {
                                              "type": "string",
                                              "description": "The canonical currency number"
                                            },
                                            "DecimalPlaces": {
                                              "type": "string",
                                              "description": "The canonical number of decimal places for the currency"
                                            },
                                            "CountryCodes": {
                                              "type": "array",
                                              "description": "The canonical array of ISO3 country codes officially using this currency",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "Symbol": {
                                              "type": "string",
                                              "description": "The canonical symbol for the currency"
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          }
                                        },
                                        "IsEuropeanCountry": {
                                          "type": "string",
                                          "description": "Is this country an european one? e.g Y",
                                          "enum": [
                                            "Y",
                                            "N",
                                            "U"
                                          ]
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                }
                              },
                              "Times": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "anyOf": [
                                    {
                                      "required": [
                                        "DateId",
                                        "UTC",
                                        "Millis"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "DateId",
                                        "Local",
                                        "TimeZone"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "DateId": {
                                      "type": "string",
                                      "description": "The Xfuze Date dim Id e.g Date_20231001"
                                    },
                                    "HourId": {
                                      "type": "string",
                                      "description": "The Xfuze hour dim Id e.g Hour_2023100112"
                                    },
                                    "UTC": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "An Xfuze timestamp represented in UTC e.g 2023-01-12T12:03:00.000+0000"
                                    },
                                    "Local": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "An Xfuze timestamp represented in local time e.g 2023-01-12T13:03:00.000+0100"
                                    },
                                    "PartyLocal": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "An Xfuze timestamp represented in party local time e.g 2023-01-12T13:03:00.000+0100"
                                    },
                                    "Millis": {
                                      "type": "number",
                                      "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                                    },
                                    "TimeZone": {
                                      "type": "string",
                                      "description": "The related time zone"
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                }
                              },
                              "Status": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "required": [
                                    "StatusCode"
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "StatusClass": {
                                      "type": "string",
                                      "description": "The class of the status e.g Retail, Hire, TailorMe"
                                    },
                                    "StatusCode": {
                                      "type": "string",
                                      "description": "The (required) unique code for the status e.g ProcessingStatus"
                                    },
                                    "StatusDesc": {
                                      "type": "string",
                                      "description": "The description for the status e.g ProcessingStatus"
                                    },
                                    "SeqNo": {
                                      "type": "number",
                                      "description": "The sequence number of this status in relation to all the possible values in terms of time order e.g 2"
                                    },
                                    "ReasonCode": {
                                      "type": "string",
                                      "description": "A reason code for the status being in this state e.g Faulty Product"
                                    },
                                    "ReasonDesc": {
                                      "type": "string",
                                      "description": "A reason description for the status being in this state"
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                }
                              },
                              "Type": {
                                "type": "object",
                                "required": [
                                  "TypeCode"
                                ],
                                "unevaluatedProperties": false,
                                "properties": {
                                  "TypeClass": {
                                    "type": "string",
                                    "description": "The class of the type e.g Concession, Hire"
                                  },
                                  "TypeCode": {
                                    "type": "string",
                                    "description": "The canonical code of the type e.g Sale"
                                  },
                                  "TypeDesc": {
                                    "type": "string",
                                    "description": "The description of the type e.g Sale Order Line"
                                  },
                                  "SubTypeCode": {
                                    "type": "string",
                                    "description": "The canonical code of the sub type e.g Sale"
                                  },
                                  "SubTypeDesc": {
                                    "type": "string",
                                    "description": "The description of the sub type e.g Sale Order Line"
                                  },
                                  "Lineage": {
                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "EntityId": {
                                        "type": "string",
                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                      },
                                      "EventId": {
                                        "type": "string",
                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                      },
                                      "AsOf": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                      }
                                    },
                                    "required": [
                                      "EventId,AsOf"
                                    ]
                                  }
                                }
                              }
                            },
                            "required": [
                              "XRefIds",
                              "Times",
                              "Status",
                              "Type"
                            ]
                          }
                        ]
                      },
                      {
                        "properties": {
                          "LineIds": {
                            "description": "The (required) common set of order line Ids for this discount line, not all a required individually, only what can be mapped & derived.",
                            "type": "object",
                            "unevaluatedProperties": false,
                            "properties": {
                              "SalesOrderLineId": {
                                "type": "string",
                                "description": "The (required) SalesOrderLineId Id, in Xfuze canonical form, identifying this sales order line amongst other lines, in the form of SalesOrderLine::[type]_[sourceSystem]_[SalesOrderLineKey] e.g SalesOrder::Sale_PMC_123456789_1"
                              },
                              "SalesOrderLineNumberKey": {
                                "type": "string",
                                "description": "The 'natural' sales order line number key, typically either a combination of SalesOrderNumber & a 'sequence number' (derived) OR explicitly supplied unique Id from source - also used to construct the synthetic SOL Xfuze Ids. e.g 123456789_1"
                              },
                              "SalesOrderLineProductKey": {
                                "type": "string",
                                "description": "The 'natural' sales order line product key, typically either a combination of SalesOrderNumber & a 'product id' (e.g SKU, EAN) OR explicitly supplied unique Id from source - also used to construct the synthetic SOL Xfuze Ids. e.g 123456789_1201764"
                              },
                              "SalesOrderLineProductKeyType": {
                                "type": "string",
                                "description": "The type of the product part of SalesOrderLineProductKey e.g Sku, EAN"
                              },
                              "SalesOrderLineSeq": {
                                "type": "number",
                                "description": "The ordinal line sequence number e.g 2"
                              },
                              "OriginalSalesOrderLineId": {
                                "type": "string",
                                "description": "The SalesOrderLineId Id, in Xfuze canonical form, identifying an 'original' sales order, in the form of SalesOrder::[type]_[sourceSystem]_[OriginalSalesOrderKey] e.g SalesOrder::Sale_PMC_987654321"
                              },
                              "OriginalSalesOrderLineNumberKey": {
                                "type": "string",
                                "description": "The original 'natural' sales order 'key' / 'number', typically as a way to link related orders together the can be physically seperate and need a linking e.g Return,Exchange,"
                              },
                              "OriginalSalesOrderLineSeq": {
                                "type": "number",
                                "description": "The original ordinal line sequence number e.g 1"
                              },
                              "SalesOrderIds": {
                                "description": "The (required) common set of order Ids for this order, not all a required individually, only what can be mapped & derived",
                                "type": "object",
                                "unevaluatedProperties": false,
                                "properties": {
                                  "SalesOrderId": {
                                    "type": "string",
                                    "description": "The (required) SalesOrderId Id, in Xfuze canonical form, identifying this sales order, in the form of SalesOrder::[type]_[sourceSystem]_[SalesOrderKey] e.g SalesOrder::Return_PMC_RET123456789"
                                  },
                                  "SalesOrderKey": {
                                    "type": "string",
                                    "description": "The (required) 'natural' sales order key/number, typically as the system of entry defines (online or retail), and also used to construct the synthetic SO Xfuze Ids. e.g RET123456789"
                                  },
                                  "OriginalSalesOrderId": {
                                    "type": "string",
                                    "description": "The SalesOrderId Id, in Xfuze canonical form, identifying an 'original' sales order, in the form of SalesOrder::[type]_[sourceSystem]_[OriginalSalesOrderKey] e.g SalesOrder::Sale_PMC_987654321"
                                  },
                                  "OriginalSalesOrderKey": {
                                    "type": "string",
                                    "description": "The original 'natural' sales order key/number, typically as a way to link related orders together the can be physically separate and need a linking (Return,Exchange etc) e.g 987654321"
                                  },
                                  "ParentSalesOrderId": {
                                    "type": "string",
                                    "description": "The SalesOrderId Id, in Xfuze canonical form, identifying an 'original' sales order, in the form of SalesOrder::[type]_[sourceSystem]_[OriginalSalesOrderKey] e.g SalesOrder::Sale_PMC_987654321"
                                  },
                                  "ParentSalesOrderKey": {
                                    "type": "string",
                                    "description": "The parent 'natural' sales order key/number, typically as a way to link to parent orders in an order hierarchy, where one child order has a single parent e.g HireOrder parent order sits above individual hire orders for formal wear hire. NOTE: SalesOrderId should contain a parent part if this is the case in its ID construction "
                                  },
                                  "SalesOrderReferenceNumber": {
                                    "type": "string",
                                    "description": "The customer facing reference number/code, as a customer would see externally, as opposed to an internal key e.g ORD-RET-2044534"
                                  },
                                  "OriginalSalesOrderReferenceNumber": {
                                    "type": "string",
                                    "description": "The original 'natural' customer facing reference number/code, typically as a way to link related order together (Return,Exchange) e.g ORD-2044534"
                                  },
                                  "ReceiptNumber": {
                                    "type": "string",
                                    "description": "The customer facing receipt number/code, as a customer would see externally, as opposed to an internal key e.g ORD-RET-2044534"
                                  },
                                  "OriginalReceiptNumber": {
                                    "type": "string",
                                    "description": "The original 'natural' customer facing receipt number/code, typically as a way to link related order together (Return,Exchange) e.g ORD-2044534"
                                  }
                                },
                                "required": [
                                  "SalesOrderId",
                                  "SalesOrderNumber"
                                ]
                              }
                            },
                            "required": [
                              "SalesOrderId",
                              "SalesOrderNumber",
                              "SalesOrderLineId",
                              "SalesOrderLineKey"
                            ]
                          },
                          "DiscountLineKey": {
                            "type": "string",
                            "description": "The 'natural' discount line key/number, typically either a combination of SalesOrderNumber & a 'sequence number' (derived) OR explicitly supplied unique Id from source - also used to construct the synthetic SOL Xfuze Ids. e.g 123456789_1"
                          },
                          "DiscountLineSeq": {
                            "type": "number",
                            "description": "The ordinal line sequence number e.g 2"
                          },
                          "Discount": {
                            "description": "The Discount associated with this line",
                            "type": "object",
                            "unevaluatedProperties": false,
                            "allOf": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "properties": {
                                      "EntityId": {
                                        "type": "string",
                                        "description": "The (required) globally unique synthetic Xfuze Id for the entity instance this event is related to and whose payload is the subject of change, unique across all entities. Typically of the format [EntityType::EntitySubType]_[SystemCode]_[RawEntityId] where RawEntityId can be composed of 1 or more source fields to create singular uniqueness e.g SalesOrderLine::Return_Hybris_8106008620_RET1"
                                      },
                                      "EntityType": {
                                        "type": "string",
                                        "description": "The (required) entity type, allowing for a typing system (top level) for entities, where the type is sourced from the master Xfuze control list e.g SalesOrderLine"
                                      },
                                      "EntitySubType": {
                                        "type": "string",
                                        "description": "An (optional) entity subtype, allowing for further, more refined typing of the core type for accuracy of interpretation e.g ReturnLine, CancelLine, VoidLine etc"
                                      },
                                      "ParentEntityId": {
                                        "type": "string",
                                        "description": "An (required) canonical Xfuze parent entity Id, where there is a natural parent a level above, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
                                      },
                                      "ParentEntityType": {
                                        "type": "string",
                                        "description": "An (required) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                                      },
                                      "CompositeEntityId": {
                                        "type": "string",
                                        "description": "An (optional) canonical Xfuze parent entity Id, where there is a natural 'composition' and containing parent, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
                                      },
                                      "CompositeEntityType": {
                                        "type": "string",
                                        "description": "An (optional) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                                      }
                                    },
                                    "required": [
                                      "EntityId",
                                      "EntityType",
                                      "ParentEntityId",
                                      "ParentEntityType",
                                      "CompositeEntityId",
                                      "CompositeEntityType"
                                    ]
                                  },
                                  {
                                    "properties": {
                                      "XRefIds": {
                                        "description": "The list of cross reference lookups, i.e all the ways to look up this entity by the various data points, both in canonical Ids and system specific ones",
                                        "type": "array",
                                        "minItems": 1,
                                        "items": {
                                          "type": "object",
                                          "description": "An object to capture cross referencing fields to support entity lookups by various surrogate keys spanning systems",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "Id": {
                                              "type": "string",
                                              "description": "The value of the id/key to lookup using (i.e surrogate key 'value') e.g TRAN123456"
                                            },
                                            "SystemCode": {
                                              "type": "string",
                                              "description": "The system mastering the 'Code' field and its 'Id' value e.g PMC"
                                            },
                                            "Code": {
                                              "type": "string",
                                              "description": "The name of the id/key to lookup using (i.e surrogate key 'value') as is its exact name from source e.g transId"
                                            },
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId this cross referencing lookup resolves to e.g SalesOrder_PMC_TRAN123456"
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "TimeZones": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "object",
                                          "required": [
                                            "TimeZone"
                                          ],
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "TimeZone": {
                                              "type": "string",
                                              "description": "The Time Zone e.g Europe/London"
                                            },
                                            "TimeZoneOffset": {
                                              "type": "string",
                                              "description": "UTC+01:00"
                                            },
                                            "TimeZoneExplicitCode": {
                                              "type": "string",
                                              "description": "Indicates whether the timeZone offset is explicit in the source (e.g +01:00) or implicit (e.g assumed to be +01:00, and thus reformatting work is needed to make explicit)",
                                              "enum": [
                                                "ExplicitOffsetInSource",
                                                "ImplicitOffsetNotInSource"
                                              ]
                                            },
                                            "Country": {
                                              "description": "The country of the timezone",
                                              "type": "object",
                                              "anyOf": [
                                                {
                                                  "required": [
                                                    "ISO2"
                                                  ]
                                                },
                                                {
                                                  "required": [
                                                    "ISO3"
                                                  ]
                                                }
                                              ],
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "ISO2": {
                                                  "type": "string",
                                                  "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                                },
                                                "ISO3": {
                                                  "type": "string",
                                                  "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                                },
                                                "CountryCode": {
                                                  "type": "string",
                                                  "description": "The canonical CountryCode (country-code) country code e.g 036"
                                                },
                                                "Name": {
                                                  "type": "string",
                                                  "description": "The canonical (official) 'Name' of the country e.g Australia"
                                                },
                                                "AltName": {
                                                  "type": "string",
                                                  "description": "An alternate name for the country"
                                                },
                                                "RegionCode": {
                                                  "type": "string",
                                                  "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                                },
                                                "RegionName": {
                                                  "type": "string",
                                                  "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                                },
                                                "SubRegionCode": {
                                                  "type": "string",
                                                  "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                                },
                                                "SubRegionName": {
                                                  "type": "string",
                                                  "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                                },
                                                "IntermediateRegionCode": {
                                                  "type": "string",
                                                  "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                                },
                                                "IntermediateRegionName": {
                                                  "type": "string",
                                                  "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                                },
                                                "Coordinates": {
                                                  "description": "The canonical Coordinates of the country (canonical from google)",
                                                  "type": "object",
                                                  "unevaluatedProperties": false,
                                                  "properties": {
                                                    "Latitude": {
                                                      "type": "number",
                                                      "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                                      "minimum": -90,
                                                      "maximum": 90
                                                    },
                                                    "Longitude": {
                                                      "type": "number",
                                                      "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                                      "minimum": -180,
                                                      "maximum": 180
                                                    },
                                                    "Lineage": {
                                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                      "type": "object",
                                                      "unevaluatedProperties": false,
                                                      "properties": {
                                                        "EntityId": {
                                                          "type": "string",
                                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                        },
                                                        "EventId": {
                                                          "type": "string",
                                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                        },
                                                        "AsOf": {
                                                          "type": "string",
                                                          "format": "date-time",
                                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                        }
                                                      },
                                                      "required": [
                                                        "EventId,AsOf"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "Latitude",
                                                    "Longitude"
                                                  ]
                                                },
                                                "PrimaryLanguage": {
                                                  "type": "string",
                                                  "description": "The canonical Primary Language of the country"
                                                },
                                                "Currency": {
                                                  "description": "The canonical Currency Code of the country (canonical from google)",
                                                  "type": "object",
                                                  "anyOf": [
                                                    {
                                                      "required": [
                                                        "ISO2"
                                                      ]
                                                    },
                                                    {
                                                      "required": [
                                                        "ISO3"
                                                      ]
                                                    }
                                                  ],
                                                  "unevaluatedProperties": false,
                                                  "properties": {
                                                    "ISO2": {
                                                      "type": "string",
                                                      "description": "The canonical ISO2 currency code"
                                                    },
                                                    "ISO3": {
                                                      "type": "string",
                                                      "description": "The canonical ISO3 currency code"
                                                    },
                                                    "Number": {
                                                      "type": "string",
                                                      "description": "The canonical currency number"
                                                    },
                                                    "DecimalPlaces": {
                                                      "type": "string",
                                                      "description": "The canonical number of decimal places for the currency"
                                                    },
                                                    "CountryCodes": {
                                                      "type": "array",
                                                      "description": "The canonical array of ISO3 country codes officially using this currency",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "Symbol": {
                                                      "type": "string",
                                                      "description": "The canonical symbol for the currency"
                                                    },
                                                    "Lineage": {
                                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                      "type": "object",
                                                      "unevaluatedProperties": false,
                                                      "properties": {
                                                        "EntityId": {
                                                          "type": "string",
                                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                        },
                                                        "EventId": {
                                                          "type": "string",
                                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                        },
                                                        "AsOf": {
                                                          "type": "string",
                                                          "format": "date-time",
                                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                        }
                                                      },
                                                      "required": [
                                                        "EventId,AsOf"
                                                      ]
                                                    }
                                                  }
                                                },
                                                "IsEuropeanCountry": {
                                                  "type": "string",
                                                  "description": "Is this country an european one? e.g Y",
                                                  "enum": [
                                                    "Y",
                                                    "N",
                                                    "U"
                                                  ]
                                                },
                                                "Lineage": {
                                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                                  "type": "object",
                                                  "unevaluatedProperties": false,
                                                  "properties": {
                                                    "EntityId": {
                                                      "type": "string",
                                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                    },
                                                    "EventId": {
                                                      "type": "string",
                                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                    },
                                                    "AsOf": {
                                                      "type": "string",
                                                      "format": "date-time",
                                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                    }
                                                  },
                                                  "required": [
                                                    "EventId,AsOf"
                                                  ]
                                                }
                                              }
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "Times": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "anyOf": [
                                            {
                                              "required": [
                                                "DateId",
                                                "UTC",
                                                "Millis"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "DateId",
                                                "Local",
                                                "TimeZone"
                                              ]
                                            }
                                          ],
                                          "properties": {
                                            "DateId": {
                                              "type": "string",
                                              "description": "The Xfuze Date dim Id e.g Date_20231001"
                                            },
                                            "HourId": {
                                              "type": "string",
                                              "description": "The Xfuze hour dim Id e.g Hour_2023100112"
                                            },
                                            "UTC": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "An Xfuze timestamp represented in UTC e.g 2023-01-12T12:03:00.000+0000"
                                            },
                                            "Local": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "An Xfuze timestamp represented in local time e.g 2023-01-12T13:03:00.000+0100"
                                            },
                                            "PartyLocal": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "An Xfuze timestamp represented in party local time e.g 2023-01-12T13:03:00.000+0100"
                                            },
                                            "Millis": {
                                              "type": "number",
                                              "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                                            },
                                            "TimeZone": {
                                              "type": "string",
                                              "description": "The related time zone"
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "Status": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "object",
                                          "required": [
                                            "StatusCode"
                                          ],
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "StatusClass": {
                                              "type": "string",
                                              "description": "The class of the status e.g Retail, Hire, TailorMe"
                                            },
                                            "StatusCode": {
                                              "type": "string",
                                              "description": "The (required) unique code for the status e.g ProcessingStatus"
                                            },
                                            "StatusDesc": {
                                              "type": "string",
                                              "description": "The description for the status e.g ProcessingStatus"
                                            },
                                            "SeqNo": {
                                              "type": "number",
                                              "description": "The sequence number of this status in relation to all the possible values in terms of time order e.g 2"
                                            },
                                            "ReasonCode": {
                                              "type": "string",
                                              "description": "A reason code for the status being in this state e.g Faulty Product"
                                            },
                                            "ReasonDesc": {
                                              "type": "string",
                                              "description": "A reason description for the status being in this state"
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "Type": {
                                        "type": "object",
                                        "required": [
                                          "TypeCode"
                                        ],
                                        "unevaluatedProperties": false,
                                        "properties": {
                                          "TypeClass": {
                                            "type": "string",
                                            "description": "The class of the type e.g Concession, Hire"
                                          },
                                          "TypeCode": {
                                            "type": "string",
                                            "description": "The canonical code of the type e.g Sale"
                                          },
                                          "TypeDesc": {
                                            "type": "string",
                                            "description": "The description of the type e.g Sale Order Line"
                                          },
                                          "SubTypeCode": {
                                            "type": "string",
                                            "description": "The canonical code of the sub type e.g Sale"
                                          },
                                          "SubTypeDesc": {
                                            "type": "string",
                                            "description": "The description of the sub type e.g Sale Order Line"
                                          },
                                          "Lineage": {
                                            "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                            "type": "object",
                                            "unevaluatedProperties": false,
                                            "properties": {
                                              "EntityId": {
                                                "type": "string",
                                                "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                              },
                                              "EventId": {
                                                "type": "string",
                                                "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                              },
                                              "AsOf": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                              }
                                            },
                                            "required": [
                                              "EventId,AsOf"
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "XRefIds",
                                      "Times",
                                      "Status",
                                      "Type"
                                    ]
                                  }
                                ]
                              },
                              {
                                "properties": {
                                  "DiscountId": {
                                    "type": "string",
                                    "description": "The 'natural' sales order number, that this discount line is linked and applied to"
                                  },
                                  "DiscountNumber": {
                                    "type": "string",
                                    "description": "The 'natural' sales order number, that this discount line is linked and applied to"
                                  },
                                  "DiscountCode": {
                                    "type": "string",
                                    "description": "The unique code of the Discount / Promo / Coupon e.g AD020"
                                  },
                                  "AllowedApplyLevel": {
                                    "type": "string",
                                    "description": "The level that the Discount can be applied",
                                    "enum": [
                                      "Header",
                                      "Line",
                                      "Both"
                                    ]
                                  },
                                  "DiscountType": {
                                    "type": "string",
                                    "description": "The specific type of the discount e.g BuyOneGetOneFree, BuyOneGetOneFree",
                                    "enum": [
                                      "BuyOneGetOneFree",
                                      "BuyOneGetDiscount",
                                      "PercentageDiscount",
                                      "FixedAmountOffDiscount",
                                      "QuantityDiscount",
                                      "LoyaltyPoints",
                                      "SeasonalSale",
                                      "FlashSale",
                                      "ClearanceSale",
                                      "BundleDeal",
                                      "FreeShipping",
                                      "FreeGiftWithPurchase",
                                      "RebateOffer",
                                      "Sampling",
                                      "BuyOneGetOneFree",
                                      "FirstTimeCustomerDiscount",
                                      "ReferralDiscount",
                                      "PriceMatchGuarantee",
                                      "TradeInDiscount"
                                    ]
                                  },
                                  "DiscountPurpose": {
                                    "type": "string",
                                    "description": "The purpose of the Discount e.g Promotion, Campaign, Goodwill etc"
                                  },
                                  "DiscountName": {
                                    "type": "string",
                                    "description": "The name of the discount applied in this discount line"
                                  },
                                  "DiscountDesc": {
                                    "type": "string",
                                    "description": "The name of the discount applied in this discount line"
                                  },
                                  "DiscountPercentage": {
                                    "type": "number",
                                    "description": "The percenatge discounted, if applicable e.g 10 or 10.00 for 10%"
                                  },
                                  "GLCode": {
                                    "type": "string",
                                    "description": "A GL code associated with this Discount"
                                  },
                                  "IsManualAllowed": {
                                    "type": "string",
                                    "description": "Is this allowed to be used manually? e.g Y"
                                  },
                                  "ReasonCode": {
                                    "type": "string",
                                    "description": "The reason code for the creation of this Discount e.g promoX, campaignY"
                                  },
                                  "ReasonDesc": {
                                    "type": "string",
                                    "description": "The reason description for the creation of this Discount"
                                  },
                                  "EventId": {
                                    "type": "string",
                                    "description": "The Xfuze EventId that was the source of this discount"
                                  },
                                  "AsOf": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The timestamp at which the Discount was valid 'as of', if known and applicable"
                                  }
                                },
                                "required": [
                                  "DiscountCode"
                                ]
                              }
                            ]
                          },
                          "CouponCode": {
                            "type": "string",
                            "description": "The coupon code captured that triggered the discount to be applied"
                          },
                          "CouponDesc": {
                            "type": "string",
                            "description": "The coupon description of the code captured that triggered the discount to be applied"
                          },
                          "Totals": {
                            "type": "object",
                            "description": "The collection of possible totals, related to the discount.  Actual usage and ability to populate depends on the richness of the sources..",
                            "unevaluatedProperties": false,
                            "properties": {
                              "DiscountTotal": {
                                "description": "",
                                "type": "object",
                                "properties": {
                                  "ExTax": {
                                    "type": [
                                      "number",
                                      "null"
                                    ],
                                    "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                  },
                                  "IncTax": {
                                    "type": [
                                      "number",
                                      "null"
                                    ],
                                    "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                  },
                                  "Tax": {
                                    "type": [
                                      "number",
                                      "null"
                                    ],
                                    "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                  },
                                  "Localisation": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                  },
                                  "Currency": {
                                    "description": "The canonical Currency of the price",
                                    "type": "object",
                                    "anyOf": [
                                      {
                                        "required": [
                                          "ISO2"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "ISO3"
                                        ]
                                      }
                                    ],
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "ISO2": {
                                        "type": "string",
                                        "description": "The canonical ISO2 currency code"
                                      },
                                      "ISO3": {
                                        "type": "string",
                                        "description": "The canonical ISO3 currency code"
                                      },
                                      "Number": {
                                        "type": "string",
                                        "description": "The canonical currency number"
                                      },
                                      "DecimalPlaces": {
                                        "type": "string",
                                        "description": "The canonical number of decimal places for the currency"
                                      },
                                      "CountryCodes": {
                                        "type": "array",
                                        "description": "The canonical array of ISO3 country codes officially using this currency",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "Symbol": {
                                        "type": "string",
                                        "description": "The canonical symbol for the currency"
                                      },
                                      "Lineage": {
                                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                        "type": "object",
                                        "unevaluatedProperties": false,
                                        "properties": {
                                          "EntityId": {
                                            "type": "string",
                                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                          },
                                          "EventId": {
                                            "type": "string",
                                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                          },
                                          "AsOf": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                          }
                                        },
                                        "required": [
                                          "EventId,AsOf"
                                        ]
                                      }
                                    }
                                  },
                                  "Lineage": {
                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "EntityId": {
                                        "type": "string",
                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                      },
                                      "EventId": {
                                        "type": "string",
                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                      },
                                      "AsOf": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                      }
                                    },
                                    "required": [
                                      "EventId,AsOf"
                                    ]
                                  }
                                }
                              }
                            },
                            "required": [
                              "DiscountTotal"
                            ]
                          },
                          "ReasonCode": {
                            "type": "string",
                            "description": "The reason code for this discount line"
                          },
                          "ReasonDesc": {
                            "type": "string",
                            "description": "The reason desc for this discount line"
                          },
                          "Lineage": {
                            "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                            "type": "object",
                            "unevaluatedProperties": false,
                            "properties": {
                              "EntityId": {
                                "type": "string",
                                "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                              },
                              "EventId": {
                                "type": "string",
                                "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                              },
                              "AsOf": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                              }
                            },
                            "required": [
                              "EventId,AsOf"
                            ]
                          }
                        },
                        "required": [
                          "LineIds",
                          "Discount",
                          "Totals"
                        ]
                      }
                    ]
                  }
                },
                "TaxLines": {
                  "type": "array",
                  "description": "The collection (array) of tax lines associated with the composed line entity",
                  "items": {
                    "type": "object",
                    "description": "A tax line related to the tax against a sales order entity (SOH, SOL).  Multiple tax lines are possible (1:*), thus this line object is typically in an array",
                    "unevaluatedProperties": false,
                    "allOf": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "properties": {
                              "EntityId": {
                                "type": "string",
                                "description": "The (required) globally unique synthetic Xfuze Id for the entity instance this event is related to and whose payload is the subject of change, unique across all entities. Typically of the format [EntityType::EntitySubType]_[SystemCode]_[RawEntityId] where RawEntityId can be composed of 1 or more source fields to create singular uniqueness e.g SalesOrderLine::Return_Hybris_8106008620_RET1"
                              },
                              "EntityType": {
                                "type": "string",
                                "description": "The (required) entity type, allowing for a typing system (top level) for entities, where the type is sourced from the master Xfuze control list e.g SalesOrderLine"
                              },
                              "EntitySubType": {
                                "type": "string",
                                "description": "An (optional) entity subtype, allowing for further, more refined typing of the core type for accuracy of interpretation e.g ReturnLine, CancelLine, VoidLine etc"
                              },
                              "ParentEntityId": {
                                "type": "string",
                                "description": "An (required) canonical Xfuze parent entity Id, where there is a natural parent a level above, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
                              },
                              "ParentEntityType": {
                                "type": "string",
                                "description": "An (required) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                              },
                              "CompositeEntityId": {
                                "type": "string",
                                "description": "An (optional) canonical Xfuze parent entity Id, where there is a natural 'composition' and containing parent, this importantly allows natural grouping by the parent for different access patterns e.g SalesOrder_Hybris_8106008620"
                              },
                              "CompositeEntityType": {
                                "type": "string",
                                "description": "An (optional) canonical Xfuze parent entity type.  Ideally this should always be created even if the top parent (would have same values as EntityId and EntityType) allowing a consistent place to group by to get all records in the hierarchy  e.g SalesOrder"
                              }
                            },
                            "required": [
                              "EntityId",
                              "EntityType",
                              "ParentEntityId",
                              "ParentEntityType",
                              "CompositeEntityId",
                              "CompositeEntityType"
                            ]
                          },
                          {
                            "properties": {
                              "XRefIds": {
                                "description": "The list of cross reference lookups, i.e all the ways to look up this entity by the various data points, both in canonical Ids and system specific ones",
                                "type": "array",
                                "minItems": 1,
                                "items": {
                                  "type": "object",
                                  "description": "An object to capture cross referencing fields to support entity lookups by various surrogate keys spanning systems",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "Id": {
                                      "type": "string",
                                      "description": "The value of the id/key to lookup using (i.e surrogate key 'value') e.g TRAN123456"
                                    },
                                    "SystemCode": {
                                      "type": "string",
                                      "description": "The system mastering the 'Code' field and its 'Id' value e.g PMC"
                                    },
                                    "Code": {
                                      "type": "string",
                                      "description": "The name of the id/key to lookup using (i.e surrogate key 'value') as is its exact name from source e.g transId"
                                    },
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId this cross referencing lookup resolves to e.g SalesOrder_PMC_TRAN123456"
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                }
                              },
                              "TimeZones": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "required": [
                                    "TimeZone"
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "TimeZone": {
                                      "type": "string",
                                      "description": "The Time Zone e.g Europe/London"
                                    },
                                    "TimeZoneOffset": {
                                      "type": "string",
                                      "description": "UTC+01:00"
                                    },
                                    "TimeZoneExplicitCode": {
                                      "type": "string",
                                      "description": "Indicates whether the timeZone offset is explicit in the source (e.g +01:00) or implicit (e.g assumed to be +01:00, and thus reformatting work is needed to make explicit)",
                                      "enum": [
                                        "ExplicitOffsetInSource",
                                        "ImplicitOffsetNotInSource"
                                      ]
                                    },
                                    "Country": {
                                      "description": "The country of the timezone",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                        },
                                        "CountryCode": {
                                          "type": "string",
                                          "description": "The canonical CountryCode (country-code) country code e.g 036"
                                        },
                                        "Name": {
                                          "type": "string",
                                          "description": "The canonical (official) 'Name' of the country e.g Australia"
                                        },
                                        "AltName": {
                                          "type": "string",
                                          "description": "An alternate name for the country"
                                        },
                                        "RegionCode": {
                                          "type": "string",
                                          "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                        },
                                        "RegionName": {
                                          "type": "string",
                                          "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                        },
                                        "SubRegionCode": {
                                          "type": "string",
                                          "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                        },
                                        "SubRegionName": {
                                          "type": "string",
                                          "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                        },
                                        "IntermediateRegionCode": {
                                          "type": "string",
                                          "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                        },
                                        "IntermediateRegionName": {
                                          "type": "string",
                                          "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                        },
                                        "Coordinates": {
                                          "description": "The canonical Coordinates of the country (canonical from google)",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "Latitude": {
                                              "type": "number",
                                              "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                              "minimum": -90,
                                              "maximum": 90
                                            },
                                            "Longitude": {
                                              "type": "number",
                                              "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                              "minimum": -180,
                                              "maximum": 180
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "Latitude",
                                            "Longitude"
                                          ]
                                        },
                                        "PrimaryLanguage": {
                                          "type": "string",
                                          "description": "The canonical Primary Language of the country"
                                        },
                                        "Currency": {
                                          "description": "The canonical Currency Code of the country (canonical from google)",
                                          "type": "object",
                                          "anyOf": [
                                            {
                                              "required": [
                                                "ISO2"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "ISO3"
                                              ]
                                            }
                                          ],
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "ISO2": {
                                              "type": "string",
                                              "description": "The canonical ISO2 currency code"
                                            },
                                            "ISO3": {
                                              "type": "string",
                                              "description": "The canonical ISO3 currency code"
                                            },
                                            "Number": {
                                              "type": "string",
                                              "description": "The canonical currency number"
                                            },
                                            "DecimalPlaces": {
                                              "type": "string",
                                              "description": "The canonical number of decimal places for the currency"
                                            },
                                            "CountryCodes": {
                                              "type": "array",
                                              "description": "The canonical array of ISO3 country codes officially using this currency",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "Symbol": {
                                              "type": "string",
                                              "description": "The canonical symbol for the currency"
                                            },
                                            "Lineage": {
                                              "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                              "type": "object",
                                              "unevaluatedProperties": false,
                                              "properties": {
                                                "EntityId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                                },
                                                "EventId": {
                                                  "type": "string",
                                                  "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                                },
                                                "AsOf": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                                }
                                              },
                                              "required": [
                                                "EventId,AsOf"
                                              ]
                                            }
                                          }
                                        },
                                        "IsEuropeanCountry": {
                                          "type": "string",
                                          "description": "Is this country an european one? e.g Y",
                                          "enum": [
                                            "Y",
                                            "N",
                                            "U"
                                          ]
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                }
                              },
                              "Times": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "anyOf": [
                                    {
                                      "required": [
                                        "DateId",
                                        "UTC",
                                        "Millis"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "DateId",
                                        "Local",
                                        "TimeZone"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "DateId": {
                                      "type": "string",
                                      "description": "The Xfuze Date dim Id e.g Date_20231001"
                                    },
                                    "HourId": {
                                      "type": "string",
                                      "description": "The Xfuze hour dim Id e.g Hour_2023100112"
                                    },
                                    "UTC": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "An Xfuze timestamp represented in UTC e.g 2023-01-12T12:03:00.000+0000"
                                    },
                                    "Local": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "An Xfuze timestamp represented in local time e.g 2023-01-12T13:03:00.000+0100"
                                    },
                                    "PartyLocal": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "An Xfuze timestamp represented in party local time e.g 2023-01-12T13:03:00.000+0100"
                                    },
                                    "Millis": {
                                      "type": "number",
                                      "description": "An Xfuze timestamp represented in unix Millis e.g 1673525621103"
                                    },
                                    "TimeZone": {
                                      "type": "string",
                                      "description": "The related time zone"
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                }
                              },
                              "Status": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "required": [
                                    "StatusCode"
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "StatusClass": {
                                      "type": "string",
                                      "description": "The class of the status e.g Retail, Hire, TailorMe"
                                    },
                                    "StatusCode": {
                                      "type": "string",
                                      "description": "The (required) unique code for the status e.g ProcessingStatus"
                                    },
                                    "StatusDesc": {
                                      "type": "string",
                                      "description": "The description for the status e.g ProcessingStatus"
                                    },
                                    "SeqNo": {
                                      "type": "number",
                                      "description": "The sequence number of this status in relation to all the possible values in terms of time order e.g 2"
                                    },
                                    "ReasonCode": {
                                      "type": "string",
                                      "description": "A reason code for the status being in this state e.g Faulty Product"
                                    },
                                    "ReasonDesc": {
                                      "type": "string",
                                      "description": "A reason description for the status being in this state"
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                }
                              },
                              "Type": {
                                "type": "object",
                                "required": [
                                  "TypeCode"
                                ],
                                "unevaluatedProperties": false,
                                "properties": {
                                  "TypeClass": {
                                    "type": "string",
                                    "description": "The class of the type e.g Concession, Hire"
                                  },
                                  "TypeCode": {
                                    "type": "string",
                                    "description": "The canonical code of the type e.g Sale"
                                  },
                                  "TypeDesc": {
                                    "type": "string",
                                    "description": "The description of the type e.g Sale Order Line"
                                  },
                                  "SubTypeCode": {
                                    "type": "string",
                                    "description": "The canonical code of the sub type e.g Sale"
                                  },
                                  "SubTypeDesc": {
                                    "type": "string",
                                    "description": "The description of the sub type e.g Sale Order Line"
                                  },
                                  "Lineage": {
                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "EntityId": {
                                        "type": "string",
                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                      },
                                      "EventId": {
                                        "type": "string",
                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                      },
                                      "AsOf": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                      }
                                    },
                                    "required": [
                                      "EventId,AsOf"
                                    ]
                                  }
                                }
                              }
                            },
                            "required": [
                              "XRefIds",
                              "Times",
                              "Status",
                              "Type"
                            ]
                          }
                        ]
                      },
                      {
                        "properties": {
                          "LineIds": {
                            "description": "The (required) common set of order line Ids for this Tax line, not all a required individually, only what can be mapped & derived.",
                            "type": "object",
                            "unevaluatedProperties": false,
                            "properties": {
                              "SalesOrderLineId": {
                                "type": "string",
                                "description": "The (required) SalesOrderLineId Id, in Xfuze canonical form, identifying this sales order line amongst other lines, in the form of SalesOrderLine::[type]_[sourceSystem]_[SalesOrderLineKey] e.g SalesOrder::Sale_PMC_123456789_1"
                              },
                              "SalesOrderLineNumberKey": {
                                "type": "string",
                                "description": "The 'natural' sales order line number key, typically either a combination of SalesOrderNumber & a 'sequence number' (derived) OR explicitly supplied unique Id from source - also used to construct the synthetic SOL Xfuze Ids. e.g 123456789_1"
                              },
                              "SalesOrderLineProductKey": {
                                "type": "string",
                                "description": "The 'natural' sales order line product key, typically either a combination of SalesOrderNumber & a 'product id' (e.g SKU, EAN) OR explicitly supplied unique Id from source - also used to construct the synthetic SOL Xfuze Ids. e.g 123456789_1201764"
                              },
                              "SalesOrderLineProductKeyType": {
                                "type": "string",
                                "description": "The type of the product part of SalesOrderLineProductKey e.g Sku, EAN"
                              },
                              "SalesOrderLineSeq": {
                                "type": "number",
                                "description": "The ordinal line sequence number e.g 2"
                              },
                              "OriginalSalesOrderLineId": {
                                "type": "string",
                                "description": "The SalesOrderLineId Id, in Xfuze canonical form, identifying an 'original' sales order, in the form of SalesOrder::[type]_[sourceSystem]_[OriginalSalesOrderKey] e.g SalesOrder::Sale_PMC_987654321"
                              },
                              "OriginalSalesOrderLineNumberKey": {
                                "type": "string",
                                "description": "The original 'natural' sales order 'key' / 'number', typically as a way to link related orders together the can be physically seperate and need a linking e.g Return,Exchange,"
                              },
                              "OriginalSalesOrderLineSeq": {
                                "type": "number",
                                "description": "The original ordinal line sequence number e.g 1"
                              },
                              "SalesOrderIds": {
                                "description": "The (required) common set of order Ids for this order, not all a required individually, only what can be mapped & derived",
                                "type": "object",
                                "unevaluatedProperties": false,
                                "properties": {
                                  "SalesOrderId": {
                                    "type": "string",
                                    "description": "The (required) SalesOrderId Id, in Xfuze canonical form, identifying this sales order, in the form of SalesOrder::[type]_[sourceSystem]_[SalesOrderKey] e.g SalesOrder::Return_PMC_RET123456789"
                                  },
                                  "SalesOrderKey": {
                                    "type": "string",
                                    "description": "The (required) 'natural' sales order key/number, typically as the system of entry defines (online or retail), and also used to construct the synthetic SO Xfuze Ids. e.g RET123456789"
                                  },
                                  "OriginalSalesOrderId": {
                                    "type": "string",
                                    "description": "The SalesOrderId Id, in Xfuze canonical form, identifying an 'original' sales order, in the form of SalesOrder::[type]_[sourceSystem]_[OriginalSalesOrderKey] e.g SalesOrder::Sale_PMC_987654321"
                                  },
                                  "OriginalSalesOrderKey": {
                                    "type": "string",
                                    "description": "The original 'natural' sales order key/number, typically as a way to link related orders together the can be physically separate and need a linking (Return,Exchange etc) e.g 987654321"
                                  },
                                  "ParentSalesOrderId": {
                                    "type": "string",
                                    "description": "The SalesOrderId Id, in Xfuze canonical form, identifying an 'original' sales order, in the form of SalesOrder::[type]_[sourceSystem]_[OriginalSalesOrderKey] e.g SalesOrder::Sale_PMC_987654321"
                                  },
                                  "ParentSalesOrderKey": {
                                    "type": "string",
                                    "description": "The parent 'natural' sales order key/number, typically as a way to link to parent orders in an order hierarchy, where one child order has a single parent e.g HireOrder parent order sits above individual hire orders for formal wear hire. NOTE: SalesOrderId should contain a parent part if this is the case in its ID construction "
                                  },
                                  "SalesOrderReferenceNumber": {
                                    "type": "string",
                                    "description": "The customer facing reference number/code, as a customer would see externally, as opposed to an internal key e.g ORD-RET-2044534"
                                  },
                                  "OriginalSalesOrderReferenceNumber": {
                                    "type": "string",
                                    "description": "The original 'natural' customer facing reference number/code, typically as a way to link related order together (Return,Exchange) e.g ORD-2044534"
                                  },
                                  "ReceiptNumber": {
                                    "type": "string",
                                    "description": "The customer facing receipt number/code, as a customer would see externally, as opposed to an internal key e.g ORD-RET-2044534"
                                  },
                                  "OriginalReceiptNumber": {
                                    "type": "string",
                                    "description": "The original 'natural' customer facing receipt number/code, typically as a way to link related order together (Return,Exchange) e.g ORD-2044534"
                                  }
                                },
                                "required": [
                                  "SalesOrderId",
                                  "SalesOrderNumber"
                                ]
                              }
                            },
                            "required": [
                              "SalesOrderId",
                              "SalesOrderNumber",
                              "SalesOrderLineId",
                              "SalesOrderLineKey"
                            ]
                          },
                          "TaxLineKey": {
                            "type": "string",
                            "description": "The 'natural' Tax line key/number, typically either a combination of SalesOrderNumber & a 'sequence number' (derived) OR explicitly supplied unique Id from source - also used to construct the synthetic SOL Xfuze Ids. e.g 123456789_1"
                          },
                          "TaxLineSeq": {
                            "type": "number",
                            "description": "The ordinal line sequence number e.g 2"
                          },
                          "Tax": {
                            "description": "The Tax associated with this line",
                            "type": "object",
                            "unevaluatedProperties": false,
                            "properties": {
                              "TaxCode": {
                                "type": "string",
                                "description": "The unique code of the tax e.g VAT20"
                              },
                              "TaxSchemeCode": {
                                "type": "string",
                                "description": "The scheme of the tax e.g VAT"
                              },
                              "TaxTypeCode": {
                                "type": "string",
                                "description": "The type of the tax e.g Sales"
                              },
                              "TaxGroupId": {
                                "type": "string",
                                "description": "The group id this tax code is part of"
                              },
                              "TaxGroupCode": {
                                "type": "string",
                                "description": "The group code this tax code is part of"
                              },
                              "IsTaxExempt": {
                                "type": "string",
                                "description": "Is this tax line a tex exempt one? e.g Y",
                                "enum": [
                                  "Y",
                                  "N",
                                  "U"
                                ]
                              },
                              "TaxRate": {
                                "type": "number",
                                "description": "The tax rate as a percentage e.g 20.00"
                              },
                              "GLCode": {
                                "type": "string",
                                "description": "A GL code associated with this Tax"
                              },
                              "Lineage": {
                                "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                "type": "object",
                                "unevaluatedProperties": false,
                                "properties": {
                                  "EntityId": {
                                    "type": "string",
                                    "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                  },
                                  "EventId": {
                                    "type": "string",
                                    "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                  },
                                  "AsOf": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                  }
                                },
                                "required": [
                                  "EventId,AsOf"
                                ]
                              }
                            }
                          },
                          "Totals": {
                            "type": "object",
                            "description": "The collection of possible totals, related to the tax line.  Actual usage and ability to populate depends on the richness of the sources.",
                            "unevaluatedProperties": false,
                            "properties": {
                              "TaxTotal": {
                                "description": "The total tax paid / payable on this line",
                                "type": "object",
                                "properties": {
                                  "ExTax": {
                                    "type": [
                                      "number",
                                      "null"
                                    ],
                                    "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                  },
                                  "IncTax": {
                                    "type": [
                                      "number",
                                      "null"
                                    ],
                                    "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                  },
                                  "Tax": {
                                    "type": [
                                      "number",
                                      "null"
                                    ],
                                    "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                  },
                                  "Localisation": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                  },
                                  "Currency": {
                                    "description": "The canonical Currency of the price",
                                    "type": "object",
                                    "anyOf": [
                                      {
                                        "required": [
                                          "ISO2"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "ISO3"
                                        ]
                                      }
                                    ],
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "ISO2": {
                                        "type": "string",
                                        "description": "The canonical ISO2 currency code"
                                      },
                                      "ISO3": {
                                        "type": "string",
                                        "description": "The canonical ISO3 currency code"
                                      },
                                      "Number": {
                                        "type": "string",
                                        "description": "The canonical currency number"
                                      },
                                      "DecimalPlaces": {
                                        "type": "string",
                                        "description": "The canonical number of decimal places for the currency"
                                      },
                                      "CountryCodes": {
                                        "type": "array",
                                        "description": "The canonical array of ISO3 country codes officially using this currency",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "Symbol": {
                                        "type": "string",
                                        "description": "The canonical symbol for the currency"
                                      },
                                      "Lineage": {
                                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                        "type": "object",
                                        "unevaluatedProperties": false,
                                        "properties": {
                                          "EntityId": {
                                            "type": "string",
                                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                          },
                                          "EventId": {
                                            "type": "string",
                                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                          },
                                          "AsOf": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                          }
                                        },
                                        "required": [
                                          "EventId,AsOf"
                                        ]
                                      }
                                    }
                                  },
                                  "Lineage": {
                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "EntityId": {
                                        "type": "string",
                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                      },
                                      "EventId": {
                                        "type": "string",
                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                      },
                                      "AsOf": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                      }
                                    },
                                    "required": [
                                      "EventId,AsOf"
                                    ]
                                  }
                                }
                              },
                              "TaxableAmountTotal": {
                                "description": "The total amount of sale subject to tax on this line",
                                "type": "object",
                                "properties": {
                                  "ExTax": {
                                    "type": [
                                      "number",
                                      "null"
                                    ],
                                    "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                  },
                                  "IncTax": {
                                    "type": [
                                      "number",
                                      "null"
                                    ],
                                    "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                  },
                                  "Tax": {
                                    "type": [
                                      "number",
                                      "null"
                                    ],
                                    "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                  },
                                  "Localisation": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                  },
                                  "Currency": {
                                    "description": "The canonical Currency of the price",
                                    "type": "object",
                                    "anyOf": [
                                      {
                                        "required": [
                                          "ISO2"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "ISO3"
                                        ]
                                      }
                                    ],
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "ISO2": {
                                        "type": "string",
                                        "description": "The canonical ISO2 currency code"
                                      },
                                      "ISO3": {
                                        "type": "string",
                                        "description": "The canonical ISO3 currency code"
                                      },
                                      "Number": {
                                        "type": "string",
                                        "description": "The canonical currency number"
                                      },
                                      "DecimalPlaces": {
                                        "type": "string",
                                        "description": "The canonical number of decimal places for the currency"
                                      },
                                      "CountryCodes": {
                                        "type": "array",
                                        "description": "The canonical array of ISO3 country codes officially using this currency",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "Symbol": {
                                        "type": "string",
                                        "description": "The canonical symbol for the currency"
                                      },
                                      "Lineage": {
                                        "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                        "type": "object",
                                        "unevaluatedProperties": false,
                                        "properties": {
                                          "EntityId": {
                                            "type": "string",
                                            "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                          },
                                          "EventId": {
                                            "type": "string",
                                            "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                          },
                                          "AsOf": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                          }
                                        },
                                        "required": [
                                          "EventId,AsOf"
                                        ]
                                      }
                                    }
                                  },
                                  "Lineage": {
                                    "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                    "type": "object",
                                    "unevaluatedProperties": false,
                                    "properties": {
                                      "EntityId": {
                                        "type": "string",
                                        "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                      },
                                      "EventId": {
                                        "type": "string",
                                        "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                      },
                                      "AsOf": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                      }
                                    },
                                    "required": [
                                      "EventId,AsOf"
                                    ]
                                  }
                                }
                              }
                            },
                            "required": [
                              "TaxTotal"
                            ]
                          },
                          "JurisdictionLines": {
                            "type": "array",
                            "description": "The collection (array) of duty jurisdiction lines associated with the line.",
                            "items": {
                              "type": "object",
                              "unevaluatedProperties": false,
                              "properties": {
                                "JurisCode": {
                                  "type": "string",
                                  "description": "The unique code of the TaxJurisdiction"
                                },
                                "JurisName": {
                                  "type": "string",
                                  "description": "The scheme of the TaxJurisdiction"
                                },
                                "DutiableValue": {
                                  "description": "The taxable duty amount in the jurisdiction",
                                  "type": "object",
                                  "properties": {
                                    "ExTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, exclusive of any tax.  One of this OR IncTax OR Tax required"
                                    },
                                    "IncTax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial amount of the Price, inclusive of any tax.  One of this OR ExTax OR Tax required"
                                    },
                                    "Tax": {
                                      "type": [
                                        "number",
                                        "null"
                                      ],
                                      "description": "The financial tax amount of the Price, sometimes explicit, sometimes can be derived as IncTax - ExTax.  One of this OR ExTax OR IncTax required"
                                    },
                                    "Localisation": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The localisation of the price indicating the locale of the LCY values e.g UK, IE"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency of the price",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "DutiableTaxRate": {
                                  "type": "number",
                                  "description": "The duty rate as a percentage for the jurisdiction e.g 20.00"
                                },
                                "JuriCountry": {
                                  "type": "object",
                                  "description": "A country object, based on official ISO 3166",
                                  "anyOf": [
                                    {
                                      "required": [
                                        "ISO2"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "ISO3"
                                      ]
                                    }
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "ISO2": {
                                      "type": "string",
                                      "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                    },
                                    "ISO3": {
                                      "type": "string",
                                      "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                    },
                                    "CountryCode": {
                                      "type": "string",
                                      "description": "The canonical CountryCode (country-code) country code e.g 036"
                                    },
                                    "Name": {
                                      "type": "string",
                                      "description": "The canonical (official) 'Name' of the country e.g Australia"
                                    },
                                    "AltName": {
                                      "type": "string",
                                      "description": "An alternate name for the country"
                                    },
                                    "RegionCode": {
                                      "type": "string",
                                      "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                    },
                                    "RegionName": {
                                      "type": "string",
                                      "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                    },
                                    "SubRegionCode": {
                                      "type": "string",
                                      "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                    },
                                    "SubRegionName": {
                                      "type": "string",
                                      "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                    },
                                    "IntermediateRegionCode": {
                                      "type": "string",
                                      "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                    },
                                    "IntermediateRegionName": {
                                      "type": "string",
                                      "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                    },
                                    "Coordinates": {
                                      "description": "The canonical Coordinates of the country (canonical from google)",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Latitude": {
                                          "type": "number",
                                          "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                          "minimum": -90,
                                          "maximum": 90
                                        },
                                        "Longitude": {
                                          "type": "number",
                                          "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                          "minimum": -180,
                                          "maximum": 180
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "Latitude",
                                        "Longitude"
                                      ]
                                    },
                                    "PrimaryLanguage": {
                                      "type": "string",
                                      "description": "The canonical Primary Language of the country"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency Code of the country (canonical from google)",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "IsEuropeanCountry": {
                                      "type": "string",
                                      "description": "Is this country an european one? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "DutyCountryOfOrigin": {
                                  "type": "object",
                                  "description": "A country object, based on official ISO 3166",
                                  "anyOf": [
                                    {
                                      "required": [
                                        "ISO2"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "ISO3"
                                      ]
                                    }
                                  ],
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "ISO2": {
                                      "type": "string",
                                      "description": "The canonical ISO2 (alpha-2) country code e.g AU"
                                    },
                                    "ISO3": {
                                      "type": "string",
                                      "description": "The canonical ISO3 (alpha-3) country code e.g AUS"
                                    },
                                    "CountryCode": {
                                      "type": "string",
                                      "description": "The canonical CountryCode (country-code) country code e.g 036"
                                    },
                                    "Name": {
                                      "type": "string",
                                      "description": "The canonical (official) 'Name' of the country e.g Australia"
                                    },
                                    "AltName": {
                                      "type": "string",
                                      "description": "An alternate name for the country"
                                    },
                                    "RegionCode": {
                                      "type": "string",
                                      "description": "The canonical RegionCode (region-code) for the country code e.g 009"
                                    },
                                    "RegionName": {
                                      "type": "string",
                                      "description": "The canonical RegionName (region) for the country code e.g Oceania"
                                    },
                                    "SubRegionCode": {
                                      "type": "string",
                                      "description": "The canonical SubRegionCode (sub-region-code) for the country code e.g 053"
                                    },
                                    "SubRegionName": {
                                      "type": "string",
                                      "description": "The canonical Sub Region Name (sub-region) for the country code e.g Australia and New Zealand"
                                    },
                                    "IntermediateRegionCode": {
                                      "type": "string",
                                      "description": "The canonical Intermediate Region Code (intermediate-region-code) for the country code"
                                    },
                                    "IntermediateRegionName": {
                                      "type": "string",
                                      "description": "The canonical Intermediate Region Name (intermediate-region) for the country code"
                                    },
                                    "Coordinates": {
                                      "description": "The canonical Coordinates of the country (canonical from google)",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "Latitude": {
                                          "type": "number",
                                          "description": "The 'lat' value of the coordinate.  It ranges from -90 (South Pole) to 90 (North Pole)",
                                          "minimum": -90,
                                          "maximum": 90
                                        },
                                        "Longitude": {
                                          "type": "number",
                                          "description": "The 'long' value of the coordinate.  It ranges from -180 (West) to 180 (East)",
                                          "minimum": -180,
                                          "maximum": 180
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "Latitude",
                                        "Longitude"
                                      ]
                                    },
                                    "PrimaryLanguage": {
                                      "type": "string",
                                      "description": "The canonical Primary Language of the country"
                                    },
                                    "Currency": {
                                      "description": "The canonical Currency Code of the country (canonical from google)",
                                      "type": "object",
                                      "anyOf": [
                                        {
                                          "required": [
                                            "ISO2"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "ISO3"
                                          ]
                                        }
                                      ],
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "ISO2": {
                                          "type": "string",
                                          "description": "The canonical ISO2 currency code"
                                        },
                                        "ISO3": {
                                          "type": "string",
                                          "description": "The canonical ISO3 currency code"
                                        },
                                        "Number": {
                                          "type": "string",
                                          "description": "The canonical currency number"
                                        },
                                        "DecimalPlaces": {
                                          "type": "string",
                                          "description": "The canonical number of decimal places for the currency"
                                        },
                                        "CountryCodes": {
                                          "type": "array",
                                          "description": "The canonical array of ISO3 country codes officially using this currency",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "Symbol": {
                                          "type": "string",
                                          "description": "The canonical symbol for the currency"
                                        },
                                        "Lineage": {
                                          "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                          "type": "object",
                                          "unevaluatedProperties": false,
                                          "properties": {
                                            "EntityId": {
                                              "type": "string",
                                              "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                            },
                                            "EventId": {
                                              "type": "string",
                                              "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                            },
                                            "AsOf": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                            }
                                          },
                                          "required": [
                                            "EventId,AsOf"
                                          ]
                                        }
                                      }
                                    },
                                    "IsEuropeanCountry": {
                                      "type": "string",
                                      "description": "Is this country an european one? e.g Y",
                                      "enum": [
                                        "Y",
                                        "N",
                                        "U"
                                      ]
                                    },
                                    "Lineage": {
                                      "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                      "type": "object",
                                      "unevaluatedProperties": false,
                                      "properties": {
                                        "EntityId": {
                                          "type": "string",
                                          "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                        },
                                        "EventId": {
                                          "type": "string",
                                          "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                        },
                                        "AsOf": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                        }
                                      },
                                      "required": [
                                        "EventId,AsOf"
                                      ]
                                    }
                                  }
                                },
                                "IsJuriTaxExempt": {
                                  "type": "string",
                                  "description": "Is this TaxJurisdiction a tex exempt one? e.g Y",
                                  "enum": [
                                    "Y",
                                    "N",
                                    "U"
                                  ]
                                },
                                "GLCode": {
                                  "type": "string",
                                  "description": "A GL code associated with this TaxJurisdiction"
                                },
                                "Lineage": {
                                  "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                                  "type": "object",
                                  "unevaluatedProperties": false,
                                  "properties": {
                                    "EntityId": {
                                      "type": "string",
                                      "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                                    },
                                    "EventId": {
                                      "type": "string",
                                      "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                                    },
                                    "AsOf": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                                    }
                                  },
                                  "required": [
                                    "EventId,AsOf"
                                  ]
                                }
                              }
                            }
                          },
                          "Lineage": {
                            "description": "The event lineage (e.g eventId, asOf) that lead to the observed/derived state of this object/data part",
                            "type": "object",
                            "unevaluatedProperties": false,
                            "properties": {
                              "EntityId": {
                                "type": "string",
                                "description": "The Xfuze EntityId that was the target of the change required from the event that resulted in this data / part"
                              },
                              "EventId": {
                                "type": "string",
                                "description": "The Xfuze EventId that was the source of change that resulted in this data / part"
                              },
                              "AsOf": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp (event occurred timestamp typically) at which the data was valid 'as of', if known and applicable.  As of does not mean changed at, rather, the  time we know this data was true and valid, its possible it didnt change between adjacent events for example."
                              }
                            },
                            "required": [
                              "EventId,AsOf"
                            ]
                          }
                        },
                        "required": [
                          "LineIds",
                          "Tax",
                          "Totals"
                        ]
                      }
                    ]
                  }
                }
              },
              "required": [
                "Line"
              ]
            }
          }
        }
      },
      "required": [
        "DomainEvent"
      ]
    }
  ]
}